<?xml version="1.0" encoding="utf-8" ?>
<?xml-stylesheet type='text/xsl' href="scriptsql.xsl"?>
<root xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<database includeDrop="true">EPrescription</database>
<procedures>
		
		<procedure owner="dbo" name="ClinicalStats_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets all records from the ClinicalStats table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[StatId],
					[PatientCode],
					[TID],
					[FirstName],
					[LastName],
					[DOB],
					[Sex],
					[Nationality],
					[PatientStart],
					[VitalSign],
					[Lab],
					[Xray],
					[UltraSound],
					[Cardiology],
					[MedReport],
					[ChargedCodes],
					[IsCompleted],
					[CreateDate]
				FROM
					[dbo].[ClinicalStats]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ClinicalStats_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the ClinicalStats table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[StatId]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [StatId]'
				SET @SQL = @SQL + ', [PatientCode]'
				SET @SQL = @SQL + ', [TID]'
				SET @SQL = @SQL + ', [FirstName]'
				SET @SQL = @SQL + ', [LastName]'
				SET @SQL = @SQL + ', [DOB]'
				SET @SQL = @SQL + ', [Sex]'
				SET @SQL = @SQL + ', [Nationality]'
				SET @SQL = @SQL + ', [PatientStart]'
				SET @SQL = @SQL + ', [VitalSign]'
				SET @SQL = @SQL + ', [Lab]'
				SET @SQL = @SQL + ', [Xray]'
				SET @SQL = @SQL + ', [UltraSound]'
				SET @SQL = @SQL + ', [Cardiology]'
				SET @SQL = @SQL + ', [MedReport]'
				SET @SQL = @SQL + ', [ChargedCodes]'
				SET @SQL = @SQL + ', [IsCompleted]'
				SET @SQL = @SQL + ', [CreateDate]'
				SET @SQL = @SQL + ' FROM [dbo].[ClinicalStats]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [StatId],'
				SET @SQL = @SQL + ' [PatientCode],'
				SET @SQL = @SQL + ' [TID],'
				SET @SQL = @SQL + ' [FirstName],'
				SET @SQL = @SQL + ' [LastName],'
				SET @SQL = @SQL + ' [DOB],'
				SET @SQL = @SQL + ' [Sex],'
				SET @SQL = @SQL + ' [Nationality],'
				SET @SQL = @SQL + ' [PatientStart],'
				SET @SQL = @SQL + ' [VitalSign],'
				SET @SQL = @SQL + ' [Lab],'
				SET @SQL = @SQL + ' [Xray],'
				SET @SQL = @SQL + ' [UltraSound],'
				SET @SQL = @SQL + ' [Cardiology],'
				SET @SQL = @SQL + ' [MedReport],'
				SET @SQL = @SQL + ' [ChargedCodes],'
				SET @SQL = @SQL + ' [IsCompleted],'
				SET @SQL = @SQL + ' [CreateDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(1) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[ClinicalStats]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="ClinicalStats_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Inserts a record into the ClinicalStats table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@StatId" type="bigint" direction="Output" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@PatientCode" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Tid" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@FirstName" type="nvarchar" direction="Input" size="30" precision="0" scale="0" param="(30)" nulldefault=""/>
				<parameter name="@LastName" type="nvarchar" direction="Input" size="30" precision="0" scale="0" param="(30)" nulldefault=""/>
				<parameter name="@Dob" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@Sex" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@Nationality" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@PatientStart" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@VitalSign" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Lab" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Xray" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@UltraSound" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Cardiology" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@MedReport" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@ChargedCodes" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@IsCompleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[ClinicalStats]
					(
					[PatientCode]
					,[TID]
					,[FirstName]
					,[LastName]
					,[DOB]
					,[Sex]
					,[Nationality]
					,[PatientStart]
					,[VitalSign]
					,[Lab]
					,[Xray]
					,[UltraSound]
					,[Cardiology]
					,[MedReport]
					,[ChargedCodes]
					,[IsCompleted]
					,[CreateDate]
					)
				VALUES
					(
					@PatientCode
					,@Tid
					,@FirstName
					,@LastName
					,@Dob
					,@Sex
					,@Nationality
					,@PatientStart
					,@VitalSign
					,@Lab
					,@Xray
					,@UltraSound
					,@Cardiology
					,@MedReport
					,@ChargedCodes
					,@IsCompleted
					,@CreateDate
					)
				-- Get the identity value
				SET @StatId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ClinicalStats_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Updates a record in the ClinicalStats table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@StatId" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@PatientCode" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Tid" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@FirstName" type="nvarchar" direction="Input" size="30" precision="0" scale="0" param="(30)" nulldefault=""/>
				<parameter name="@LastName" type="nvarchar" direction="Input" size="30" precision="0" scale="0" param="(30)" nulldefault=""/>
				<parameter name="@Dob" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@Sex" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@Nationality" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@PatientStart" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@VitalSign" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Lab" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Xray" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@UltraSound" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Cardiology" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@MedReport" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@ChargedCodes" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@IsCompleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[ClinicalStats]
				SET
					[PatientCode] = @PatientCode
					,[TID] = @Tid
					,[FirstName] = @FirstName
					,[LastName] = @LastName
					,[DOB] = @Dob
					,[Sex] = @Sex
					,[Nationality] = @Nationality
					,[PatientStart] = @PatientStart
					,[VitalSign] = @VitalSign
					,[Lab] = @Lab
					,[Xray] = @Xray
					,[UltraSound] = @UltraSound
					,[Cardiology] = @Cardiology
					,[MedReport] = @MedReport
					,[ChargedCodes] = @ChargedCodes
					,[IsCompleted] = @IsCompleted
					,[CreateDate] = @CreateDate
				WHERE
[StatId] = @StatId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ClinicalStats_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Deletes a record in the ClinicalStats table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@StatId" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[ClinicalStats] WITH (ROWLOCK) 
				WHERE
					[StatId] = @StatId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ClinicalStats_GetByStatId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Select records from the ClinicalStats table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@StatId" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[StatId],
					[PatientCode],
					[TID],
					[FirstName],
					[LastName],
					[DOB],
					[Sex],
					[Nationality],
					[PatientStart],
					[VitalSign],
					[Lab],
					[Xray],
					[UltraSound],
					[Cardiology],
					[MedReport],
					[ChargedCodes],
					[IsCompleted],
					[CreateDate]
				FROM
					[dbo].[ClinicalStats]
				WHERE
                        
                            ISNULL([StatId],0) = ISNULL(@StatId,0)
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ClinicalStats_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Finds records in the ClinicalStats table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@StatId" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@PatientCode" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@Tid" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@FirstName" type="nvarchar" direction="Input" size="30" precision="0" scale="0" param="(30)" nulldefault="null"/>
				<parameter name="@LastName" type="nvarchar" direction="Input" size="30" precision="0" scale="0" param="(30)" nulldefault="null"/>
				<parameter name="@Dob" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Sex" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault="null"/>
				<parameter name="@Nationality" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@PatientStart" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@VitalSign" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@Lab" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@Xray" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@UltraSound" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@Cardiology" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@MedReport" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@ChargedCodes" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@IsCompleted" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [StatId]
	, [PatientCode]
	, [TID]
	, [FirstName]
	, [LastName]
	, [DOB]
	, [Sex]
	, [Nationality]
	, [PatientStart]
	, [VitalSign]
	, [Lab]
	, [Xray]
	, [UltraSound]
	, [Cardiology]
	, [MedReport]
	, [ChargedCodes]
	, [IsCompleted]
	, [CreateDate]
    FROM
	[dbo].[ClinicalStats]
    WHERE 
	 ([StatId] = @StatId OR @StatId IS NULL)
	AND ([PatientCode] = @PatientCode OR @PatientCode IS NULL)
	AND ([TID] = @Tid OR @Tid IS NULL)
	AND ([FirstName] = @FirstName OR @FirstName IS NULL)
	AND ([LastName] = @LastName OR @LastName IS NULL)
	AND ([DOB] = @Dob OR @Dob IS NULL)
	AND ([Sex] = @Sex OR @Sex IS NULL)
	AND ([Nationality] = @Nationality OR @Nationality IS NULL)
	AND ([PatientStart] = @PatientStart OR @PatientStart IS NULL)
	AND ([VitalSign] = @VitalSign OR @VitalSign IS NULL)
	AND ([Lab] = @Lab OR @Lab IS NULL)
	AND ([Xray] = @Xray OR @Xray IS NULL)
	AND ([UltraSound] = @UltraSound OR @UltraSound IS NULL)
	AND ([Cardiology] = @Cardiology OR @Cardiology IS NULL)
	AND ([MedReport] = @MedReport OR @MedReport IS NULL)
	AND ([ChargedCodes] = @ChargedCodes OR @ChargedCodes IS NULL)
	AND ([IsCompleted] = @IsCompleted OR @IsCompleted IS NULL)
	AND ([CreateDate] = @CreateDate OR @CreateDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [StatId]
	, [PatientCode]
	, [TID]
	, [FirstName]
	, [LastName]
	, [DOB]
	, [Sex]
	, [Nationality]
	, [PatientStart]
	, [VitalSign]
	, [Lab]
	, [Xray]
	, [UltraSound]
	, [Cardiology]
	, [MedReport]
	, [ChargedCodes]
	, [IsCompleted]
	, [CreateDate]
    FROM
	[dbo].[ClinicalStats]
    WHERE 
	 ([StatId] = @StatId AND @StatId is not null)
	OR ([PatientCode] = @PatientCode AND @PatientCode is not null)
	OR ([TID] = @Tid AND @Tid is not null)
	OR ([FirstName] = @FirstName AND @FirstName is not null)
	OR ([LastName] = @LastName AND @LastName is not null)
	OR ([DOB] = @Dob AND @Dob is not null)
	OR ([Sex] = @Sex AND @Sex is not null)
	OR ([Nationality] = @Nationality AND @Nationality is not null)
	OR ([PatientStart] = @PatientStart AND @PatientStart is not null)
	OR ([VitalSign] = @VitalSign AND @VitalSign is not null)
	OR ([Lab] = @Lab AND @Lab is not null)
	OR ([Xray] = @Xray AND @Xray is not null)
	OR ([UltraSound] = @UltraSound AND @UltraSound is not null)
	OR ([Cardiology] = @Cardiology AND @Cardiology is not null)
	OR ([MedReport] = @MedReport AND @MedReport is not null)
	OR ([ChargedCodes] = @ChargedCodes AND @ChargedCodes is not null)
	OR ([IsCompleted] = @IsCompleted AND @IsCompleted is not null)
	OR ([CreateDate] = @CreateDate AND @CreateDate is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="ClinicalStats_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the ClinicalStats table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [StatId]
					, [PatientCode]
					, [TID]
					, [FirstName]
					, [LastName]
					, [DOB]
					, [Sex]
					, [Nationality]
					, [PatientStart]
					, [VitalSign]
					, [Lab]
					, [Xray]
					, [UltraSound]
					, [Cardiology]
					, [MedReport]
					, [ChargedCodes]
					, [IsCompleted]
					, [CreateDate]
					FROM [dbo].[ClinicalStats] {0}
				)
				SELECT
				       [StatId],
				       [PatientCode],
				       [TID],
				       [FirstName],
				       [LastName],
				       [DOB],
				       [Sex],
				       [Nationality],
				       [PatientStart],
				       [VitalSign],
				       [Lab],
				       [Xray],
				       [UltraSound],
				       [Cardiology],
				       [MedReport],
				       [ChargedCodes],
				       [IsCompleted],
				       [CreateDate]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[ClinicalStats] {0};
				
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="_ClinicalStats_UpdVitalSign"  skip="true">
			<comment><![CDATA[

]]></comment>
			<parameters>
				<parameter name="@TID" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
BEGIN	
        SET NOCOUNT ON ;
        Update dbo.ClinicalStats SET VitalSign='Done', Lab='Samples to Lab' WHERE   TID = @TID
        UPDATE dbo.DoctorRequest SET ReqStatus ='To Lab' WHERE   TID = @TID
       
                
    END


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="_ClinicalStats_ReceptComplete"  skip="true">
			<comment><![CDATA[

]]></comment>
			<parameters>
				<parameter name="@TID" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
BEGIN	
        SET NOCOUNT ON ;
       UPDATE dbo.ClinicalStats SET IsCompleted=1 WHERE TID =@TID
        END


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="_ClinicalStats_GetByTID"  skip="true">
			<comment><![CDATA[

]]></comment>
			<parameters>
				<parameter name="@TID" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
dob,sex,Nationality
       FROM dbo.ClinicalStats WHERE TID=@TID
        END


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="_ClinicalStats_UpdateLabDrReq"  skip="true">
			<comment><![CDATA[

]]></comment>
			<parameters>
				<parameter name="@TID" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
BEGIN	
        SET NOCOUNT ON ;
        UPDATE A SET A.ChargedCodes = B.ProcedureCodes, A.Lab = 'requested'  FROM dbo.ClinicalStats A INNER JOIN dbo.VR_TIDChargedCode B ON A.TID = B.TID
        WHERE   A.TID = @TID
               
    END


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="_ClinicalStats_AddRecept"  skip="true">
			<comment><![CDATA[
]]></comment>
			<parameters>
				<parameter name="@PatientCode" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@TID" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@FirstName" type="nvarchar" direction="Input" size="30" precision="0" scale="0" param="(30)" nulldefault="null"/>
				<parameter name="@LastName" type="nvarchar" direction="Input" size="30" precision="0" scale="0" param="(30)" nulldefault="null"/>
				<parameter name="@DOB" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Sex" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault="null"/>
				<parameter name="@Nationality" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@PatientStart" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
tName - nvarchar(30)
          @DOB , -- DOB - datetime
          @Sex , -- Sex - nvarchar(10)
          @Nationality , -- Nationality - nvarchar(50)
          'true' , -- PatientStart - bit
          GETDATE()  -- CreateDate - datetime
        )
        END

			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="_ClinicalStats_UpdateRecept"  skip="true">
			<comment><![CDATA[
]]></comment>
			<parameters>
				<parameter name="@TID" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
BEGIN	
        SET NOCOUNT ON ;
        DELETE  FROM dbo.ClinicalStats
        WHERE   TID = @TID
                AND ( lab IS  NULL
                      OR Xray IS  NULL
                      OR Cardiology IS  NULL
                      OR MedReport IS  NULL
                      OR VitalSign IS  NULL
                    )
    END

			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="Package_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets all records from the Package table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[PackageID],
					[Name],
					[Description],
					[SellPrice],
					[CostPrice],
					[CreatedBy],
					[CreatedDate]
				FROM
					[dbo].[Package]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="Package_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the Package table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[PackageID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [PackageID]'
				SET @SQL = @SQL + ', [Name]'
				SET @SQL = @SQL + ', [Description]'
				SET @SQL = @SQL + ', [SellPrice]'
				SET @SQL = @SQL + ', [CostPrice]'
				SET @SQL = @SQL + ', [CreatedBy]'
				SET @SQL = @SQL + ', [CreatedDate]'
				SET @SQL = @SQL + ' FROM [dbo].[Package]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [PackageID],'
				SET @SQL = @SQL + ' [Name],'
				SET @SQL = @SQL + ' [Description],'
				SET @SQL = @SQL + ' [SellPrice],'
				SET @SQL = @SQL + ' [CostPrice],'
				SET @SQL = @SQL + ' [CreatedBy],'
				SET @SQL = @SQL + ' [CreatedDate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(1) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Package]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="Package_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Inserts a record into the Package table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@PackageId" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@Name" type="char" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault=""/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@SellPrice" type="decimal" direction="Input" size="9" precision="16" scale="2" param="(16, 2)" nulldefault=""/>
				<parameter name="@CostPrice" type="decimal" direction="Input" size="9" precision="16" scale="2" param="(16, 2)" nulldefault=""/>
				<parameter name="@CreatedBy" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@CreatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[Package]
					(
					[PackageID]
					,[Name]
					,[Description]
					,[SellPrice]
					,[CostPrice]
					,[CreatedBy]
					,[CreatedDate]
					)
				VALUES
					(
					@PackageId
					,@Name
					,@Description
					,@SellPrice
					,@CostPrice
					,@CreatedBy
					,@CreatedDate
					)
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Package_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Updates a record in the Package table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@PackageId" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@OriginalPackageId" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@Name" type="char" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault=""/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault=""/>
				<parameter name="@SellPrice" type="decimal" direction="Input" size="9" precision="16" scale="2" param="(16, 2)" nulldefault=""/>
				<parameter name="@CostPrice" type="decimal" direction="Input" size="9" precision="16" scale="2" param="(16, 2)" nulldefault=""/>
				<parameter name="@CreatedBy" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@CreatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[Package]
				SET
					[PackageID] = @PackageId
					,[Name] = @Name
					,[Description] = @Description
					,[SellPrice] = @SellPrice
					,[CostPrice] = @CostPrice
					,[CreatedBy] = @CreatedBy
					,[CreatedDate] = @CreatedDate
				WHERE
[PackageID] = @OriginalPackageId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Package_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Deletes a record in the Package table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@PackageId" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[Package] WITH (ROWLOCK) 
				WHERE
					[PackageID] = @PackageId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Package_GetByPackageId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Select records from the Package table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@PackageId" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[PackageID],
					[Name],
					[Description],
					[SellPrice],
					[CostPrice],
					[CreatedBy],
					[CreatedDate]
				FROM
					[dbo].[Package]
				WHERE
                        
                            ISNULL([PackageID],0) = ISNULL(@PackageId,0)
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="Package_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Finds records in the Package table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PackageId" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault="null"/>
				<parameter name="@Name" type="char" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault="null"/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="255" precision="0" scale="0" param="(255)" nulldefault="null"/>
				<parameter name="@SellPrice" type="decimal" direction="Input" size="9" precision="16" scale="2" param="(16, 2)" nulldefault="null"/>
				<parameter name="@CostPrice" type="decimal" direction="Input" size="9" precision="16" scale="2" param="(16, 2)" nulldefault="null"/>
				<parameter name="@CreatedBy" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@CreatedDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [PackageID]
	, [Name]
	, [Description]
	, [SellPrice]
	, [CostPrice]
	, [CreatedBy]
	, [CreatedDate]
    FROM
	[dbo].[Package]
    WHERE 
	 ([PackageID] = @PackageId OR @PackageId IS NULL)
	AND ([Name] = @Name OR @Name IS NULL)
	AND ([Description] = @Description OR @Description IS NULL)
	AND ([SellPrice] = @SellPrice OR @SellPrice IS NULL)
	AND ([CostPrice] = @CostPrice OR @CostPrice IS NULL)
	AND ([CreatedBy] = @CreatedBy OR @CreatedBy IS NULL)
	AND ([CreatedDate] = @CreatedDate OR @CreatedDate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [PackageID]
	, [Name]
	, [Description]
	, [SellPrice]
	, [CostPrice]
	, [CreatedBy]
	, [CreatedDate]
    FROM
	[dbo].[Package]
    WHERE 
	 ([PackageID] = @PackageId AND @PackageId is not null)
	OR ([Name] = @Name AND @Name is not null)
	OR ([Description] = @Description AND @Description is not null)
	OR ([SellPrice] = @SellPrice AND @SellPrice is not null)
	OR ([CostPrice] = @CostPrice AND @CostPrice is not null)
	OR ([CreatedBy] = @CreatedBy AND @CreatedBy is not null)
	OR ([CreatedDate] = @CreatedDate AND @CreatedDate is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="Package_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the Package table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [PackageID]
					, [Name]
					, [Description]
					, [SellPrice]
					, [CostPrice]
					, [CreatedBy]
					, [CreatedDate]
					FROM [dbo].[Package] {0}
				)
				SELECT
				       [PackageID],
				       [Name],
				       [Description],
				       [SellPrice],
				       [CostPrice],
				       [CreatedBy],
				       [CreatedDate]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[Package] {0};
				
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="PackageDetail_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets all records from the PackageDetail table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[PackageDetailId],
					[PackageID],
					[Code],
					[Description],
					[ClinicPrice]
				FROM
					[dbo].[PackageDetail]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="PackageDetail_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the PackageDetail table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[PackageDetailId]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [PackageDetailId]'
				SET @SQL = @SQL + ', [PackageID]'
				SET @SQL = @SQL + ', [Code]'
				SET @SQL = @SQL + ', [Description]'
				SET @SQL = @SQL + ', [ClinicPrice]'
				SET @SQL = @SQL + ' FROM [dbo].[PackageDetail]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [PackageDetailId],'
				SET @SQL = @SQL + ' [PackageID],'
				SET @SQL = @SQL + ' [Code],'
				SET @SQL = @SQL + ' [Description],'
				SET @SQL = @SQL + ' [ClinicPrice]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(1) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[PackageDetail]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="PackageDetail_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Inserts a record into the PackageDetail table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@PackageDetailId" type="int" direction="Output" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PackageId" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@Code" type="char" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault=""/>
				<parameter name="@ClinicPrice" type="decimal" direction="Input" size="9" precision="16" scale="2" param="(16, 2)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[PackageDetail]
					(
					[PackageID]
					,[Code]
					,[Description]
					,[ClinicPrice]
					)
				VALUES
					(
					@PackageId
					,@Code
					,@Description
					,@ClinicPrice
					)
				-- Get the identity value
				SET @PackageDetailId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="PackageDetail_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Updates a record in the PackageDetail table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@PackageDetailId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@PackageId" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@Code" type="char" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault=""/>
				<parameter name="@ClinicPrice" type="decimal" direction="Input" size="9" precision="16" scale="2" param="(16, 2)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[PackageDetail]
				SET
					[PackageID] = @PackageId
					,[Code] = @Code
					,[Description] = @Description
					,[ClinicPrice] = @ClinicPrice
				WHERE
[PackageDetailId] = @PackageDetailId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="PackageDetail_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Deletes a record in the PackageDetail table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@PackageDetailId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[PackageDetail] WITH (ROWLOCK) 
				WHERE
					[PackageDetailId] = @PackageDetailId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="PackageDetail_GetByPackageId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Select records from the PackageDetail table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@PackageId" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[PackageDetailId],
					[PackageID],
					[Code],
					[Description],
					[ClinicPrice]
				FROM
					[dbo].[PackageDetail]
				WHERE
					[PackageID] = @PackageId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="PackageDetail_GetByPackageDetailId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Select records from the PackageDetail table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@PackageDetailId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[PackageDetailId],
					[PackageID],
					[Code],
					[Description],
					[ClinicPrice]
				FROM
					[dbo].[PackageDetail]
				WHERE
                        
                            ISNULL([PackageDetailId],0) = ISNULL(@PackageDetailId,0)
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="PackageDetail_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Finds records in the PackageDetail table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PackageDetailId" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@PackageId" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault="null"/>
				<parameter name="@Code" type="char" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault="null"/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault="null"/>
				<parameter name="@ClinicPrice" type="decimal" direction="Input" size="9" precision="16" scale="2" param="(16, 2)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [PackageDetailId]
	, [PackageID]
	, [Code]
	, [Description]
	, [ClinicPrice]
    FROM
	[dbo].[PackageDetail]
    WHERE 
	 ([PackageDetailId] = @PackageDetailId OR @PackageDetailId IS NULL)
	AND ([PackageID] = @PackageId OR @PackageId IS NULL)
	AND ([Code] = @Code OR @Code IS NULL)
	AND ([Description] = @Description OR @Description IS NULL)
	AND ([ClinicPrice] = @ClinicPrice OR @ClinicPrice IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [PackageDetailId]
	, [PackageID]
	, [Code]
	, [Description]
	, [ClinicPrice]
    FROM
	[dbo].[PackageDetail]
    WHERE 
	 ([PackageDetailId] = @PackageDetailId AND @PackageDetailId is not null)
	OR ([PackageID] = @PackageId AND @PackageId is not null)
	OR ([Code] = @Code AND @Code is not null)
	OR ([Description] = @Description AND @Description is not null)
	OR ([ClinicPrice] = @ClinicPrice AND @ClinicPrice is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="PackageDetail_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the PackageDetail table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [PackageDetailId]
					, [PackageID]
					, [Code]
					, [Description]
					, [ClinicPrice]
					FROM [dbo].[PackageDetail] {0}
				)
				SELECT
				       [PackageDetailId],
				       [PackageID],
				       [Code],
				       [Description],
				       [ClinicPrice]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[PackageDetail] {0};
				
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="Route_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets all records from the Route table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[RouteId],
					[Route],
					[RouteVN],
					[Description]
				FROM
					[dbo].[Route]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="Route_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the Route table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[RouteId]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [RouteId]'
				SET @SQL = @SQL + ', [Route]'
				SET @SQL = @SQL + ', [RouteVN]'
				SET @SQL = @SQL + ', [Description]'
				SET @SQL = @SQL + ' FROM [dbo].[Route]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [RouteId],'
				SET @SQL = @SQL + ' [Route],'
				SET @SQL = @SQL + ' [RouteVN],'
				SET @SQL = @SQL + ' [Description]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(1) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Route]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="Route_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Inserts a record into the Route table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@RouteId" type="bigint" direction="Output" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Route" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@RouteVn" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[Route]
					(
					[Route]
					,[RouteVN]
					,[Description]
					)
				VALUES
					(
					@Route
					,@RouteVn
					,@Description
					)
				-- Get the identity value
				SET @RouteId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Route_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Updates a record in the Route table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@RouteId" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Route" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@RouteVn" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[Route]
				SET
					[Route] = @Route
					,[RouteVN] = @RouteVn
					,[Description] = @Description
				WHERE
[RouteId] = @RouteId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Route_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Deletes a record in the Route table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@RouteId" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[Route] WITH (ROWLOCK) 
				WHERE
					[RouteId] = @RouteId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Route_GetByRouteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Select records from the Route table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@RouteId" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[RouteId],
					[Route],
					[RouteVN],
					[Description]
				FROM
					[dbo].[Route]
				WHERE
                        
                            ISNULL([RouteId],0) = ISNULL(@RouteId,0)
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="Route_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Finds records in the Route table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@RouteId" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Route" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@RouteVn" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [RouteId]
	, [Route]
	, [RouteVN]
	, [Description]
    FROM
	[dbo].[Route]
    WHERE 
	 ([RouteId] = @RouteId OR @RouteId IS NULL)
	AND ([Route] = @Route OR @Route IS NULL)
	AND ([RouteVN] = @RouteVn OR @RouteVn IS NULL)
	AND ([Description] = @Description OR @Description IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [RouteId]
	, [Route]
	, [RouteVN]
	, [Description]
    FROM
	[dbo].[Route]
    WHERE 
	 ([RouteId] = @RouteId AND @RouteId is not null)
	OR ([Route] = @Route AND @Route is not null)
	OR ([RouteVN] = @RouteVn AND @RouteVn is not null)
	OR ([Description] = @Description AND @Description is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="Route_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the Route table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [RouteId]
					, [Route]
					, [RouteVN]
					, [Description]
					FROM [dbo].[Route] {0}
				)
				SELECT
				       [RouteId],
				       [Route],
				       [RouteVN],
				       [Description]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[Route] {0};
				
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="UserRoles_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets all records from the UserRoles table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[RoleID],
					[RoleName],
					[Remark]
				FROM
					[dbo].[UserRoles]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="UserRoles_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the UserRoles table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[RoleID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [RoleID]'
				SET @SQL = @SQL + ', [RoleName]'
				SET @SQL = @SQL + ', [Remark]'
				SET @SQL = @SQL + ' FROM [dbo].[UserRoles]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [RoleID],'
				SET @SQL = @SQL + ' [RoleName],'
				SET @SQL = @SQL + ' [Remark]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(1) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[UserRoles]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="UserRoles_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Inserts a record into the UserRoles table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@RoleId" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@RoleName" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Remark" type="nvarchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[UserRoles]
					(
					[RoleID]
					,[RoleName]
					,[Remark]
					)
				VALUES
					(
					@RoleId
					,@RoleName
					,@Remark
					)
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="UserRoles_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Updates a record in the UserRoles table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@RoleId" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@OriginalRoleId" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@RoleName" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Remark" type="nvarchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[UserRoles]
				SET
					[RoleID] = @RoleId
					,[RoleName] = @RoleName
					,[Remark] = @Remark
				WHERE
[RoleID] = @OriginalRoleId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="UserRoles_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Deletes a record in the UserRoles table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@RoleId" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[UserRoles] WITH (ROWLOCK) 
				WHERE
					[RoleID] = @RoleId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="UserRoles_GetByRoleId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Select records from the UserRoles table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@RoleId" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[RoleID],
					[RoleName],
					[Remark]
				FROM
					[dbo].[UserRoles]
				WHERE
                        
                            ISNULL([RoleID],0) = ISNULL(@RoleId,0)
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="UserRoles_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Finds records in the UserRoles table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@RoleId" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@RoleName" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@Remark" type="nvarchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [RoleID]
	, [RoleName]
	, [Remark]
    FROM
	[dbo].[UserRoles]
    WHERE 
	 ([RoleID] = @RoleId OR @RoleId IS NULL)
	AND ([RoleName] = @RoleName OR @RoleName IS NULL)
	AND ([Remark] = @Remark OR @Remark IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [RoleID]
	, [RoleName]
	, [Remark]
    FROM
	[dbo].[UserRoles]
    WHERE 
	 ([RoleID] = @RoleId AND @RoleId is not null)
	OR ([RoleName] = @RoleName AND @RoleName is not null)
	OR ([Remark] = @Remark AND @Remark is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="UserRoles_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the UserRoles table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [RoleID]
					, [RoleName]
					, [Remark]
					FROM [dbo].[UserRoles] {0}
				)
				SELECT
				       [RoleID],
				       [RoleName],
				       [Remark]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[UserRoles] {0};
				
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="Users_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets all records from the Users table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[UserName],
					[Password],
					[UserRole],
					[FullName],
					[Email],
					[DisplayName],
					[Signature],
					[Location],
					[IsDisabled],
					[Avatar],
					[MobilePhone]
				FROM
					[dbo].[Users]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="Users_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the Users table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[UserName]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [UserName]'
				SET @SQL = @SQL + ', [Password]'
				SET @SQL = @SQL + ', [UserRole]'
				SET @SQL = @SQL + ', [FullName]'
				SET @SQL = @SQL + ', [Email]'
				SET @SQL = @SQL + ', [DisplayName]'
				SET @SQL = @SQL + ', [Signature]'
				SET @SQL = @SQL + ', [Location]'
				SET @SQL = @SQL + ', [IsDisabled]'
				SET @SQL = @SQL + ', [Avatar]'
				SET @SQL = @SQL + ', [MobilePhone]'
				SET @SQL = @SQL + ' FROM [dbo].[Users]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [UserName],'
				SET @SQL = @SQL + ' [Password],'
				SET @SQL = @SQL + ' [UserRole],'
				SET @SQL = @SQL + ' [FullName],'
				SET @SQL = @SQL + ' [Email],'
				SET @SQL = @SQL + ' [DisplayName],'
				SET @SQL = @SQL + ' [Signature],'
				SET @SQL = @SQL + ' [Location],'
				SET @SQL = @SQL + ' [IsDisabled],'
				SET @SQL = @SQL + ' [Avatar],'
				SET @SQL = @SQL + ' [MobilePhone]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(1) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Users]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="Users_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Inserts a record into the Users table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@UserName" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Password" type="nvarchar" direction="Input" size="200" precision="0" scale="0" param="(200)" nulldefault=""/>
				<parameter name="@UserRole" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@FullName" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Email" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@DisplayName" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Signature" type="nvarchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault=""/>
				<parameter name="@Location" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@IsDisabled" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Avatar" type="nvarchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault=""/>
				<parameter name="@MobilePhone" type="nvarchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[Users]
					(
					[UserName]
					,[Password]
					,[UserRole]
					,[FullName]
					,[Email]
					,[DisplayName]
					,[Signature]
					,[Location]
					,[IsDisabled]
					,[Avatar]
					,[MobilePhone]
					)
				VALUES
					(
					@UserName
					,@Password
					,@UserRole
					,@FullName
					,@Email
					,@DisplayName
					,@Signature
					,@Location
					,@IsDisabled
					,@Avatar
					,@MobilePhone
					)
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Users_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Updates a record in the Users table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@UserName" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@OriginalUserName" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Password" type="nvarchar" direction="Input" size="200" precision="0" scale="0" param="(200)" nulldefault=""/>
				<parameter name="@UserRole" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@FullName" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Email" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@DisplayName" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Signature" type="nvarchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault=""/>
				<parameter name="@Location" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@IsDisabled" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Avatar" type="nvarchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault=""/>
				<parameter name="@MobilePhone" type="nvarchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[Users]
				SET
					[UserName] = @UserName
					,[Password] = @Password
					,[UserRole] = @UserRole
					,[FullName] = @FullName
					,[Email] = @Email
					,[DisplayName] = @DisplayName
					,[Signature] = @Signature
					,[Location] = @Location
					,[IsDisabled] = @IsDisabled
					,[Avatar] = @Avatar
					,[MobilePhone] = @MobilePhone
				WHERE
[UserName] = @OriginalUserName 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Users_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Deletes a record in the Users table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@UserName" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[Users] WITH (ROWLOCK) 
				WHERE
					[UserName] = @UserName
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Users_GetByUserName" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Select records from the Users table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@UserName" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[UserName],
					[Password],
					[UserRole],
					[FullName],
					[Email],
					[DisplayName],
					[Signature],
					[Location],
					[IsDisabled],
					[Avatar],
					[MobilePhone]
				FROM
					[dbo].[Users]
				WHERE
                        
                            ISNULL([UserName],0) = ISNULL(@UserName,0)
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="Users_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Finds records in the Users table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@UserName" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@Password" type="nvarchar" direction="Input" size="200" precision="0" scale="0" param="(200)" nulldefault="null"/>
				<parameter name="@UserRole" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@FullName" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@Email" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@DisplayName" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@Signature" type="nvarchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault="null"/>
				<parameter name="@Location" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault="null"/>
				<parameter name="@IsDisabled" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Avatar" type="nvarchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault="null"/>
				<parameter name="@MobilePhone" type="nvarchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [UserName]
	, [Password]
	, [UserRole]
	, [FullName]
	, [Email]
	, [DisplayName]
	, [Signature]
	, [Location]
	, [IsDisabled]
	, [Avatar]
	, [MobilePhone]
    FROM
	[dbo].[Users]
    WHERE 
	 ([UserName] = @UserName OR @UserName IS NULL)
	AND ([Password] = @Password OR @Password IS NULL)
	AND ([UserRole] = @UserRole OR @UserRole IS NULL)
	AND ([FullName] = @FullName OR @FullName IS NULL)
	AND ([Email] = @Email OR @Email IS NULL)
	AND ([DisplayName] = @DisplayName OR @DisplayName IS NULL)
	AND ([Signature] = @Signature OR @Signature IS NULL)
	AND ([Location] = @Location OR @Location IS NULL)
	AND ([IsDisabled] = @IsDisabled OR @IsDisabled IS NULL)
	AND ([Avatar] = @Avatar OR @Avatar IS NULL)
	AND ([MobilePhone] = @MobilePhone OR @MobilePhone IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [UserName]
	, [Password]
	, [UserRole]
	, [FullName]
	, [Email]
	, [DisplayName]
	, [Signature]
	, [Location]
	, [IsDisabled]
	, [Avatar]
	, [MobilePhone]
    FROM
	[dbo].[Users]
    WHERE 
	 ([UserName] = @UserName AND @UserName is not null)
	OR ([Password] = @Password AND @Password is not null)
	OR ([UserRole] = @UserRole AND @UserRole is not null)
	OR ([FullName] = @FullName AND @FullName is not null)
	OR ([Email] = @Email AND @Email is not null)
	OR ([DisplayName] = @DisplayName AND @DisplayName is not null)
	OR ([Signature] = @Signature AND @Signature is not null)
	OR ([Location] = @Location AND @Location is not null)
	OR ([IsDisabled] = @IsDisabled AND @IsDisabled is not null)
	OR ([Avatar] = @Avatar AND @Avatar is not null)
	OR ([MobilePhone] = @MobilePhone AND @MobilePhone is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="Users_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the Users table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [UserName]
					, [Password]
					, [UserRole]
					, [FullName]
					, [Email]
					, [DisplayName]
					, [Signature]
					, [Location]
					, [IsDisabled]
					, [Avatar]
					, [MobilePhone]
					FROM [dbo].[Users] {0}
				)
				SELECT
				       [UserName],
				       [Password],
				       [UserRole],
				       [FullName],
				       [Email],
				       [DisplayName],
				       [Signature],
				       [Location],
				       [IsDisabled],
				       [Avatar],
				       [MobilePhone]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[Users] {0};
				
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="MedReport_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets all records from the MedReport table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[MedId],
					[PatientCode],
					[TID],
					[OnsetDate],
					[FirstConsultDate],
					[DeceaseHistory],
					[DeceaseHistoryVN],
					[Symptoms],
					[SymptomsVN],
					[PastMedHistory],
					[PastMedHistoryVN],
					[CurrentMedications],
					[PhysicalExam],
					[PhysicalExamVN],
					[Investigations],
					[InvestigationsVN],
					[DiagnosisDetail],
					[DiagnosisDetailVN],
					[Treatment],
					[TreatmentVN],
					[ReviewPlan],
					[ReviewPlanVN],
					[CreateDate],
					[CreateUser],
					[UpdateDate],
					[UpdateUser]
				FROM
					[dbo].[MedReport]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="MedReport_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the MedReport table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[MedId]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [MedId]'
				SET @SQL = @SQL + ', [PatientCode]'
				SET @SQL = @SQL + ', [TID]'
				SET @SQL = @SQL + ', [OnsetDate]'
				SET @SQL = @SQL + ', [FirstConsultDate]'
				SET @SQL = @SQL + ', [DeceaseHistory]'
				SET @SQL = @SQL + ', [DeceaseHistoryVN]'
				SET @SQL = @SQL + ', [Symptoms]'
				SET @SQL = @SQL + ', [SymptomsVN]'
				SET @SQL = @SQL + ', [PastMedHistory]'
				SET @SQL = @SQL + ', [PastMedHistoryVN]'
				SET @SQL = @SQL + ', [CurrentMedications]'
				SET @SQL = @SQL + ', [PhysicalExam]'
				SET @SQL = @SQL + ', [PhysicalExamVN]'
				SET @SQL = @SQL + ', [Investigations]'
				SET @SQL = @SQL + ', [InvestigationsVN]'
				SET @SQL = @SQL + ', [DiagnosisDetail]'
				SET @SQL = @SQL + ', [DiagnosisDetailVN]'
				SET @SQL = @SQL + ', [Treatment]'
				SET @SQL = @SQL + ', [TreatmentVN]'
				SET @SQL = @SQL + ', [ReviewPlan]'
				SET @SQL = @SQL + ', [ReviewPlanVN]'
				SET @SQL = @SQL + ', [CreateDate]'
				SET @SQL = @SQL + ', [CreateUser]'
				SET @SQL = @SQL + ', [UpdateDate]'
				SET @SQL = @SQL + ', [UpdateUser]'
				SET @SQL = @SQL + ' FROM [dbo].[MedReport]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [MedId],'
				SET @SQL = @SQL + ' [PatientCode],'
				SET @SQL = @SQL + ' [TID],'
				SET @SQL = @SQL + ' [OnsetDate],'
				SET @SQL = @SQL + ' [FirstConsultDate],'
				SET @SQL = @SQL + ' [DeceaseHistory],'
				SET @SQL = @SQL + ' [DeceaseHistoryVN],'
				SET @SQL = @SQL + ' [Symptoms],'
				SET @SQL = @SQL + ' [SymptomsVN],'
				SET @SQL = @SQL + ' [PastMedHistory],'
				SET @SQL = @SQL + ' [PastMedHistoryVN],'
				SET @SQL = @SQL + ' [CurrentMedications],'
				SET @SQL = @SQL + ' [PhysicalExam],'
				SET @SQL = @SQL + ' [PhysicalExamVN],'
				SET @SQL = @SQL + ' [Investigations],'
				SET @SQL = @SQL + ' [InvestigationsVN],'
				SET @SQL = @SQL + ' [DiagnosisDetail],'
				SET @SQL = @SQL + ' [DiagnosisDetailVN],'
				SET @SQL = @SQL + ' [Treatment],'
				SET @SQL = @SQL + ' [TreatmentVN],'
				SET @SQL = @SQL + ' [ReviewPlan],'
				SET @SQL = @SQL + ' [ReviewPlanVN],'
				SET @SQL = @SQL + ' [CreateDate],'
				SET @SQL = @SQL + ' [CreateUser],'
				SET @SQL = @SQL + ' [UpdateDate],'
				SET @SQL = @SQL + ' [UpdateUser]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(1) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[MedReport]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="MedReport_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Inserts a record into the MedReport table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MedId" type="bigint" direction="Output" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@PatientCode" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Tid" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault=""/>
				<parameter name="@OnsetDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@FirstConsultDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@DeceaseHistory" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@DeceaseHistoryVn" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@Symptoms" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@SymptomsVn" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@PastMedHistory" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@PastMedHistoryVn" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@CurrentMedications" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@PhysicalExam" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@PhysicalExamVn" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@Investigations" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault=""/>
				<parameter name="@InvestigationsVn" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault=""/>
				<parameter name="@DiagnosisDetail" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@DiagnosisDetailVn" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@Treatment" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault=""/>
				<parameter name="@TreatmentVn" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault=""/>
				<parameter name="@ReviewPlan" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@ReviewPlanVn" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreateUser" type="nvarchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdateUser" type="nvarchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[MedReport]
					(
					[PatientCode]
					,[TID]
					,[OnsetDate]
					,[FirstConsultDate]
					,[DeceaseHistory]
					,[DeceaseHistoryVN]
					,[Symptoms]
					,[SymptomsVN]
					,[PastMedHistory]
					,[PastMedHistoryVN]
					,[CurrentMedications]
					,[PhysicalExam]
					,[PhysicalExamVN]
					,[Investigations]
					,[InvestigationsVN]
					,[DiagnosisDetail]
					,[DiagnosisDetailVN]
					,[Treatment]
					,[TreatmentVN]
					,[ReviewPlan]
					,[ReviewPlanVN]
					,[CreateDate]
					,[CreateUser]
					,[UpdateDate]
					,[UpdateUser]
					)
				VALUES
					(
					@PatientCode
					,@Tid
					,@OnsetDate
					,@FirstConsultDate
					,@DeceaseHistory
					,@DeceaseHistoryVn
					,@Symptoms
					,@SymptomsVn
					,@PastMedHistory
					,@PastMedHistoryVn
					,@CurrentMedications
					,@PhysicalExam
					,@PhysicalExamVn
					,@Investigations
					,@InvestigationsVn
					,@DiagnosisDetail
					,@DiagnosisDetailVn
					,@Treatment
					,@TreatmentVn
					,@ReviewPlan
					,@ReviewPlanVn
					,@CreateDate
					,@CreateUser
					,@UpdateDate
					,@UpdateUser
					)
				-- Get the identity value
				SET @MedId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MedReport_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Updates a record in the MedReport table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MedId" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@PatientCode" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Tid" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault=""/>
				<parameter name="@OnsetDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@FirstConsultDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@DeceaseHistory" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@DeceaseHistoryVn" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@Symptoms" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@SymptomsVn" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@PastMedHistory" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@PastMedHistoryVn" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@CurrentMedications" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@PhysicalExam" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@PhysicalExamVn" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@Investigations" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault=""/>
				<parameter name="@InvestigationsVn" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault=""/>
				<parameter name="@DiagnosisDetail" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@DiagnosisDetailVn" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@Treatment" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault=""/>
				<parameter name="@TreatmentVn" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault=""/>
				<parameter name="@ReviewPlan" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@ReviewPlanVn" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreateUser" type="nvarchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdateUser" type="nvarchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[MedReport]
				SET
					[PatientCode] = @PatientCode
					,[TID] = @Tid
					,[OnsetDate] = @OnsetDate
					,[FirstConsultDate] = @FirstConsultDate
					,[DeceaseHistory] = @DeceaseHistory
					,[DeceaseHistoryVN] = @DeceaseHistoryVn
					,[Symptoms] = @Symptoms
					,[SymptomsVN] = @SymptomsVn
					,[PastMedHistory] = @PastMedHistory
					,[PastMedHistoryVN] = @PastMedHistoryVn
					,[CurrentMedications] = @CurrentMedications
					,[PhysicalExam] = @PhysicalExam
					,[PhysicalExamVN] = @PhysicalExamVn
					,[Investigations] = @Investigations
					,[InvestigationsVN] = @InvestigationsVn
					,[DiagnosisDetail] = @DiagnosisDetail
					,[DiagnosisDetailVN] = @DiagnosisDetailVn
					,[Treatment] = @Treatment
					,[TreatmentVN] = @TreatmentVn
					,[ReviewPlan] = @ReviewPlan
					,[ReviewPlanVN] = @ReviewPlanVn
					,[CreateDate] = @CreateDate
					,[CreateUser] = @CreateUser
					,[UpdateDate] = @UpdateDate
					,[UpdateUser] = @UpdateUser
				WHERE
[MedId] = @MedId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MedReport_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Deletes a record in the MedReport table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MedId" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[MedReport] WITH (ROWLOCK) 
				WHERE
					[MedId] = @MedId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="MedReport_GetByMedId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Select records from the MedReport table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@MedId" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[MedId],
					[PatientCode],
					[TID],
					[OnsetDate],
					[FirstConsultDate],
					[DeceaseHistory],
					[DeceaseHistoryVN],
					[Symptoms],
					[SymptomsVN],
					[PastMedHistory],
					[PastMedHistoryVN],
					[CurrentMedications],
					[PhysicalExam],
					[PhysicalExamVN],
					[Investigations],
					[InvestigationsVN],
					[DiagnosisDetail],
					[DiagnosisDetailVN],
					[Treatment],
					[TreatmentVN],
					[ReviewPlan],
					[ReviewPlanVN],
					[CreateDate],
					[CreateUser],
					[UpdateDate],
					[UpdateUser]
				FROM
					[dbo].[MedReport]
				WHERE
                        
                            ISNULL([MedId],0) = ISNULL(@MedId,0)
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="MedReport_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Finds records in the MedReport table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@MedId" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@PatientCode" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@Tid" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault="null"/>
				<parameter name="@OnsetDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@FirstConsultDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@DeceaseHistory" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@DeceaseHistoryVn" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@Symptoms" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@SymptomsVn" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@PastMedHistory" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@PastMedHistoryVn" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@CurrentMedications" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@PhysicalExam" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@PhysicalExamVn" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@Investigations" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
				<parameter name="@InvestigationsVn" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
				<parameter name="@DiagnosisDetail" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@DiagnosisDetailVn" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@Treatment" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
				<parameter name="@TreatmentVn" type="nvarchar" direction="Input" size="1000" precision="0" scale="0" param="(1000)" nulldefault="null"/>
				<parameter name="@ReviewPlan" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@ReviewPlanVn" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@CreateUser" type="nvarchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@UpdateUser" type="nvarchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [MedId]
	, [PatientCode]
	, [TID]
	, [OnsetDate]
	, [FirstConsultDate]
	, [DeceaseHistory]
	, [DeceaseHistoryVN]
	, [Symptoms]
	, [SymptomsVN]
	, [PastMedHistory]
	, [PastMedHistoryVN]
	, [CurrentMedications]
	, [PhysicalExam]
	, [PhysicalExamVN]
	, [Investigations]
	, [InvestigationsVN]
	, [DiagnosisDetail]
	, [DiagnosisDetailVN]
	, [Treatment]
	, [TreatmentVN]
	, [ReviewPlan]
	, [ReviewPlanVN]
	, [CreateDate]
	, [CreateUser]
	, [UpdateDate]
	, [UpdateUser]
    FROM
	[dbo].[MedReport]
    WHERE 
	 ([MedId] = @MedId OR @MedId IS NULL)
	AND ([PatientCode] = @PatientCode OR @PatientCode IS NULL)
	AND ([TID] = @Tid OR @Tid IS NULL)
	AND ([OnsetDate] = @OnsetDate OR @OnsetDate IS NULL)
	AND ([FirstConsultDate] = @FirstConsultDate OR @FirstConsultDate IS NULL)
	AND ([DeceaseHistory] = @DeceaseHistory OR @DeceaseHistory IS NULL)
	AND ([DeceaseHistoryVN] = @DeceaseHistoryVn OR @DeceaseHistoryVn IS NULL)
	AND ([Symptoms] = @Symptoms OR @Symptoms IS NULL)
	AND ([SymptomsVN] = @SymptomsVn OR @SymptomsVn IS NULL)
	AND ([PastMedHistory] = @PastMedHistory OR @PastMedHistory IS NULL)
	AND ([PastMedHistoryVN] = @PastMedHistoryVn OR @PastMedHistoryVn IS NULL)
	AND ([CurrentMedications] = @CurrentMedications OR @CurrentMedications IS NULL)
	AND ([PhysicalExam] = @PhysicalExam OR @PhysicalExam IS NULL)
	AND ([PhysicalExamVN] = @PhysicalExamVn OR @PhysicalExamVn IS NULL)
	AND ([Investigations] = @Investigations OR @Investigations IS NULL)
	AND ([InvestigationsVN] = @InvestigationsVn OR @InvestigationsVn IS NULL)
	AND ([DiagnosisDetail] = @DiagnosisDetail OR @DiagnosisDetail IS NULL)
	AND ([DiagnosisDetailVN] = @DiagnosisDetailVn OR @DiagnosisDetailVn IS NULL)
	AND ([Treatment] = @Treatment OR @Treatment IS NULL)
	AND ([TreatmentVN] = @TreatmentVn OR @TreatmentVn IS NULL)
	AND ([ReviewPlan] = @ReviewPlan OR @ReviewPlan IS NULL)
	AND ([ReviewPlanVN] = @ReviewPlanVn OR @ReviewPlanVn IS NULL)
	AND ([CreateDate] = @CreateDate OR @CreateDate IS NULL)
	AND ([CreateUser] = @CreateUser OR @CreateUser IS NULL)
	AND ([UpdateDate] = @UpdateDate OR @UpdateDate IS NULL)
	AND ([UpdateUser] = @UpdateUser OR @UpdateUser IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [MedId]
	, [PatientCode]
	, [TID]
	, [OnsetDate]
	, [FirstConsultDate]
	, [DeceaseHistory]
	, [DeceaseHistoryVN]
	, [Symptoms]
	, [SymptomsVN]
	, [PastMedHistory]
	, [PastMedHistoryVN]
	, [CurrentMedications]
	, [PhysicalExam]
	, [PhysicalExamVN]
	, [Investigations]
	, [InvestigationsVN]
	, [DiagnosisDetail]
	, [DiagnosisDetailVN]
	, [Treatment]
	, [TreatmentVN]
	, [ReviewPlan]
	, [ReviewPlanVN]
	, [CreateDate]
	, [CreateUser]
	, [UpdateDate]
	, [UpdateUser]
    FROM
	[dbo].[MedReport]
    WHERE 
	 ([MedId] = @MedId AND @MedId is not null)
	OR ([PatientCode] = @PatientCode AND @PatientCode is not null)
	OR ([TID] = @Tid AND @Tid is not null)
	OR ([OnsetDate] = @OnsetDate AND @OnsetDate is not null)
	OR ([FirstConsultDate] = @FirstConsultDate AND @FirstConsultDate is not null)
	OR ([DeceaseHistory] = @DeceaseHistory AND @DeceaseHistory is not null)
	OR ([DeceaseHistoryVN] = @DeceaseHistoryVn AND @DeceaseHistoryVn is not null)
	OR ([Symptoms] = @Symptoms AND @Symptoms is not null)
	OR ([SymptomsVN] = @SymptomsVn AND @SymptomsVn is not null)
	OR ([PastMedHistory] = @PastMedHistory AND @PastMedHistory is not null)
	OR ([PastMedHistoryVN] = @PastMedHistoryVn AND @PastMedHistoryVn is not null)
	OR ([CurrentMedications] = @CurrentMedications AND @CurrentMedications is not null)
	OR ([PhysicalExam] = @PhysicalExam AND @PhysicalExam is not null)
	OR ([PhysicalExamVN] = @PhysicalExamVn AND @PhysicalExamVn is not null)
	OR ([Investigations] = @Investigations AND @Investigations is not null)
	OR ([InvestigationsVN] = @InvestigationsVn AND @InvestigationsVn is not null)
	OR ([DiagnosisDetail] = @DiagnosisDetail AND @DiagnosisDetail is not null)
	OR ([DiagnosisDetailVN] = @DiagnosisDetailVn AND @DiagnosisDetailVn is not null)
	OR ([Treatment] = @Treatment AND @Treatment is not null)
	OR ([TreatmentVN] = @TreatmentVn AND @TreatmentVn is not null)
	OR ([ReviewPlan] = @ReviewPlan AND @ReviewPlan is not null)
	OR ([ReviewPlanVN] = @ReviewPlanVn AND @ReviewPlanVn is not null)
	OR ([CreateDate] = @CreateDate AND @CreateDate is not null)
	OR ([CreateUser] = @CreateUser AND @CreateUser is not null)
	OR ([UpdateDate] = @UpdateDate AND @UpdateDate is not null)
	OR ([UpdateUser] = @UpdateUser AND @UpdateUser is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="MedReport_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the MedReport table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [MedId]
					, [PatientCode]
					, [TID]
					, [OnsetDate]
					, [FirstConsultDate]
					, [DeceaseHistory]
					, [DeceaseHistoryVN]
					, [Symptoms]
					, [SymptomsVN]
					, [PastMedHistory]
					, [PastMedHistoryVN]
					, [CurrentMedications]
					, [PhysicalExam]
					, [PhysicalExamVN]
					, [Investigations]
					, [InvestigationsVN]
					, [DiagnosisDetail]
					, [DiagnosisDetailVN]
					, [Treatment]
					, [TreatmentVN]
					, [ReviewPlan]
					, [ReviewPlanVN]
					, [CreateDate]
					, [CreateUser]
					, [UpdateDate]
					, [UpdateUser]
					FROM [dbo].[MedReport] {0}
				)
				SELECT
				       [MedId],
				       [PatientCode],
				       [TID],
				       [OnsetDate],
				       [FirstConsultDate],
				       [DeceaseHistory],
				       [DeceaseHistoryVN],
				       [Symptoms],
				       [SymptomsVN],
				       [PastMedHistory],
				       [PastMedHistoryVN],
				       [CurrentMedications],
				       [PhysicalExam],
				       [PhysicalExamVN],
				       [Investigations],
				       [InvestigationsVN],
				       [DiagnosisDetail],
				       [DiagnosisDetailVN],
				       [Treatment],
				       [TreatmentVN],
				       [ReviewPlan],
				       [ReviewPlanVN],
				       [CreateDate],
				       [CreateUser],
				       [UpdateDate],
				       [UpdateUser]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[MedReport] {0};
				
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="Frequency_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets all records from the Frequency table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[FrequencyId],
					[abbre],
					[meaning],
					[VN_meaning]
				FROM
					[dbo].[Frequency]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="Frequency_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the Frequency table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[FrequencyId]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [FrequencyId]'
				SET @SQL = @SQL + ', [abbre]'
				SET @SQL = @SQL + ', [meaning]'
				SET @SQL = @SQL + ', [VN_meaning]'
				SET @SQL = @SQL + ' FROM [dbo].[Frequency]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [FrequencyId],'
				SET @SQL = @SQL + ' [abbre],'
				SET @SQL = @SQL + ' [meaning],'
				SET @SQL = @SQL + ' [VN_meaning]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(1) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Frequency]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="Frequency_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Inserts a record into the Frequency table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@FrequencyId" type="bigint" direction="Output" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Abbre" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Meaning" type="nvarchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault=""/>
				<parameter name="@VnMeaning" type="nvarchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[Frequency]
					(
					[abbre]
					,[meaning]
					,[VN_meaning]
					)
				VALUES
					(
					@Abbre
					,@Meaning
					,@VnMeaning
					)
				-- Get the identity value
				SET @FrequencyId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Frequency_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Updates a record in the Frequency table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@FrequencyId" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Abbre" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Meaning" type="nvarchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault=""/>
				<parameter name="@VnMeaning" type="nvarchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[Frequency]
				SET
					[abbre] = @Abbre
					,[meaning] = @Meaning
					,[VN_meaning] = @VnMeaning
				WHERE
[FrequencyId] = @FrequencyId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Frequency_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Deletes a record in the Frequency table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@FrequencyId" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[Frequency] WITH (ROWLOCK) 
				WHERE
					[FrequencyId] = @FrequencyId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Frequency_GetByFrequencyId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Select records from the Frequency table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@FrequencyId" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[FrequencyId],
					[abbre],
					[meaning],
					[VN_meaning]
				FROM
					[dbo].[Frequency]
				WHERE
                        
                            ISNULL([FrequencyId],0) = ISNULL(@FrequencyId,0)
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="Frequency_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Finds records in the Frequency table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@FrequencyId" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Abbre" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@Meaning" type="nvarchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault="null"/>
				<parameter name="@VnMeaning" type="nvarchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [FrequencyId]
	, [abbre]
	, [meaning]
	, [VN_meaning]
    FROM
	[dbo].[Frequency]
    WHERE 
	 ([FrequencyId] = @FrequencyId OR @FrequencyId IS NULL)
	AND ([abbre] = @Abbre OR @Abbre IS NULL)
	AND ([meaning] = @Meaning OR @Meaning IS NULL)
	AND ([VN_meaning] = @VnMeaning OR @VnMeaning IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [FrequencyId]
	, [abbre]
	, [meaning]
	, [VN_meaning]
    FROM
	[dbo].[Frequency]
    WHERE 
	 ([FrequencyId] = @FrequencyId AND @FrequencyId is not null)
	OR ([abbre] = @Abbre AND @Abbre is not null)
	OR ([meaning] = @Meaning AND @Meaning is not null)
	OR ([VN_meaning] = @VnMeaning AND @VnMeaning is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="Frequency_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the Frequency table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [FrequencyId]
					, [abbre]
					, [meaning]
					, [VN_meaning]
					FROM [dbo].[Frequency] {0}
				)
				SELECT
				       [FrequencyId],
				       [abbre],
				       [meaning],
				       [VN_meaning]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[Frequency] {0};
				
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="FavoritMaster_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets all records from the FavoritMaster table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[FavouriteID],
					[DiceaseName],
					[CreateBy],
					[Diagnosis],
					[DiagnosisVN],
					[IsPrivate]
				FROM
					[dbo].[FavoritMaster]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="FavoritMaster_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the FavoritMaster table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[FavouriteID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [FavouriteID]'
				SET @SQL = @SQL + ', [DiceaseName]'
				SET @SQL = @SQL + ', [CreateBy]'
				SET @SQL = @SQL + ', [Diagnosis]'
				SET @SQL = @SQL + ', [DiagnosisVN]'
				SET @SQL = @SQL + ', [IsPrivate]'
				SET @SQL = @SQL + ' FROM [dbo].[FavoritMaster]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [FavouriteID],'
				SET @SQL = @SQL + ' [DiceaseName],'
				SET @SQL = @SQL + ' [CreateBy],'
				SET @SQL = @SQL + ' [Diagnosis],'
				SET @SQL = @SQL + ' [DiagnosisVN],'
				SET @SQL = @SQL + ' [IsPrivate]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(1) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[FavoritMaster]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="FavoritMaster_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Inserts a record into the FavoritMaster table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@FavouriteId" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@DiceaseName" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@CreateBy" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Diagnosis" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@DiagnosisVn" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@IsPrivate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[FavoritMaster]
					(
					[FavouriteID]
					,[DiceaseName]
					,[CreateBy]
					,[Diagnosis]
					,[DiagnosisVN]
					,[IsPrivate]
					)
				VALUES
					(
					@FavouriteId
					,@DiceaseName
					,@CreateBy
					,@Diagnosis
					,@DiagnosisVn
					,@IsPrivate
					)
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="FavoritMaster_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Updates a record in the FavoritMaster table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@FavouriteId" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@OriginalFavouriteId" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@DiceaseName" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@CreateBy" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Diagnosis" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@DiagnosisVn" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@IsPrivate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[FavoritMaster]
				SET
					[FavouriteID] = @FavouriteId
					,[DiceaseName] = @DiceaseName
					,[CreateBy] = @CreateBy
					,[Diagnosis] = @Diagnosis
					,[DiagnosisVN] = @DiagnosisVn
					,[IsPrivate] = @IsPrivate
				WHERE
[FavouriteID] = @OriginalFavouriteId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="FavoritMaster_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Deletes a record in the FavoritMaster table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@FavouriteId" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[FavoritMaster] WITH (ROWLOCK) 
				WHERE
					[FavouriteID] = @FavouriteId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="FavoritMaster_GetByFavouriteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Select records from the FavoritMaster table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@FavouriteId" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[FavouriteID],
					[DiceaseName],
					[CreateBy],
					[Diagnosis],
					[DiagnosisVN],
					[IsPrivate]
				FROM
					[dbo].[FavoritMaster]
				WHERE
                        
                            ISNULL([FavouriteID],0) = ISNULL(@FavouriteId,0)
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="FavoritMaster_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Finds records in the FavoritMaster table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@FavouriteId" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault="null"/>
				<parameter name="@DiceaseName" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@CreateBy" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@Diagnosis" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@DiagnosisVn" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@IsPrivate" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [FavouriteID]
	, [DiceaseName]
	, [CreateBy]
	, [Diagnosis]
	, [DiagnosisVN]
	, [IsPrivate]
    FROM
	[dbo].[FavoritMaster]
    WHERE 
	 ([FavouriteID] = @FavouriteId OR @FavouriteId IS NULL)
	AND ([DiceaseName] = @DiceaseName OR @DiceaseName IS NULL)
	AND ([CreateBy] = @CreateBy OR @CreateBy IS NULL)
	AND ([Diagnosis] = @Diagnosis OR @Diagnosis IS NULL)
	AND ([DiagnosisVN] = @DiagnosisVn OR @DiagnosisVn IS NULL)
	AND ([IsPrivate] = @IsPrivate OR @IsPrivate IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [FavouriteID]
	, [DiceaseName]
	, [CreateBy]
	, [Diagnosis]
	, [DiagnosisVN]
	, [IsPrivate]
    FROM
	[dbo].[FavoritMaster]
    WHERE 
	 ([FavouriteID] = @FavouriteId AND @FavouriteId is not null)
	OR ([DiceaseName] = @DiceaseName AND @DiceaseName is not null)
	OR ([CreateBy] = @CreateBy AND @CreateBy is not null)
	OR ([Diagnosis] = @Diagnosis AND @Diagnosis is not null)
	OR ([DiagnosisVN] = @DiagnosisVn AND @DiagnosisVn is not null)
	OR ([IsPrivate] = @IsPrivate AND @IsPrivate is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="FavoritMaster_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the FavoritMaster table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [FavouriteID]
					, [DiceaseName]
					, [CreateBy]
					, [Diagnosis]
					, [DiagnosisVN]
					, [IsPrivate]
					FROM [dbo].[FavoritMaster] {0}
				)
				SELECT
				       [FavouriteID],
				       [DiceaseName],
				       [CreateBy],
				       [Diagnosis],
				       [DiagnosisVN],
				       [IsPrivate]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[FavoritMaster] {0};
				
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="_FavoritMaster_Del"  skip="true">
			<comment><![CDATA[

]]></comment>
			<parameters>
				<parameter name="@FavID" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
ter WHERE FavouriteID = @FavID
        END


			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="Diaglist_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets all records from the Diaglist table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[CATEGORY],
					[DIAG_CODE],
					[DIAG_NAME],
					[DIAG_NAME_VN],
					[IsDisabled]
				FROM
					[dbo].[Diaglist]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="Diaglist_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the Diaglist table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[CATEGORY]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [CATEGORY]'
				SET @SQL = @SQL + ', [DIAG_CODE]'
				SET @SQL = @SQL + ', [DIAG_NAME]'
				SET @SQL = @SQL + ', [DIAG_NAME_VN]'
				SET @SQL = @SQL + ', [IsDisabled]'
				SET @SQL = @SQL + ' FROM [dbo].[Diaglist]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [CATEGORY],'
				SET @SQL = @SQL + ' [DIAG_CODE],'
				SET @SQL = @SQL + ' [DIAG_NAME],'
				SET @SQL = @SQL + ' [DIAG_NAME_VN],'
				SET @SQL = @SQL + ' [IsDisabled]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(1) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[Diaglist]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="Diaglist_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Inserts a record into the Diaglist table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Category" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@DiagCode" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault=""/>
				<parameter name="@DiagName" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@DiagNameVn" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@IsDisabled" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[Diaglist]
					(
					[CATEGORY]
					,[DIAG_CODE]
					,[DIAG_NAME]
					,[DIAG_NAME_VN]
					,[IsDisabled]
					)
				VALUES
					(
					@Category
					,@DiagCode
					,@DiagName
					,@DiagNameVn
					,@IsDisabled
					)
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Diaglist_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Updates a record in the Diaglist table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Category" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@DiagCode" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault=""/>
				<parameter name="@OriginalDiagCode" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault=""/>
				<parameter name="@DiagName" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@DiagNameVn" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@IsDisabled" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[Diaglist]
				SET
					[CATEGORY] = @Category
					,[DIAG_CODE] = @DiagCode
					,[DIAG_NAME] = @DiagName
					,[DIAG_NAME_VN] = @DiagNameVn
					,[IsDisabled] = @IsDisabled
				WHERE
[DIAG_CODE] = @OriginalDiagCode 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Diaglist_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Deletes a record in the Diaglist table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DiagCode" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[Diaglist] WITH (ROWLOCK) 
				WHERE
					[DIAG_CODE] = @DiagCode
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="Diaglist_GetByDiagCode" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Select records from the Diaglist table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@DiagCode" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[CATEGORY],
					[DIAG_CODE],
					[DIAG_NAME],
					[DIAG_NAME_VN],
					[IsDisabled]
				FROM
					[dbo].[Diaglist]
				WHERE
                        
                            ISNULL([DIAG_CODE],0) = ISNULL(@DiagCode,0)
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="Diaglist_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Finds records in the Diaglist table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Category" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@DiagCode" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault="null"/>
				<parameter name="@DiagName" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@DiagNameVn" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@IsDisabled" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [CATEGORY]
	, [DIAG_CODE]
	, [DIAG_NAME]
	, [DIAG_NAME_VN]
	, [IsDisabled]
    FROM
	[dbo].[Diaglist]
    WHERE 
	 ([CATEGORY] = @Category OR @Category IS NULL)
	AND ([DIAG_CODE] = @DiagCode OR @DiagCode IS NULL)
	AND ([DIAG_NAME] = @DiagName OR @DiagName IS NULL)
	AND ([DIAG_NAME_VN] = @DiagNameVn OR @DiagNameVn IS NULL)
	AND ([IsDisabled] = @IsDisabled OR @IsDisabled IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [CATEGORY]
	, [DIAG_CODE]
	, [DIAG_NAME]
	, [DIAG_NAME_VN]
	, [IsDisabled]
    FROM
	[dbo].[Diaglist]
    WHERE 
	 ([CATEGORY] = @Category AND @Category is not null)
	OR ([DIAG_CODE] = @DiagCode AND @DiagCode is not null)
	OR ([DIAG_NAME] = @DiagName AND @DiagName is not null)
	OR ([DIAG_NAME_VN] = @DiagNameVn AND @DiagNameVn is not null)
	OR ([IsDisabled] = @IsDisabled AND @IsDisabled is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="Diaglist_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the Diaglist table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [CATEGORY]
					, [DIAG_CODE]
					, [DIAG_NAME]
					, [DIAG_NAME_VN]
					, [IsDisabled]
					FROM [dbo].[Diaglist] {0}
				)
				SELECT
				       [CATEGORY],
				       [DIAG_CODE],
				       [DIAG_NAME],
				       [DIAG_NAME_VN],
				       [IsDisabled]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[Diaglist] {0};
				
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="DoctorRequest_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets all records from the DoctorRequest table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[Id],
					[TID],
					[ReqID],
					[Code],
					[Description],
					[ReqDoctor],
					[ReqDate],
					[ReqStatus],
					[Billable],
					[Sample],
					[ColDate],
					[ColTime],
					[NurseDate],
					[NurseTime],
					[LabDate],
					[LabTime],
					[FinishDate],
					[FinishTime]
				FROM
					[dbo].[DoctorRequest]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="DoctorRequest_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the DoctorRequest table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[Id]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [Id]'
				SET @SQL = @SQL + ', [TID]'
				SET @SQL = @SQL + ', [ReqID]'
				SET @SQL = @SQL + ', [Code]'
				SET @SQL = @SQL + ', [Description]'
				SET @SQL = @SQL + ', [ReqDoctor]'
				SET @SQL = @SQL + ', [ReqDate]'
				SET @SQL = @SQL + ', [ReqStatus]'
				SET @SQL = @SQL + ', [Billable]'
				SET @SQL = @SQL + ', [Sample]'
				SET @SQL = @SQL + ', [ColDate]'
				SET @SQL = @SQL + ', [ColTime]'
				SET @SQL = @SQL + ', [NurseDate]'
				SET @SQL = @SQL + ', [NurseTime]'
				SET @SQL = @SQL + ', [LabDate]'
				SET @SQL = @SQL + ', [LabTime]'
				SET @SQL = @SQL + ', [FinishDate]'
				SET @SQL = @SQL + ', [FinishTime]'
				SET @SQL = @SQL + ' FROM [dbo].[DoctorRequest]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [Id],'
				SET @SQL = @SQL + ' [TID],'
				SET @SQL = @SQL + ' [ReqID],'
				SET @SQL = @SQL + ' [Code],'
				SET @SQL = @SQL + ' [Description],'
				SET @SQL = @SQL + ' [ReqDoctor],'
				SET @SQL = @SQL + ' [ReqDate],'
				SET @SQL = @SQL + ' [ReqStatus],'
				SET @SQL = @SQL + ' [Billable],'
				SET @SQL = @SQL + ' [Sample],'
				SET @SQL = @SQL + ' [ColDate],'
				SET @SQL = @SQL + ' [ColTime],'
				SET @SQL = @SQL + ' [NurseDate],'
				SET @SQL = @SQL + ' [NurseTime],'
				SET @SQL = @SQL + ' [LabDate],'
				SET @SQL = @SQL + ' [LabTime],'
				SET @SQL = @SQL + ' [FinishDate],'
				SET @SQL = @SQL + ' [FinishTime]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(1) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[DoctorRequest]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="DoctorRequest_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Inserts a record into the DoctorRequest table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Output" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Tid" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@ReqId" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@Code" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault=""/>
				<parameter name="@ReqDoctor" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@ReqDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@ReqStatus" type="nvarchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@Billable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Sample" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@ColDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@ColTime" type="time" direction="Input" size="5" precision="16" scale="7" param="" nulldefault=""/>
				<parameter name="@NurseDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@NurseTime" type="time" direction="Input" size="5" precision="16" scale="7" param="" nulldefault=""/>
				<parameter name="@LabDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@LabTime" type="time" direction="Input" size="5" precision="16" scale="7" param="" nulldefault=""/>
				<parameter name="@FinishDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@FinishTime" type="time" direction="Input" size="5" precision="16" scale="7" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[DoctorRequest]
					(
					[TID]
					,[ReqID]
					,[Code]
					,[Description]
					,[ReqDoctor]
					,[ReqDate]
					,[ReqStatus]
					,[Billable]
					,[Sample]
					,[ColDate]
					,[ColTime]
					,[NurseDate]
					,[NurseTime]
					,[LabDate]
					,[LabTime]
					,[FinishDate]
					,[FinishTime]
					)
				VALUES
					(
					@Tid
					,@ReqId
					,@Code
					,@Description
					,@ReqDoctor
					,@ReqDate
					,@ReqStatus
					,@Billable
					,@Sample
					,@ColDate
					,@ColTime
					,@NurseDate
					,@NurseTime
					,@LabDate
					,@LabTime
					,@FinishDate
					,@FinishTime
					)
				-- Get the identity value
				SET @Id = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="DoctorRequest_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Updates a record in the DoctorRequest table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@Tid" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@ReqId" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@Code" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault=""/>
				<parameter name="@ReqDoctor" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@ReqDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@ReqStatus" type="nvarchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@Billable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
				<parameter name="@Sample" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@ColDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@ColTime" type="time" direction="Input" size="5" precision="16" scale="7" param="" nulldefault=""/>
				<parameter name="@NurseDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@NurseTime" type="time" direction="Input" size="5" precision="16" scale="7" param="" nulldefault=""/>
				<parameter name="@LabDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@LabTime" type="time" direction="Input" size="5" precision="16" scale="7" param="" nulldefault=""/>
				<parameter name="@FinishDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@FinishTime" type="time" direction="Input" size="5" precision="16" scale="7" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[DoctorRequest]
				SET
					[TID] = @Tid
					,[ReqID] = @ReqId
					,[Code] = @Code
					,[Description] = @Description
					,[ReqDoctor] = @ReqDoctor
					,[ReqDate] = @ReqDate
					,[ReqStatus] = @ReqStatus
					,[Billable] = @Billable
					,[Sample] = @Sample
					,[ColDate] = @ColDate
					,[ColTime] = @ColTime
					,[NurseDate] = @NurseDate
					,[NurseTime] = @NurseTime
					,[LabDate] = @LabDate
					,[LabTime] = @LabTime
					,[FinishDate] = @FinishDate
					,[FinishTime] = @FinishTime
				WHERE
[Id] = @Id 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="DoctorRequest_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Deletes a record in the DoctorRequest table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[DoctorRequest] WITH (ROWLOCK) 
				WHERE
					[Id] = @Id
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="DoctorRequest_GetById" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Select records from the DoctorRequest table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[Id],
					[TID],
					[ReqID],
					[Code],
					[Description],
					[ReqDoctor],
					[ReqDate],
					[ReqStatus],
					[Billable],
					[Sample],
					[ColDate],
					[ColTime],
					[NurseDate],
					[NurseTime],
					[LabDate],
					[LabTime],
					[FinishDate],
					[FinishTime]
				FROM
					[dbo].[DoctorRequest]
				WHERE
                        
                            ISNULL([Id],0) = ISNULL(@Id,0)
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="DoctorRequest_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Finds records in the DoctorRequest table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@Tid" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@ReqId" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault="null"/>
				<parameter name="@Code" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault="null"/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault="null"/>
				<parameter name="@ReqDoctor" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@ReqDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@ReqStatus" type="nvarchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@Billable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Sample" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@ColDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@ColTime" type="time" direction="Input" size="5" precision="16" scale="7" param="" nulldefault="null"/>
				<parameter name="@NurseDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@NurseTime" type="time" direction="Input" size="5" precision="16" scale="7" param="" nulldefault="null"/>
				<parameter name="@LabDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@LabTime" type="time" direction="Input" size="5" precision="16" scale="7" param="" nulldefault="null"/>
				<parameter name="@FinishDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@FinishTime" type="time" direction="Input" size="5" precision="16" scale="7" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [Id]
	, [TID]
	, [ReqID]
	, [Code]
	, [Description]
	, [ReqDoctor]
	, [ReqDate]
	, [ReqStatus]
	, [Billable]
	, [Sample]
	, [ColDate]
	, [ColTime]
	, [NurseDate]
	, [NurseTime]
	, [LabDate]
	, [LabTime]
	, [FinishDate]
	, [FinishTime]
    FROM
	[dbo].[DoctorRequest]
    WHERE 
	 ([Id] = @Id OR @Id IS NULL)
	AND ([TID] = @Tid OR @Tid IS NULL)
	AND ([ReqID] = @ReqId OR @ReqId IS NULL)
	AND ([Code] = @Code OR @Code IS NULL)
	AND ([Description] = @Description OR @Description IS NULL)
	AND ([ReqDoctor] = @ReqDoctor OR @ReqDoctor IS NULL)
	AND ([ReqDate] = @ReqDate OR @ReqDate IS NULL)
	AND ([ReqStatus] = @ReqStatus OR @ReqStatus IS NULL)
	AND ([Billable] = @Billable OR @Billable IS NULL)
	AND ([Sample] = @Sample OR @Sample IS NULL)
	AND ([ColDate] = @ColDate OR @ColDate IS NULL)
	AND ([ColTime] = @ColTime OR @ColTime IS NULL)
	AND ([NurseDate] = @NurseDate OR @NurseDate IS NULL)
	AND ([NurseTime] = @NurseTime OR @NurseTime IS NULL)
	AND ([LabDate] = @LabDate OR @LabDate IS NULL)
	AND ([LabTime] = @LabTime OR @LabTime IS NULL)
	AND ([FinishDate] = @FinishDate OR @FinishDate IS NULL)
	AND ([FinishTime] = @FinishTime OR @FinishTime IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [Id]
	, [TID]
	, [ReqID]
	, [Code]
	, [Description]
	, [ReqDoctor]
	, [ReqDate]
	, [ReqStatus]
	, [Billable]
	, [Sample]
	, [ColDate]
	, [ColTime]
	, [NurseDate]
	, [NurseTime]
	, [LabDate]
	, [LabTime]
	, [FinishDate]
	, [FinishTime]
    FROM
	[dbo].[DoctorRequest]
    WHERE 
	 ([Id] = @Id AND @Id is not null)
	OR ([TID] = @Tid AND @Tid is not null)
	OR ([ReqID] = @ReqId AND @ReqId is not null)
	OR ([Code] = @Code AND @Code is not null)
	OR ([Description] = @Description AND @Description is not null)
	OR ([ReqDoctor] = @ReqDoctor AND @ReqDoctor is not null)
	OR ([ReqDate] = @ReqDate AND @ReqDate is not null)
	OR ([ReqStatus] = @ReqStatus AND @ReqStatus is not null)
	OR ([Billable] = @Billable AND @Billable is not null)
	OR ([Sample] = @Sample AND @Sample is not null)
	OR ([ColDate] = @ColDate AND @ColDate is not null)
	OR ([ColTime] = @ColTime AND @ColTime is not null)
	OR ([NurseDate] = @NurseDate AND @NurseDate is not null)
	OR ([NurseTime] = @NurseTime AND @NurseTime is not null)
	OR ([LabDate] = @LabDate AND @LabDate is not null)
	OR ([LabTime] = @LabTime AND @LabTime is not null)
	OR ([FinishDate] = @FinishDate AND @FinishDate is not null)
	OR ([FinishTime] = @FinishTime AND @FinishTime is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="DoctorRequest_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the DoctorRequest table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [Id]
					, [TID]
					, [ReqID]
					, [Code]
					, [Description]
					, [ReqDoctor]
					, [ReqDate]
					, [ReqStatus]
					, [Billable]
					, [Sample]
					, [ColDate]
					, [ColTime]
					, [NurseDate]
					, [NurseTime]
					, [LabDate]
					, [LabTime]
					, [FinishDate]
					, [FinishTime]
					FROM [dbo].[DoctorRequest] {0}
				)
				SELECT
				       [Id],
				       [TID],
				       [ReqID],
				       [Code],
				       [Description],
				       [ReqDoctor],
				       [ReqDate],
				       [ReqStatus],
				       [Billable],
				       [Sample],
				       [ColDate],
				       [ColTime],
				       [NurseDate],
				       [NurseTime],
				       [LabDate],
				       [LabTime],
				       [FinishDate],
				       [FinishTime]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[DoctorRequest] {0};
				
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="_DoctorRequest_LabDone"  skip="true">
			<comment><![CDATA[



]]></comment>
			<parameters>
				<parameter name="@TID" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
BEGIN SET NOCOUNT ON ;
        update DoctorRequest SET ReqStatus='Completed',FinishDate=GETDATE(),FinishTime=CONVERT (time, GETDATE())   WHERE TID=@TID
        UPDATE dbo.ClinicalStats SET Lab = 'Completed' WHERE TID=@TID
                
    END




			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="_DoctorRequest_UpdateStatus"  skip="true">
			<comment><![CDATA[
]]></comment>
			<parameters>
				<parameter name="@ReqStatus" type="nvarchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@ReqID" type="nvarchar" direction="Input" size="70" precision="0" scale="0" param="(70)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
BEGIN SET NOCOUNT ON ;
        update DoctorRequest SET ReqStatus=@ReqStatus WHERE tid+ReqID+code=@ReqID
                
    END



			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="_DoctorRequest_Insert"  skip="true">
			<comment><![CDATA[
]]></comment>
			<parameters>
				<parameter name="@TID" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@ReqID" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault="null"/>
				<parameter name="@Code" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault="null"/>
				<parameter name="@Description" type="nvarchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault="null"/>
				<parameter name="@ReqDoctor" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@ReqDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@ColDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@colTime" type="time" direction="Input" size="5" precision="16" scale="7" param="" nulldefault="null"/>
				<parameter name="@ReqStatus" type="nvarchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
BEGIN SET NOCOUNT ON ;
        INSERT  INTO DoctorRequest
                ( TID ,
                  ReqID ,
                  Code ,
                  Description ,
                  ReqDoctor ,
                  ReqDate,
                  ReqStatus,
                  ColDate,
                  ColTime
	          )
        VALUES  ( @TID ,
                  @ReqID ,
                  @Code ,
                  @Description ,
                  @ReqDoctor ,
                  @ReqDate ,
                  @ReqStatus,
                  @ColDate,
                  @colTime	
	          )
    END



			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="_DoctorRequest_GetByTID"  skip="true">
			<comment><![CDATA[


]]></comment>
			<parameters>
				<parameter name="@TID" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
SampleType
      ,[ReqDoctor]
      ,[ReqDate]
      ,[ReqStatus]
      ,[Billable]
      ,[Sample]
       FROM dbo.DoctorRequest INNER JOIN dbo.Vr_MedPro ON dbo.DoctorRequest.Code = dbo.Vr_MedPro.PRO_CODE WHERE TID=@TID
        END



			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="_DoctorRequest_UpdNurse"  skip="true">
			<comment><![CDATA[

]]></comment>
			<parameters>
				<parameter name="@code" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault="null"/>
				<parameter name="@billable" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@TID" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
BEGIN SET NOCOUNT ON ;
        update DoctorRequest SET billable = @billable,ReqStatus='To Lab',NurseDate=GETDATE(),NurseTime=CONVERT (time, GETDATE())   WHERE TID=@TID AND Code=@code
        UPDATE dbo.ClinicalStats SET Lab ='To Lab'
                
    END


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="_DoctorRequest_LabProcess"  skip="true">
			<comment><![CDATA[


]]></comment>
			<parameters>
				<parameter name="@sample" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@TID" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
BEGIN SET NOCOUNT ON ;
        update DoctorRequest SET ReqStatus='Lab WIP',sample = @sample,LabDate=GETDATE(),LabTime=CONVERT (time, GETDATE())   WHERE TID=@TID
        UPDATE dbo.ClinicalStats SET Lab = 'Lab WIP' WHERE TID=@TID
                
    END



			]]></body>
					</procedure>
		
		<procedure owner="dbo" name="ePrescription_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets all records from the ePrescription table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[PrescriptionID],
					[TransactionID],
					[PatientCode],
					[FirstName],
					[LastName],
					[DeliveryDate],
					[CreateDate],
					[Address],
					[DateOfBirth],
					[Age],
					[Weight],
					[Diagnosis],
					[DiagnosisVN],
					[DiagCode],
					[PrescribingDoctor],
					[Sex],
					[Remark],
					[IsComplete]
				FROM
					[dbo].[ePrescription]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ePrescription_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the ePrescription table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[PrescriptionID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [PrescriptionID]'
				SET @SQL = @SQL + ', [TransactionID]'
				SET @SQL = @SQL + ', [PatientCode]'
				SET @SQL = @SQL + ', [FirstName]'
				SET @SQL = @SQL + ', [LastName]'
				SET @SQL = @SQL + ', [DeliveryDate]'
				SET @SQL = @SQL + ', [CreateDate]'
				SET @SQL = @SQL + ', [Address]'
				SET @SQL = @SQL + ', [DateOfBirth]'
				SET @SQL = @SQL + ', [Age]'
				SET @SQL = @SQL + ', [Weight]'
				SET @SQL = @SQL + ', [Diagnosis]'
				SET @SQL = @SQL + ', [DiagnosisVN]'
				SET @SQL = @SQL + ', [DiagCode]'
				SET @SQL = @SQL + ', [PrescribingDoctor]'
				SET @SQL = @SQL + ', [Sex]'
				SET @SQL = @SQL + ', [Remark]'
				SET @SQL = @SQL + ', [IsComplete]'
				SET @SQL = @SQL + ' FROM [dbo].[ePrescription]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [PrescriptionID],'
				SET @SQL = @SQL + ' [TransactionID],'
				SET @SQL = @SQL + ' [PatientCode],'
				SET @SQL = @SQL + ' [FirstName],'
				SET @SQL = @SQL + ' [LastName],'
				SET @SQL = @SQL + ' [DeliveryDate],'
				SET @SQL = @SQL + ' [CreateDate],'
				SET @SQL = @SQL + ' [Address],'
				SET @SQL = @SQL + ' [DateOfBirth],'
				SET @SQL = @SQL + ' [Age],'
				SET @SQL = @SQL + ' [Weight],'
				SET @SQL = @SQL + ' [Diagnosis],'
				SET @SQL = @SQL + ' [DiagnosisVN],'
				SET @SQL = @SQL + ' [DiagCode],'
				SET @SQL = @SQL + ' [PrescribingDoctor],'
				SET @SQL = @SQL + ' [Sex],'
				SET @SQL = @SQL + ' [Remark],'
				SET @SQL = @SQL + ' [IsComplete]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(1) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[ePrescription]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="ePrescription_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Inserts a record into the ePrescription table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@PrescriptionId" type="nvarchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@TransactionId" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault=""/>
				<parameter name="@PatientCode" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@FirstName" type="nvarchar" direction="Input" size="30" precision="0" scale="0" param="(30)" nulldefault=""/>
				<parameter name="@LastName" type="nvarchar" direction="Input" size="30" precision="0" scale="0" param="(30)" nulldefault=""/>
				<parameter name="@DeliveryDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@Address" type="nvarchar" direction="Input" size="150" precision="0" scale="0" param="(150)" nulldefault=""/>
				<parameter name="@DateOfBirth" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@Age" type="nvarchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@Weight" type="nvarchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@Diagnosis" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@DiagnosisVn" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@DiagCode" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@PrescribingDoctor" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Sex" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@Remark" type="nvarchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault=""/>
				<parameter name="@IsComplete" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[ePrescription]
					(
					[PrescriptionID]
					,[TransactionID]
					,[PatientCode]
					,[FirstName]
					,[LastName]
					,[DeliveryDate]
					,[CreateDate]
					,[Address]
					,[DateOfBirth]
					,[Age]
					,[Weight]
					,[Diagnosis]
					,[DiagnosisVN]
					,[DiagCode]
					,[PrescribingDoctor]
					,[Sex]
					,[Remark]
					,[IsComplete]
					)
				VALUES
					(
					@PrescriptionId
					,@TransactionId
					,@PatientCode
					,@FirstName
					,@LastName
					,@DeliveryDate
					,@CreateDate
					,@Address
					,@DateOfBirth
					,@Age
					,@Weight
					,@Diagnosis
					,@DiagnosisVn
					,@DiagCode
					,@PrescribingDoctor
					,@Sex
					,@Remark
					,@IsComplete
					)
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ePrescription_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Updates a record in the ePrescription table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@PrescriptionId" type="nvarchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@OriginalPrescriptionId" type="nvarchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@TransactionId" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault=""/>
				<parameter name="@PatientCode" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@FirstName" type="nvarchar" direction="Input" size="30" precision="0" scale="0" param="(30)" nulldefault=""/>
				<parameter name="@LastName" type="nvarchar" direction="Input" size="30" precision="0" scale="0" param="(30)" nulldefault=""/>
				<parameter name="@DeliveryDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@Address" type="nvarchar" direction="Input" size="150" precision="0" scale="0" param="(150)" nulldefault=""/>
				<parameter name="@DateOfBirth" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@Age" type="nvarchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@Weight" type="nvarchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@Diagnosis" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@DiagnosisVn" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault=""/>
				<parameter name="@DiagCode" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@PrescribingDoctor" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault=""/>
				<parameter name="@Sex" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@Remark" type="nvarchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault=""/>
				<parameter name="@IsComplete" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[ePrescription]
				SET
					[PrescriptionID] = @PrescriptionId
					,[TransactionID] = @TransactionId
					,[PatientCode] = @PatientCode
					,[FirstName] = @FirstName
					,[LastName] = @LastName
					,[DeliveryDate] = @DeliveryDate
					,[CreateDate] = @CreateDate
					,[Address] = @Address
					,[DateOfBirth] = @DateOfBirth
					,[Age] = @Age
					,[Weight] = @Weight
					,[Diagnosis] = @Diagnosis
					,[DiagnosisVN] = @DiagnosisVn
					,[DiagCode] = @DiagCode
					,[PrescribingDoctor] = @PrescribingDoctor
					,[Sex] = @Sex
					,[Remark] = @Remark
					,[IsComplete] = @IsComplete
				WHERE
[PrescriptionID] = @OriginalPrescriptionId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ePrescription_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Deletes a record in the ePrescription table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@PrescriptionId" type="nvarchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[ePrescription] WITH (ROWLOCK) 
				WHERE
					[PrescriptionID] = @PrescriptionId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ePrescription_GetByPrescriptionId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Select records from the ePrescription table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@PrescriptionId" type="nvarchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[PrescriptionID],
					[TransactionID],
					[PatientCode],
					[FirstName],
					[LastName],
					[DeliveryDate],
					[CreateDate],
					[Address],
					[DateOfBirth],
					[Age],
					[Weight],
					[Diagnosis],
					[DiagnosisVN],
					[DiagCode],
					[PrescribingDoctor],
					[Sex],
					[Remark],
					[IsComplete]
				FROM
					[dbo].[ePrescription]
				WHERE
                        
                            ISNULL([PrescriptionID],0) = ISNULL(@PrescriptionId,0)
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ePrescription_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Finds records in the ePrescription table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PrescriptionId" type="nvarchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@TransactionId" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault="null"/>
				<parameter name="@PatientCode" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@FirstName" type="nvarchar" direction="Input" size="30" precision="0" scale="0" param="(30)" nulldefault="null"/>
				<parameter name="@LastName" type="nvarchar" direction="Input" size="30" precision="0" scale="0" param="(30)" nulldefault="null"/>
				<parameter name="@DeliveryDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Address" type="nvarchar" direction="Input" size="150" precision="0" scale="0" param="(150)" nulldefault="null"/>
				<parameter name="@DateOfBirth" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@Age" type="nvarchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@Weight" type="nvarchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@Diagnosis" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@DiagnosisVn" type="nvarchar" direction="Input" size="500" precision="0" scale="0" param="(500)" nulldefault="null"/>
				<parameter name="@DiagCode" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault="null"/>
				<parameter name="@PrescribingDoctor" type="nvarchar" direction="Input" size="100" precision="0" scale="0" param="(100)" nulldefault="null"/>
				<parameter name="@Sex" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault="null"/>
				<parameter name="@Remark" type="nvarchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault="null"/>
				<parameter name="@IsComplete" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [PrescriptionID]
	, [TransactionID]
	, [PatientCode]
	, [FirstName]
	, [LastName]
	, [DeliveryDate]
	, [CreateDate]
	, [Address]
	, [DateOfBirth]
	, [Age]
	, [Weight]
	, [Diagnosis]
	, [DiagnosisVN]
	, [DiagCode]
	, [PrescribingDoctor]
	, [Sex]
	, [Remark]
	, [IsComplete]
    FROM
	[dbo].[ePrescription]
    WHERE 
	 ([PrescriptionID] = @PrescriptionId OR @PrescriptionId IS NULL)
	AND ([TransactionID] = @TransactionId OR @TransactionId IS NULL)
	AND ([PatientCode] = @PatientCode OR @PatientCode IS NULL)
	AND ([FirstName] = @FirstName OR @FirstName IS NULL)
	AND ([LastName] = @LastName OR @LastName IS NULL)
	AND ([DeliveryDate] = @DeliveryDate OR @DeliveryDate IS NULL)
	AND ([CreateDate] = @CreateDate OR @CreateDate IS NULL)
	AND ([Address] = @Address OR @Address IS NULL)
	AND ([DateOfBirth] = @DateOfBirth OR @DateOfBirth IS NULL)
	AND ([Age] = @Age OR @Age IS NULL)
	AND ([Weight] = @Weight OR @Weight IS NULL)
	AND ([Diagnosis] = @Diagnosis OR @Diagnosis IS NULL)
	AND ([DiagnosisVN] = @DiagnosisVn OR @DiagnosisVn IS NULL)
	AND ([DiagCode] = @DiagCode OR @DiagCode IS NULL)
	AND ([PrescribingDoctor] = @PrescribingDoctor OR @PrescribingDoctor IS NULL)
	AND ([Sex] = @Sex OR @Sex IS NULL)
	AND ([Remark] = @Remark OR @Remark IS NULL)
	AND ([IsComplete] = @IsComplete OR @IsComplete IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [PrescriptionID]
	, [TransactionID]
	, [PatientCode]
	, [FirstName]
	, [LastName]
	, [DeliveryDate]
	, [CreateDate]
	, [Address]
	, [DateOfBirth]
	, [Age]
	, [Weight]
	, [Diagnosis]
	, [DiagnosisVN]
	, [DiagCode]
	, [PrescribingDoctor]
	, [Sex]
	, [Remark]
	, [IsComplete]
    FROM
	[dbo].[ePrescription]
    WHERE 
	 ([PrescriptionID] = @PrescriptionId AND @PrescriptionId is not null)
	OR ([TransactionID] = @TransactionId AND @TransactionId is not null)
	OR ([PatientCode] = @PatientCode AND @PatientCode is not null)
	OR ([FirstName] = @FirstName AND @FirstName is not null)
	OR ([LastName] = @LastName AND @LastName is not null)
	OR ([DeliveryDate] = @DeliveryDate AND @DeliveryDate is not null)
	OR ([CreateDate] = @CreateDate AND @CreateDate is not null)
	OR ([Address] = @Address AND @Address is not null)
	OR ([DateOfBirth] = @DateOfBirth AND @DateOfBirth is not null)
	OR ([Age] = @Age AND @Age is not null)
	OR ([Weight] = @Weight AND @Weight is not null)
	OR ([Diagnosis] = @Diagnosis AND @Diagnosis is not null)
	OR ([DiagnosisVN] = @DiagnosisVn AND @DiagnosisVn is not null)
	OR ([DiagCode] = @DiagCode AND @DiagCode is not null)
	OR ([PrescribingDoctor] = @PrescribingDoctor AND @PrescribingDoctor is not null)
	OR ([Sex] = @Sex AND @Sex is not null)
	OR ([Remark] = @Remark AND @Remark is not null)
	OR ([IsComplete] = @IsComplete AND @IsComplete is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="ePrescription_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the ePrescription table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [PrescriptionID]
					, [TransactionID]
					, [PatientCode]
					, [FirstName]
					, [LastName]
					, [DeliveryDate]
					, [CreateDate]
					, [Address]
					, [DateOfBirth]
					, [Age]
					, [Weight]
					, [Diagnosis]
					, [DiagnosisVN]
					, [DiagCode]
					, [PrescribingDoctor]
					, [Sex]
					, [Remark]
					, [IsComplete]
					FROM [dbo].[ePrescription] {0}
				)
				SELECT
				       [PrescriptionID],
				       [TransactionID],
				       [PatientCode],
				       [FirstName],
				       [LastName],
				       [DeliveryDate],
				       [CreateDate],
				       [Address],
				       [DateOfBirth],
				       [Age],
				       [Weight],
				       [Diagnosis],
				       [DiagnosisVN],
				       [DiagCode],
				       [PrescribingDoctor],
				       [Sex],
				       [Remark],
				       [IsComplete]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[ePrescription] {0};
				
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ePrescriptionDetail_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets all records from the ePrescriptionDetail table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[PrescriptionDetailId],
					[PrescriptionID],
					[Sq],
					[DrugId],
					[DrugName],
					[Unit],
					[UnitVN],
					[Remark],
					[RouteType],
					[RouteTypeVN],
					[Dosage],
					[DosageUnit],
					[DosageUnitVN],
					[Frequency],
					[FrequencyVN],
					[Duration],
					[DurationUnit],
					[DurationUnitVN],
					[TotalUnit],
					[Refill]
				FROM
					[dbo].[ePrescriptionDetail]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="ePrescriptionDetail_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the ePrescriptionDetail table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[PrescriptionDetailId]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [PrescriptionDetailId]'
				SET @SQL = @SQL + ', [PrescriptionID]'
				SET @SQL = @SQL + ', [Sq]'
				SET @SQL = @SQL + ', [DrugId]'
				SET @SQL = @SQL + ', [DrugName]'
				SET @SQL = @SQL + ', [Unit]'
				SET @SQL = @SQL + ', [UnitVN]'
				SET @SQL = @SQL + ', [Remark]'
				SET @SQL = @SQL + ', [RouteType]'
				SET @SQL = @SQL + ', [RouteTypeVN]'
				SET @SQL = @SQL + ', [Dosage]'
				SET @SQL = @SQL + ', [DosageUnit]'
				SET @SQL = @SQL + ', [DosageUnitVN]'
				SET @SQL = @SQL + ', [Frequency]'
				SET @SQL = @SQL + ', [FrequencyVN]'
				SET @SQL = @SQL + ', [Duration]'
				SET @SQL = @SQL + ', [DurationUnit]'
				SET @SQL = @SQL + ', [DurationUnitVN]'
				SET @SQL = @SQL + ', [TotalUnit]'
				SET @SQL = @SQL + ', [Refill]'
				SET @SQL = @SQL + ' FROM [dbo].[ePrescriptionDetail]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [PrescriptionDetailId],'
				SET @SQL = @SQL + ' [PrescriptionID],'
				SET @SQL = @SQL + ' [Sq],'
				SET @SQL = @SQL + ' [DrugId],'
				SET @SQL = @SQL + ' [DrugName],'
				SET @SQL = @SQL + ' [Unit],'
				SET @SQL = @SQL + ' [UnitVN],'
				SET @SQL = @SQL + ' [Remark],'
				SET @SQL = @SQL + ' [RouteType],'
				SET @SQL = @SQL + ' [RouteTypeVN],'
				SET @SQL = @SQL + ' [Dosage],'
				SET @SQL = @SQL + ' [DosageUnit],'
				SET @SQL = @SQL + ' [DosageUnitVN],'
				SET @SQL = @SQL + ' [Frequency],'
				SET @SQL = @SQL + ' [FrequencyVN],'
				SET @SQL = @SQL + ' [Duration],'
				SET @SQL = @SQL + ' [DurationUnit],'
				SET @SQL = @SQL + ' [DurationUnitVN],'
				SET @SQL = @SQL + ' [TotalUnit],'
				SET @SQL = @SQL + ' [Refill]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(1) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[ePrescriptionDetail]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="ePrescriptionDetail_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Inserts a record into the ePrescriptionDetail table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@PrescriptionDetailId" type="bigint" direction="Output" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@PrescriptionId" type="nvarchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@Sq" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DrugId" type="nvarchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@DrugName" type="nvarchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault=""/>
				<parameter name="@Unit" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@UnitVn" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Remark" type="nvarchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault=""/>
				<parameter name="@RouteType" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@RouteTypeVn" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Dosage" type="nvarchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@DosageUnit" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@DosageUnitVn" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Frequency" type="nvarchar" direction="Input" size="150" precision="0" scale="0" param="(150)" nulldefault=""/>
				<parameter name="@FrequencyVn" type="nvarchar" direction="Input" size="150" precision="0" scale="0" param="(150)" nulldefault=""/>
				<parameter name="@Duration" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@DurationUnit" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@DurationUnitVn" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@TotalUnit" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Refill" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[ePrescriptionDetail]
					(
					[PrescriptionID]
					,[Sq]
					,[DrugId]
					,[DrugName]
					,[Unit]
					,[UnitVN]
					,[Remark]
					,[RouteType]
					,[RouteTypeVN]
					,[Dosage]
					,[DosageUnit]
					,[DosageUnitVN]
					,[Frequency]
					,[FrequencyVN]
					,[Duration]
					,[DurationUnit]
					,[DurationUnitVN]
					,[TotalUnit]
					,[Refill]
					)
				VALUES
					(
					@PrescriptionId
					,@Sq
					,@DrugId
					,@DrugName
					,@Unit
					,@UnitVn
					,@Remark
					,@RouteType
					,@RouteTypeVn
					,@Dosage
					,@DosageUnit
					,@DosageUnitVn
					,@Frequency
					,@FrequencyVn
					,@Duration
					,@DurationUnit
					,@DurationUnitVn
					,@TotalUnit
					,@Refill
					)
				-- Get the identity value
				SET @PrescriptionDetailId = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ePrescriptionDetail_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Updates a record in the ePrescriptionDetail table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@PrescriptionDetailId" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@PrescriptionId" type="nvarchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@Sq" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault=""/>
				<parameter name="@DrugId" type="nvarchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@DrugName" type="nvarchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault=""/>
				<parameter name="@Unit" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@UnitVn" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Remark" type="nvarchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault=""/>
				<parameter name="@RouteType" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@RouteTypeVn" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Dosage" type="nvarchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@DosageUnit" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@DosageUnitVn" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Frequency" type="nvarchar" direction="Input" size="150" precision="0" scale="0" param="(150)" nulldefault=""/>
				<parameter name="@FrequencyVn" type="nvarchar" direction="Input" size="150" precision="0" scale="0" param="(150)" nulldefault=""/>
				<parameter name="@Duration" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@DurationUnit" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@DurationUnitVn" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@TotalUnit" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Refill" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[ePrescriptionDetail]
				SET
					[PrescriptionID] = @PrescriptionId
					,[Sq] = @Sq
					,[DrugId] = @DrugId
					,[DrugName] = @DrugName
					,[Unit] = @Unit
					,[UnitVN] = @UnitVn
					,[Remark] = @Remark
					,[RouteType] = @RouteType
					,[RouteTypeVN] = @RouteTypeVn
					,[Dosage] = @Dosage
					,[DosageUnit] = @DosageUnit
					,[DosageUnitVN] = @DosageUnitVn
					,[Frequency] = @Frequency
					,[FrequencyVN] = @FrequencyVn
					,[Duration] = @Duration
					,[DurationUnit] = @DurationUnit
					,[DurationUnitVN] = @DurationUnitVn
					,[TotalUnit] = @TotalUnit
					,[Refill] = @Refill
				WHERE
[PrescriptionDetailId] = @PrescriptionDetailId 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ePrescriptionDetail_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Deletes a record in the ePrescriptionDetail table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@PrescriptionDetailId" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[ePrescriptionDetail] WITH (ROWLOCK) 
				WHERE
					[PrescriptionDetailId] = @PrescriptionDetailId
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ePrescriptionDetail_GetByPrescriptionId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Select records from the ePrescriptionDetail table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@PrescriptionId" type="nvarchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[PrescriptionDetailId],
					[PrescriptionID],
					[Sq],
					[DrugId],
					[DrugName],
					[Unit],
					[UnitVN],
					[Remark],
					[RouteType],
					[RouteTypeVN],
					[Dosage],
					[DosageUnit],
					[DosageUnitVN],
					[Frequency],
					[FrequencyVN],
					[Duration],
					[DurationUnit],
					[DurationUnitVN],
					[TotalUnit],
					[Refill]
				FROM
					[dbo].[ePrescriptionDetail]
				WHERE
					[PrescriptionID] = @PrescriptionId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="ePrescriptionDetail_GetByPrescriptionDetailId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Select records from the ePrescriptionDetail table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@PrescriptionDetailId" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[PrescriptionDetailId],
					[PrescriptionID],
					[Sq],
					[DrugId],
					[DrugName],
					[Unit],
					[UnitVN],
					[Remark],
					[RouteType],
					[RouteTypeVN],
					[Dosage],
					[DosageUnit],
					[DosageUnitVN],
					[Frequency],
					[FrequencyVN],
					[Duration],
					[DurationUnit],
					[DurationUnitVN],
					[TotalUnit],
					[Refill]
				FROM
					[dbo].[ePrescriptionDetail]
				WHERE
                        
                            ISNULL([PrescriptionDetailId],0) = ISNULL(@PrescriptionDetailId,0)
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="ePrescriptionDetail_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Finds records in the ePrescriptionDetail table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@PrescriptionDetailId" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@PrescriptionId" type="nvarchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@Sq" type="int" direction="Input" size="4" precision="10" scale="0" param="" nulldefault="null"/>
				<parameter name="@DrugId" type="nvarchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@DrugName" type="nvarchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault="null"/>
				<parameter name="@Unit" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@UnitVn" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@Remark" type="nvarchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault="null"/>
				<parameter name="@RouteType" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@RouteTypeVn" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@Dosage" type="nvarchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@DosageUnit" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@DosageUnitVn" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@Frequency" type="nvarchar" direction="Input" size="150" precision="0" scale="0" param="(150)" nulldefault="null"/>
				<parameter name="@FrequencyVn" type="nvarchar" direction="Input" size="150" precision="0" scale="0" param="(150)" nulldefault="null"/>
				<parameter name="@Duration" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@DurationUnit" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@DurationUnitVn" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@TotalUnit" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@Refill" type="bit" direction="Input" size="1" precision="1" scale="0" param="" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [PrescriptionDetailId]
	, [PrescriptionID]
	, [Sq]
	, [DrugId]
	, [DrugName]
	, [Unit]
	, [UnitVN]
	, [Remark]
	, [RouteType]
	, [RouteTypeVN]
	, [Dosage]
	, [DosageUnit]
	, [DosageUnitVN]
	, [Frequency]
	, [FrequencyVN]
	, [Duration]
	, [DurationUnit]
	, [DurationUnitVN]
	, [TotalUnit]
	, [Refill]
    FROM
	[dbo].[ePrescriptionDetail]
    WHERE 
	 ([PrescriptionDetailId] = @PrescriptionDetailId OR @PrescriptionDetailId IS NULL)
	AND ([PrescriptionID] = @PrescriptionId OR @PrescriptionId IS NULL)
	AND ([Sq] = @Sq OR @Sq IS NULL)
	AND ([DrugId] = @DrugId OR @DrugId IS NULL)
	AND ([DrugName] = @DrugName OR @DrugName IS NULL)
	AND ([Unit] = @Unit OR @Unit IS NULL)
	AND ([UnitVN] = @UnitVn OR @UnitVn IS NULL)
	AND ([Remark] = @Remark OR @Remark IS NULL)
	AND ([RouteType] = @RouteType OR @RouteType IS NULL)
	AND ([RouteTypeVN] = @RouteTypeVn OR @RouteTypeVn IS NULL)
	AND ([Dosage] = @Dosage OR @Dosage IS NULL)
	AND ([DosageUnit] = @DosageUnit OR @DosageUnit IS NULL)
	AND ([DosageUnitVN] = @DosageUnitVn OR @DosageUnitVn IS NULL)
	AND ([Frequency] = @Frequency OR @Frequency IS NULL)
	AND ([FrequencyVN] = @FrequencyVn OR @FrequencyVn IS NULL)
	AND ([Duration] = @Duration OR @Duration IS NULL)
	AND ([DurationUnit] = @DurationUnit OR @DurationUnit IS NULL)
	AND ([DurationUnitVN] = @DurationUnitVn OR @DurationUnitVn IS NULL)
	AND ([TotalUnit] = @TotalUnit OR @TotalUnit IS NULL)
	AND ([Refill] = @Refill OR @Refill IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [PrescriptionDetailId]
	, [PrescriptionID]
	, [Sq]
	, [DrugId]
	, [DrugName]
	, [Unit]
	, [UnitVN]
	, [Remark]
	, [RouteType]
	, [RouteTypeVN]
	, [Dosage]
	, [DosageUnit]
	, [DosageUnitVN]
	, [Frequency]
	, [FrequencyVN]
	, [Duration]
	, [DurationUnit]
	, [DurationUnitVN]
	, [TotalUnit]
	, [Refill]
    FROM
	[dbo].[ePrescriptionDetail]
    WHERE 
	 ([PrescriptionDetailId] = @PrescriptionDetailId AND @PrescriptionDetailId is not null)
	OR ([PrescriptionID] = @PrescriptionId AND @PrescriptionId is not null)
	OR ([Sq] = @Sq AND @Sq is not null)
	OR ([DrugId] = @DrugId AND @DrugId is not null)
	OR ([DrugName] = @DrugName AND @DrugName is not null)
	OR ([Unit] = @Unit AND @Unit is not null)
	OR ([UnitVN] = @UnitVn AND @UnitVn is not null)
	OR ([Remark] = @Remark AND @Remark is not null)
	OR ([RouteType] = @RouteType AND @RouteType is not null)
	OR ([RouteTypeVN] = @RouteTypeVn AND @RouteTypeVn is not null)
	OR ([Dosage] = @Dosage AND @Dosage is not null)
	OR ([DosageUnit] = @DosageUnit AND @DosageUnit is not null)
	OR ([DosageUnitVN] = @DosageUnitVn AND @DosageUnitVn is not null)
	OR ([Frequency] = @Frequency AND @Frequency is not null)
	OR ([FrequencyVN] = @FrequencyVn AND @FrequencyVn is not null)
	OR ([Duration] = @Duration AND @Duration is not null)
	OR ([DurationUnit] = @DurationUnit AND @DurationUnit is not null)
	OR ([DurationUnitVN] = @DurationUnitVn AND @DurationUnitVn is not null)
	OR ([TotalUnit] = @TotalUnit AND @TotalUnit is not null)
	OR ([Refill] = @Refill AND @Refill is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="ePrescriptionDetail_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the ePrescriptionDetail table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [PrescriptionDetailId]
					, [PrescriptionID]
					, [Sq]
					, [DrugId]
					, [DrugName]
					, [Unit]
					, [UnitVN]
					, [Remark]
					, [RouteType]
					, [RouteTypeVN]
					, [Dosage]
					, [DosageUnit]
					, [DosageUnitVN]
					, [Frequency]
					, [FrequencyVN]
					, [Duration]
					, [DurationUnit]
					, [DurationUnitVN]
					, [TotalUnit]
					, [Refill]
					FROM [dbo].[ePrescriptionDetail] {0}
				)
				SELECT
				       [PrescriptionDetailId],
				       [PrescriptionID],
				       [Sq],
				       [DrugId],
				       [DrugName],
				       [Unit],
				       [UnitVN],
				       [Remark],
				       [RouteType],
				       [RouteTypeVN],
				       [Dosage],
				       [DosageUnit],
				       [DosageUnitVN],
				       [Frequency],
				       [FrequencyVN],
				       [Duration],
				       [DurationUnit],
				       [DurationUnitVN],
				       [TotalUnit],
				       [Refill]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[ePrescriptionDetail] {0};
				
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="FavoritDetail_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets all records from the FavoritDetail table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[ID],
					[FavouriteID],
					[DrugID],
					[DrugName],
					[RouteType],
					[RouteTypeVN],
					[Dosage],
					[DosageUnit],
					[DosageUnitVN],
					[Frequency],
					[FrequencyVN],
					[Duration],
					[DurationUnit],
					[DurationUnitVN],
					[TotalUnit],
					[Unit],
					[UnitVN]
				FROM
					[dbo].[FavoritDetail]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="FavoritDetail_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the FavoritDetail table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[ID]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [ID]'
				SET @SQL = @SQL + ', [FavouriteID]'
				SET @SQL = @SQL + ', [DrugID]'
				SET @SQL = @SQL + ', [DrugName]'
				SET @SQL = @SQL + ', [RouteType]'
				SET @SQL = @SQL + ', [RouteTypeVN]'
				SET @SQL = @SQL + ', [Dosage]'
				SET @SQL = @SQL + ', [DosageUnit]'
				SET @SQL = @SQL + ', [DosageUnitVN]'
				SET @SQL = @SQL + ', [Frequency]'
				SET @SQL = @SQL + ', [FrequencyVN]'
				SET @SQL = @SQL + ', [Duration]'
				SET @SQL = @SQL + ', [DurationUnit]'
				SET @SQL = @SQL + ', [DurationUnitVN]'
				SET @SQL = @SQL + ', [TotalUnit]'
				SET @SQL = @SQL + ', [Unit]'
				SET @SQL = @SQL + ', [UnitVN]'
				SET @SQL = @SQL + ' FROM [dbo].[FavoritDetail]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [ID],'
				SET @SQL = @SQL + ' [FavouriteID],'
				SET @SQL = @SQL + ' [DrugID],'
				SET @SQL = @SQL + ' [DrugName],'
				SET @SQL = @SQL + ' [RouteType],'
				SET @SQL = @SQL + ' [RouteTypeVN],'
				SET @SQL = @SQL + ' [Dosage],'
				SET @SQL = @SQL + ' [DosageUnit],'
				SET @SQL = @SQL + ' [DosageUnitVN],'
				SET @SQL = @SQL + ' [Frequency],'
				SET @SQL = @SQL + ' [FrequencyVN],'
				SET @SQL = @SQL + ' [Duration],'
				SET @SQL = @SQL + ' [DurationUnit],'
				SET @SQL = @SQL + ' [DurationUnitVN],'
				SET @SQL = @SQL + ' [TotalUnit],'
				SET @SQL = @SQL + ' [Unit],'
				SET @SQL = @SQL + ' [UnitVN]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(1) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[FavoritDetail]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="FavoritDetail_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Inserts a record into the FavoritDetail table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Output" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@FavouriteId" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@DrugId" type="nvarchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@DrugName" type="nvarchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault=""/>
				<parameter name="@RouteType" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@RouteTypeVn" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Dosage" type="nvarchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@DosageUnit" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@DosageUnitVn" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Frequency" type="nvarchar" direction="Input" size="150" precision="0" scale="0" param="(150)" nulldefault=""/>
				<parameter name="@FrequencyVn" type="nvarchar" direction="Input" size="150" precision="0" scale="0" param="(150)" nulldefault=""/>
				<parameter name="@Duration" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@DurationUnit" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@DurationUnitVn" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@TotalUnit" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Unit" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@UnitVn" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[FavoritDetail]
					(
					[FavouriteID]
					,[DrugID]
					,[DrugName]
					,[RouteType]
					,[RouteTypeVN]
					,[Dosage]
					,[DosageUnit]
					,[DosageUnitVN]
					,[Frequency]
					,[FrequencyVN]
					,[Duration]
					,[DurationUnit]
					,[DurationUnitVN]
					,[TotalUnit]
					,[Unit]
					,[UnitVN]
					)
				VALUES
					(
					@FavouriteId
					,@DrugId
					,@DrugName
					,@RouteType
					,@RouteTypeVn
					,@Dosage
					,@DosageUnit
					,@DosageUnitVn
					,@Frequency
					,@FrequencyVn
					,@Duration
					,@DurationUnit
					,@DurationUnitVn
					,@TotalUnit
					,@Unit
					,@UnitVn
					)
				-- Get the identity value
				SET @Id = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="FavoritDetail_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Updates a record in the FavoritDetail table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@FavouriteId" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
				<parameter name="@DrugId" type="nvarchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@DrugName" type="nvarchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault=""/>
				<parameter name="@RouteType" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@RouteTypeVn" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Dosage" type="nvarchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
				<parameter name="@DosageUnit" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@DosageUnitVn" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Frequency" type="nvarchar" direction="Input" size="150" precision="0" scale="0" param="(150)" nulldefault=""/>
				<parameter name="@FrequencyVn" type="nvarchar" direction="Input" size="150" precision="0" scale="0" param="(150)" nulldefault=""/>
				<parameter name="@Duration" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@DurationUnit" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@DurationUnitVn" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@TotalUnit" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Unit" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@UnitVn" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[FavoritDetail]
				SET
					[FavouriteID] = @FavouriteId
					,[DrugID] = @DrugId
					,[DrugName] = @DrugName
					,[RouteType] = @RouteType
					,[RouteTypeVN] = @RouteTypeVn
					,[Dosage] = @Dosage
					,[DosageUnit] = @DosageUnit
					,[DosageUnitVN] = @DosageUnitVn
					,[Frequency] = @Frequency
					,[FrequencyVN] = @FrequencyVn
					,[Duration] = @Duration
					,[DurationUnit] = @DurationUnit
					,[DurationUnitVN] = @DurationUnitVn
					,[TotalUnit] = @TotalUnit
					,[Unit] = @Unit
					,[UnitVN] = @UnitVn
				WHERE
[ID] = @Id 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="FavoritDetail_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Deletes a record in the FavoritDetail table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[FavoritDetail] WITH (ROWLOCK) 
				WHERE
					[ID] = @Id
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="FavoritDetail_GetByFavouriteId" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Select records from the FavoritDetail table through a foreign key
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@FavouriteId" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SET ANSI_NULLS OFF
				
				SELECT
					[ID],
					[FavouriteID],
					[DrugID],
					[DrugName],
					[RouteType],
					[RouteTypeVN],
					[Dosage],
					[DosageUnit],
					[DosageUnitVN],
					[Frequency],
					[FrequencyVN],
					[Duration],
					[DurationUnit],
					[DurationUnitVN],
					[TotalUnit],
					[Unit],
					[UnitVN]
				FROM
					[dbo].[FavoritDetail]
				WHERE
					[FavouriteID] = @FavouriteId
				
				SELECT @@ROWCOUNT
				SET ANSI_NULLS ON
			]]></body>
		</procedure>
		<procedure owner="dbo" name="FavoritDetail_GetById" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Select records from the FavoritDetail table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[ID],
					[FavouriteID],
					[DrugID],
					[DrugName],
					[RouteType],
					[RouteTypeVN],
					[Dosage],
					[DosageUnit],
					[DosageUnitVN],
					[Frequency],
					[FrequencyVN],
					[Duration],
					[DurationUnit],
					[DurationUnitVN],
					[TotalUnit],
					[Unit],
					[UnitVN]
				FROM
					[dbo].[FavoritDetail]
				WHERE
                        
                            ISNULL([ID],0) = ISNULL(@Id,0)
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="FavoritDetail_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Finds records in the FavoritDetail table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Id" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@FavouriteId" type="nvarchar" direction="Input" size="10" precision="0" scale="0" param="(10)" nulldefault="null"/>
				<parameter name="@DrugId" type="nvarchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@DrugName" type="nvarchar" direction="Input" size="250" precision="0" scale="0" param="(250)" nulldefault="null"/>
				<parameter name="@RouteType" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@RouteTypeVn" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@Dosage" type="nvarchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
				<parameter name="@DosageUnit" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@DosageUnitVn" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@Frequency" type="nvarchar" direction="Input" size="150" precision="0" scale="0" param="(150)" nulldefault="null"/>
				<parameter name="@FrequencyVn" type="nvarchar" direction="Input" size="150" precision="0" scale="0" param="(150)" nulldefault="null"/>
				<parameter name="@Duration" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@DurationUnit" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@DurationUnitVn" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@TotalUnit" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@Unit" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@UnitVn" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [ID]
	, [FavouriteID]
	, [DrugID]
	, [DrugName]
	, [RouteType]
	, [RouteTypeVN]
	, [Dosage]
	, [DosageUnit]
	, [DosageUnitVN]
	, [Frequency]
	, [FrequencyVN]
	, [Duration]
	, [DurationUnit]
	, [DurationUnitVN]
	, [TotalUnit]
	, [Unit]
	, [UnitVN]
    FROM
	[dbo].[FavoritDetail]
    WHERE 
	 ([ID] = @Id OR @Id IS NULL)
	AND ([FavouriteID] = @FavouriteId OR @FavouriteId IS NULL)
	AND ([DrugID] = @DrugId OR @DrugId IS NULL)
	AND ([DrugName] = @DrugName OR @DrugName IS NULL)
	AND ([RouteType] = @RouteType OR @RouteType IS NULL)
	AND ([RouteTypeVN] = @RouteTypeVn OR @RouteTypeVn IS NULL)
	AND ([Dosage] = @Dosage OR @Dosage IS NULL)
	AND ([DosageUnit] = @DosageUnit OR @DosageUnit IS NULL)
	AND ([DosageUnitVN] = @DosageUnitVn OR @DosageUnitVn IS NULL)
	AND ([Frequency] = @Frequency OR @Frequency IS NULL)
	AND ([FrequencyVN] = @FrequencyVn OR @FrequencyVn IS NULL)
	AND ([Duration] = @Duration OR @Duration IS NULL)
	AND ([DurationUnit] = @DurationUnit OR @DurationUnit IS NULL)
	AND ([DurationUnitVN] = @DurationUnitVn OR @DurationUnitVn IS NULL)
	AND ([TotalUnit] = @TotalUnit OR @TotalUnit IS NULL)
	AND ([Unit] = @Unit OR @Unit IS NULL)
	AND ([UnitVN] = @UnitVn OR @UnitVn IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [ID]
	, [FavouriteID]
	, [DrugID]
	, [DrugName]
	, [RouteType]
	, [RouteTypeVN]
	, [Dosage]
	, [DosageUnit]
	, [DosageUnitVN]
	, [Frequency]
	, [FrequencyVN]
	, [Duration]
	, [DurationUnit]
	, [DurationUnitVN]
	, [TotalUnit]
	, [Unit]
	, [UnitVN]
    FROM
	[dbo].[FavoritDetail]
    WHERE 
	 ([ID] = @Id AND @Id is not null)
	OR ([FavouriteID] = @FavouriteId AND @FavouriteId is not null)
	OR ([DrugID] = @DrugId AND @DrugId is not null)
	OR ([DrugName] = @DrugName AND @DrugName is not null)
	OR ([RouteType] = @RouteType AND @RouteType is not null)
	OR ([RouteTypeVN] = @RouteTypeVn AND @RouteTypeVn is not null)
	OR ([Dosage] = @Dosage AND @Dosage is not null)
	OR ([DosageUnit] = @DosageUnit AND @DosageUnit is not null)
	OR ([DosageUnitVN] = @DosageUnitVn AND @DosageUnitVn is not null)
	OR ([Frequency] = @Frequency AND @Frequency is not null)
	OR ([FrequencyVN] = @FrequencyVn AND @FrequencyVn is not null)
	OR ([Duration] = @Duration AND @Duration is not null)
	OR ([DurationUnit] = @DurationUnit AND @DurationUnit is not null)
	OR ([DurationUnitVN] = @DurationUnitVn AND @DurationUnitVn is not null)
	OR ([TotalUnit] = @TotalUnit AND @TotalUnit is not null)
	OR ([Unit] = @Unit AND @Unit is not null)
	OR ([UnitVN] = @UnitVn AND @UnitVn is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="FavoritDetail_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the FavoritDetail table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [ID]
					, [FavouriteID]
					, [DrugID]
					, [DrugName]
					, [RouteType]
					, [RouteTypeVN]
					, [Dosage]
					, [DosageUnit]
					, [DosageUnitVN]
					, [Frequency]
					, [FrequencyVN]
					, [Duration]
					, [DurationUnit]
					, [DurationUnitVN]
					, [TotalUnit]
					, [Unit]
					, [UnitVN]
					FROM [dbo].[FavoritDetail] {0}
				)
				SELECT
				       [ID],
				       [FavouriteID],
				       [DrugID],
				       [DrugName],
				       [RouteType],
				       [RouteTypeVN],
				       [Dosage],
				       [DosageUnit],
				       [DosageUnitVN],
				       [Frequency],
				       [FrequencyVN],
				       [Duration],
				       [DurationUnit],
				       [DurationUnitVN],
				       [TotalUnit],
				       [Unit],
				       [UnitVN]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[FavoritDetail] {0};
				
				END
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="VitalSign_Get_List" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets all records from the VitalSign table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				SELECT
					[VId],
					[PatientCode],
					[TID],
					[Tempurature],
					[Pulse],
					[Respiratory],
					[BloodPressure],
					[SatO2],
					[GCS],
					[Height],
					[Weight],
					[CreateDate],
					[UpdateDate],
					[UpdateUser]
				FROM
					[dbo].[VitalSign]
					
				SELECT @@ROWCOUNT
			]]></body>
		</procedure>
		
		
		<procedure owner="dbo" name="VitalSign_GetPaged" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the VitalSign table passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@WhereClause" type="varchar" direction="Input" size="8000" precision="0" scale="0" param="(8000)" />
				<parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>
				<parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
				<parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
			</parameters>
			<body><![CDATA[
				
				BEGIN
				DECLARE @PageLowerBound int
				DECLARE @PageUpperBound int
				
				-- Set the page bounds
				SET @PageLowerBound = @PageSize * @PageIndex
				SET @PageUpperBound = @PageLowerBound + @PageSize

				IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
				BEGIN
					-- default order by to first column
					SET @OrderBy = '[VId]'
				END

				-- SQL Server 2005 Paging
				DECLARE @SQL AS nvarchar(MAX)
				SET @SQL = 'WITH PageIndex AS ('
				SET @SQL = @SQL + ' SELECT'
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
				SET @SQL = @SQL + ', [VId]'
				SET @SQL = @SQL + ', [PatientCode]'
				SET @SQL = @SQL + ', [TID]'
				SET @SQL = @SQL + ', [Tempurature]'
				SET @SQL = @SQL + ', [Pulse]'
				SET @SQL = @SQL + ', [Respiratory]'
				SET @SQL = @SQL + ', [BloodPressure]'
				SET @SQL = @SQL + ', [SatO2]'
				SET @SQL = @SQL + ', [GCS]'
				SET @SQL = @SQL + ', [Height]'
				SET @SQL = @SQL + ', [Weight]'
				SET @SQL = @SQL + ', [CreateDate]'
				SET @SQL = @SQL + ', [UpdateDate]'
				SET @SQL = @SQL + ', [UpdateUser]'
				SET @SQL = @SQL + ' FROM [dbo].[VitalSign]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				SET @SQL = @SQL + ' ) SELECT'
				SET @SQL = @SQL + ' [VId],'
				SET @SQL = @SQL + ' [PatientCode],'
				SET @SQL = @SQL + ' [TID],'
				SET @SQL = @SQL + ' [Tempurature],'
				SET @SQL = @SQL + ' [Pulse],'
				SET @SQL = @SQL + ' [Respiratory],'
				SET @SQL = @SQL + ' [BloodPressure],'
				SET @SQL = @SQL + ' [SatO2],'
				SET @SQL = @SQL + ' [GCS],'
				SET @SQL = @SQL + ' [Height],'
				SET @SQL = @SQL + ' [Weight],'
				SET @SQL = @SQL + ' [CreateDate],'
				SET @SQL = @SQL + ' [UpdateDate],'
				SET @SQL = @SQL + ' [UpdateUser]'
				SET @SQL = @SQL + ' FROM PageIndex'
				SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
				IF @PageSize > 0
				BEGIN
					SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
				END
				SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
				EXEC sp_executesql @SQL
				
				-- get row count
				SET @SQL = 'SELECT COUNT(1) AS TotalRowCount'
				SET @SQL = @SQL + ' FROM [dbo].[VitalSign]'
				IF LEN(@WhereClause) > 0
				BEGIN
					SET @SQL = @SQL + ' WHERE ' + @WhereClause
				END
				EXEC sp_executesql @SQL
			
				END
			]]></body>
		</procedure>
		
		<procedure owner="dbo" name="VitalSign_Insert" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Inserts a record into the VitalSign table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Vid" type="bigint" direction="Output" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@PatientCode" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Tid" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault=""/>
				<parameter name="@Tempurature" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault=""/>
				<parameter name="@Pulse" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault=""/>
				<parameter name="@Respiratory" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault=""/>
				<parameter name="@BloodPressure" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault=""/>
				<parameter name="@Sato2" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault=""/>
				<parameter name="@Gcs" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault=""/>
				<parameter name="@Height" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault=""/>
				<parameter name="@Weight" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault=""/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdateUser" type="nvarchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				INSERT INTO [dbo].[VitalSign]
					(
					[PatientCode]
					,[TID]
					,[Tempurature]
					,[Pulse]
					,[Respiratory]
					,[BloodPressure]
					,[SatO2]
					,[GCS]
					,[Height]
					,[Weight]
					,[CreateDate]
					,[UpdateDate]
					,[UpdateUser]
					)
				VALUES
					(
					@PatientCode
					,@Tid
					,@Tempurature
					,@Pulse
					,@Respiratory
					,@BloodPressure
					,@Sato2
					,@Gcs
					,@Height
					,@Weight
					,@CreateDate
					,@UpdateDate
					,@UpdateUser
					)
				-- Get the identity value
				SET @Vid = SCOPE_IDENTITY()
									
							
			]]></body>
		</procedure>
		<procedure owner="dbo" name="VitalSign_Update" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Updates a record in the VitalSign table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Vid" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
				<parameter name="@PatientCode" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault=""/>
				<parameter name="@Tid" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault=""/>
				<parameter name="@Tempurature" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault=""/>
				<parameter name="@Pulse" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault=""/>
				<parameter name="@Respiratory" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault=""/>
				<parameter name="@BloodPressure" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault=""/>
				<parameter name="@Sato2" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault=""/>
				<parameter name="@Gcs" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault=""/>
				<parameter name="@Height" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault=""/>
				<parameter name="@Weight" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault=""/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault=""/>
				<parameter name="@UpdateUser" type="nvarchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				
				
				-- Modify the updatable columns
				UPDATE
					[dbo].[VitalSign]
				SET
					[PatientCode] = @PatientCode
					,[TID] = @Tid
					,[Tempurature] = @Tempurature
					,[Pulse] = @Pulse
					,[Respiratory] = @Respiratory
					,[BloodPressure] = @BloodPressure
					,[SatO2] = @Sato2
					,[GCS] = @Gcs
					,[Height] = @Height
					,[Weight] = @Weight
					,[CreateDate] = @CreateDate
					,[UpdateDate] = @UpdateDate
					,[UpdateUser] = @UpdateUser
				WHERE
[VId] = @Vid 
				
			]]></body>
		</procedure>
		<procedure owner="dbo" name="VitalSign_Delete" grant="">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Deletes a record in the VitalSign table
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Vid" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				DELETE FROM [dbo].[VitalSign] WITH (ROWLOCK) 
				WHERE
					[VId] = @Vid
					
			]]></body>
		</procedure>
		<procedure owner="dbo" name="VitalSign_GetByVid" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Select records from the VitalSign table through an index
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@Vid" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault=""/>
			</parameters>
			<body><![CDATA[
				SELECT
					[VId],
					[PatientCode],
					[TID],
					[Tempurature],
					[Pulse],
					[Respiratory],
					[BloodPressure],
					[SatO2],
					[GCS],
					[Height],
					[Weight],
					[CreateDate],
					[UpdateDate],
					[UpdateUser]
				FROM
					[dbo].[VitalSign]
				WHERE
                        
                            ISNULL([VId],0) = ISNULL(@Vid,0)
				SELECT @@ROWCOUNT
					
			]]></body>
			
		</procedure>
		<procedure owner="dbo" name="VitalSign_Find" >
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Finds records in the VitalSign table passing nullable parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters>
				<parameter name="@SearchUsingOR" type="bit" direction="Input" size="0" precision="1" scale="0" param="" nulldefault="null"/>
				<parameter name="@Vid" type="bigint" direction="Input" size="8" precision="19" scale="0" param="" nulldefault="null"/>
				<parameter name="@PatientCode" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@Tid" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault="null"/>
				<parameter name="@Tempurature" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault="null"/>
				<parameter name="@Pulse" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault="null"/>
				<parameter name="@Respiratory" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault="null"/>
				<parameter name="@BloodPressure" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault="null"/>
				<parameter name="@Sato2" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault="null"/>
				<parameter name="@Gcs" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault="null"/>
				<parameter name="@Height" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault="null"/>
				<parameter name="@Weight" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault="null"/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@UpdateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@UpdateUser" type="nvarchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
  IF ISNULL(@SearchUsingOR, 0) <> 1
  BEGIN
    SELECT
	  [VId]
	, [PatientCode]
	, [TID]
	, [Tempurature]
	, [Pulse]
	, [Respiratory]
	, [BloodPressure]
	, [SatO2]
	, [GCS]
	, [Height]
	, [Weight]
	, [CreateDate]
	, [UpdateDate]
	, [UpdateUser]
    FROM
	[dbo].[VitalSign]
    WHERE 
	 ([VId] = @Vid OR @Vid IS NULL)
	AND ([PatientCode] = @PatientCode OR @PatientCode IS NULL)
	AND ([TID] = @Tid OR @Tid IS NULL)
	AND ([Tempurature] = @Tempurature OR @Tempurature IS NULL)
	AND ([Pulse] = @Pulse OR @Pulse IS NULL)
	AND ([Respiratory] = @Respiratory OR @Respiratory IS NULL)
	AND ([BloodPressure] = @BloodPressure OR @BloodPressure IS NULL)
	AND ([SatO2] = @Sato2 OR @Sato2 IS NULL)
	AND ([GCS] = @Gcs OR @Gcs IS NULL)
	AND ([Height] = @Height OR @Height IS NULL)
	AND ([Weight] = @Weight OR @Weight IS NULL)
	AND ([CreateDate] = @CreateDate OR @CreateDate IS NULL)
	AND ([UpdateDate] = @UpdateDate OR @UpdateDate IS NULL)
	AND ([UpdateUser] = @UpdateUser OR @UpdateUser IS NULL)
						
  END
  ELSE
  BEGIN
    SELECT
	  [VId]
	, [PatientCode]
	, [TID]
	, [Tempurature]
	, [Pulse]
	, [Respiratory]
	, [BloodPressure]
	, [SatO2]
	, [GCS]
	, [Height]
	, [Weight]
	, [CreateDate]
	, [UpdateDate]
	, [UpdateUser]
    FROM
	[dbo].[VitalSign]
    WHERE 
	 ([VId] = @Vid AND @Vid is not null)
	OR ([PatientCode] = @PatientCode AND @PatientCode is not null)
	OR ([TID] = @Tid AND @Tid is not null)
	OR ([Tempurature] = @Tempurature AND @Tempurature is not null)
	OR ([Pulse] = @Pulse AND @Pulse is not null)
	OR ([Respiratory] = @Respiratory AND @Respiratory is not null)
	OR ([BloodPressure] = @BloodPressure AND @BloodPressure is not null)
	OR ([SatO2] = @Sato2 AND @Sato2 is not null)
	OR ([GCS] = @Gcs AND @Gcs is not null)
	OR ([Height] = @Height AND @Height is not null)
	OR ([Weight] = @Weight AND @Weight is not null)
	OR ([CreateDate] = @CreateDate AND @CreateDate is not null)
	OR ([UpdateDate] = @UpdateDate AND @UpdateDate is not null)
	OR ([UpdateUser] = @UpdateUser AND @UpdateUser is not null)
	SELECT @@ROWCOUNT			
  END
				]]></body>
		</procedure>

		
		<procedure owner="dbo" name="VitalSign_Find_Dynamic"  skip="true">
			<comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the VitalSign table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
			<parameters/>
			<body><![CDATA[
				
				BEGIN
				
				WITH PageIndex AS (
					SELECT TOP {3} row_number() over (order by {1}) AS RowIndex
					, [VId]
					, [PatientCode]
					, [TID]
					, [Tempurature]
					, [Pulse]
					, [Respiratory]
					, [BloodPressure]
					, [SatO2]
					, [GCS]
					, [Height]
					, [Weight]
					, [CreateDate]
					, [UpdateDate]
					, [UpdateUser]
					FROM [dbo].[VitalSign] {0}
				)
				SELECT
				       [VId],
				       [PatientCode],
				       [TID],
				       [Tempurature],
				       [Pulse],
				       [Respiratory],
				       [BloodPressure],
				       [SatO2],
				       [GCS],
				       [Height],
				       [Weight],
				       [CreateDate],
				       [UpdateDate],
				       [UpdateUser]
				  FROM PageIndex
				 WHERE RowIndex > {2}
				   AND RowIndex <= {3}
				ORDER BY {1};
				

				-- get total count
				SELECT COUNT(*) AS TotalRowCount FROM [dbo].[VitalSign] {0};
				
				END
			]]></body>
		</procedure>
		
				
		<procedure owner="dbo" name="_VitalSign_GetByTid"  skip="true">
			<comment><![CDATA[


]]></comment>
			<parameters>
				<parameter name="@TID" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
BEGIN SET NOCOUNT ON ;
        SELECT * FROM dbo.VitalSign WHERE TID=@TID
    END


			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="_VitalSign_Update"  skip="true">
			<comment><![CDATA[

]]></comment>
			<parameters>
				<parameter name="@TID" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault="null"/>
				<parameter name="@temp" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault="null"/>
				<parameter name="@pulse" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault="null"/>
				<parameter name="@res" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault="null"/>
				<parameter name="@press" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault="null"/>
				<parameter name="@satO2" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault="null"/>
				<parameter name="@gcs" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault="null"/>
				<parameter name="@height" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault="null"/>
				<parameter name="@weight" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault="null"/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@user" type="nvarchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
BEGIN
        SET NOCOUNT ON ;
        UPDATE  dbo.VitalSign
        SET     Tempurature = @temp ,
                Pulse = @pulse ,
                Respiratory = @res ,
                BloodPressure = @press ,
                SatO2 = @satO2 ,
                GCS = @gcs ,
                Height = @height ,
                Weight = @weight ,
                CreateDate = @CreateDate ,
                UpdateUser = @user
        WHERE   TID = @TID
    END




			]]></body>
					</procedure>
				
		<procedure owner="dbo" name="_VitalSign_Insert"  skip="true">
			<comment><![CDATA[

]]></comment>
			<parameters>
				<parameter name="@TID" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault="null"/>
				<parameter name="@PatientCode" type="nvarchar" direction="Input" size="50" precision="0" scale="0" param="(50)" nulldefault="null"/>
				<parameter name="@temp" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault="null"/>
				<parameter name="@pulse" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault="null"/>
				<parameter name="@res" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault="null"/>
				<parameter name="@press" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault="null"/>
				<parameter name="@satO2" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault="null"/>
				<parameter name="@gcs" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault="null"/>
				<parameter name="@height" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault="null"/>
				<parameter name="@weight" type="nvarchar" direction="Input" size="15" precision="0" scale="0" param="(15)" nulldefault="null"/>
				<parameter name="@CreateDate" type="datetime" direction="Input" size="8" precision="23" scale="3" param="" nulldefault="null"/>
				<parameter name="@user" type="nvarchar" direction="Input" size="20" precision="0" scale="0" param="(20)" nulldefault="null"/>
			</parameters>
			<body><![CDATA[
				
BEGIN SET NOCOUNT ON ;
        INSERT  INTO dbo.VitalSign
                ( PatientCode ,
                  TID ,
                  Tempurature ,
                  Pulse ,
                  Respiratory ,
                  BloodPressure ,
                  SatO2 ,
                  GCS ,
                  Height ,
                  Weight ,
                  CreateDate ,
            
                  UpdateUser
                )
        VALUES  ( @PatientCode , -- PatientCode - nvarchar(50)
                  @TID , -- TID - nvarchar(15)
                  @temp , -- Tempurature - nvarchar(15)
                  @pulse , -- Pulse - nvarchar(15)
                  @res , -- Respiratory - nvarchar(15)
                  @press , -- BloodPressure - nvarchar(15)
                  @satO2 , -- SatO2 - nvarchar(15)
                  @gcs , -- GCS - nvarchar(15)
                  @height , -- Height - nvarchar(15)
                  @weight , -- Weight - nvarchar(15)
                  @CreateDate , -- CreateDate - datetime
                
                  @user  -- UpdateUser - nvarchar(20)
                )
    END




			]]></body>
					</procedure>
            <procedure owner="dbo" name="Vr_DoctorDone_Get_List" >
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets all records from the Vr_DoctorDone view
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters/>
                <body><![CDATA[
                    
                    SELECT
                        [StatId],
                        [PatientCode],
                        [TID],
                        [FirstName],
                        [LastName],
                        [DOB],
                        [Sex],
                        [Nationality],
                        [PatientStart],
                        [VitalSign],
                        [Lab],
                        [Xray],
                        [UltraSound],
                        [Cardiology],
                        [MedReport],
                        [ChargedCodes],
                        [IsCompleted],
                        [CreateDate]
                    FROM
                        [dbo].[Vr_DoctorDone]
                        
                    SELECT @@ROWCOUNT			
                ]]></body>
            </procedure>
            
            <procedure owner="dbo" name="Vr_DoctorDone_Get" >
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the Vr_DoctorDone view passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters>
                    <parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
                    <parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>			
                    <parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
                    <parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
                </parameters>
                <body><![CDATA[
                    
                    BEGIN
    
                    DECLARE @PageLowerBound int
                    DECLARE @PageUpperBound int
                    
                    -- Set the page bounds
                    SET @PageLowerBound = @PageSize * @PageIndex
                    SET @PageUpperBound = @PageLowerBound + @PageSize
    
                    IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
                    BEGIN
                        -- default order by to first column
                        SET @OrderBy = '[StatId]'
                    END
    
                    -- SQL Server 2005 Paging
                    DECLARE @SQL AS nvarchar(MAX)
                    SET @SQL = 'WITH PageIndex AS ('
                    SET @SQL = @SQL + ' SELECT'
                    IF @PageSize > 0
                    BEGIN
                        SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
                    END
                    SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
                    SET @SQL = @SQL + ', [StatId]'
                    SET @SQL = @SQL + ', [PatientCode]'
                    SET @SQL = @SQL + ', [TID]'
                    SET @SQL = @SQL + ', [FirstName]'
                    SET @SQL = @SQL + ', [LastName]'
                    SET @SQL = @SQL + ', [DOB]'
                    SET @SQL = @SQL + ', [Sex]'
                    SET @SQL = @SQL + ', [Nationality]'
                    SET @SQL = @SQL + ', [PatientStart]'
                    SET @SQL = @SQL + ', [VitalSign]'
                    SET @SQL = @SQL + ', [Lab]'
                    SET @SQL = @SQL + ', [Xray]'
                    SET @SQL = @SQL + ', [UltraSound]'
                    SET @SQL = @SQL + ', [Cardiology]'
                    SET @SQL = @SQL + ', [MedReport]'
                    SET @SQL = @SQL + ', [ChargedCodes]'
                    SET @SQL = @SQL + ', [IsCompleted]'
                    SET @SQL = @SQL + ', [CreateDate]'
                    SET @SQL = @SQL + ' FROM [dbo].[Vr_DoctorDone]'
                    IF LEN(@WhereClause) > 0
                    BEGIN
                        SET @SQL = @SQL + ' WHERE ' + @WhereClause
                    END
                    SET @SQL = @SQL + ' ) SELECT'
                    SET @SQL = @SQL + ' [StatId],'
                    SET @SQL = @SQL + ' [PatientCode],'
                    SET @SQL = @SQL + ' [TID],'
                    SET @SQL = @SQL + ' [FirstName],'
                    SET @SQL = @SQL + ' [LastName],'
                    SET @SQL = @SQL + ' [DOB],'
                    SET @SQL = @SQL + ' [Sex],'
                    SET @SQL = @SQL + ' [Nationality],'
                    SET @SQL = @SQL + ' [PatientStart],'
                    SET @SQL = @SQL + ' [VitalSign],'
                    SET @SQL = @SQL + ' [Lab],'
                    SET @SQL = @SQL + ' [Xray],'
                    SET @SQL = @SQL + ' [UltraSound],'
                    SET @SQL = @SQL + ' [Cardiology],'
                    SET @SQL = @SQL + ' [MedReport],'
                    SET @SQL = @SQL + ' [ChargedCodes],'
                    SET @SQL = @SQL + ' [IsCompleted],'
                    SET @SQL = @SQL + ' [CreateDate]'
                    SET @SQL = @SQL + ' FROM PageIndex'
                    SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
                    IF @PageSize > 0
                    BEGIN
                        SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
                    END
                    IF LEN(@OrderBy) > 0
                    BEGIN
                        SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
                    END
                    EXEC sp_executesql @SQL
    
                    -- get row count
                    SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
                    SET @SQL = @SQL + ' FROM [dbo].[Vr_DoctorDone]'
                    IF LEN(@WhereClause) > 0
                    BEGIN
                        SET @SQL = @SQL + ' WHERE ' + @WhereClause
                    END
                    EXEC sp_executesql @SQL
                    
                    END
                ]]></body>
            </procedure>
            
            
            <procedure owner="dbo" name="Vr_DoctorDone_Find_Dynamic"  skip="true">
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the Vr_DoctorDone table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters/>
                <body><![CDATA[
                    
                    BEGIN
                    
                    WITH PageIndex AS (
                        SELECT TOP {3} row_number() OVER (ORDER BY {1}) AS RowIndex
                        , [StatId]
                        , [PatientCode]
                        , [TID]
                        , [FirstName]
                        , [LastName]
                        , [DOB]
                        , [Sex]
                        , [Nationality]
                        , [PatientStart]
                        , [VitalSign]
                        , [Lab]
                        , [Xray]
                        , [UltraSound]
                        , [Cardiology]
                        , [MedReport]
                        , [ChargedCodes]
                        , [IsCompleted]
                        , [CreateDate]
                        FROM [dbo].[Vr_DoctorDone] {0}
                    )
                    SELECT
                        [StatId],
                        [PatientCode],
                        [TID],
                        [FirstName],
                        [LastName],
                        [DOB],
                        [Sex],
                        [Nationality],
                        [PatientStart],
                        [VitalSign],
                        [Lab],
                        [Xray],
                        [UltraSound],
                        [Cardiology],
                        [MedReport],
                        [ChargedCodes],
                        [IsCompleted],
                        [CreateDate]
                    FROM PageIndex
                    WHERE RowIndex > {2}
                    AND RowIndex <= {3}
                    ORDER BY {1};
                    
                    -- get total count
                    SELECT COUNT(*) AS TotalRowCount FROM [dbo].[Vr_DoctorDone] {0};
                    
                    END
                ]]></body>
            </procedure>
            
            <procedure owner="dbo" name="Vr_Doctorwip_Get_List" >
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets all records from the Vr_Doctorwip view
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters/>
                <body><![CDATA[
                    
                    SELECT
                        [StatId],
                        [PatientCode],
                        [TID],
                        [FirstName],
                        [LastName],
                        [DOB],
                        [Sex],
                        [Nationality],
                        [PatientStart],
                        [VitalSign],
                        [Lab],
                        [Xray],
                        [UltraSound],
                        [Cardiology],
                        [MedReport],
                        [ChargedCodes],
                        [IsCompleted],
                        [CreateDate]
                    FROM
                        [dbo].[Vr_Doctorwip]
                        
                    SELECT @@ROWCOUNT			
                ]]></body>
            </procedure>
            
            <procedure owner="dbo" name="Vr_Doctorwip_Get" >
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the Vr_Doctorwip view passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters>
                    <parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
                    <parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>			
                    <parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
                    <parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
                </parameters>
                <body><![CDATA[
                    
                    BEGIN
    
                    DECLARE @PageLowerBound int
                    DECLARE @PageUpperBound int
                    
                    -- Set the page bounds
                    SET @PageLowerBound = @PageSize * @PageIndex
                    SET @PageUpperBound = @PageLowerBound + @PageSize
    
                    IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
                    BEGIN
                        -- default order by to first column
                        SET @OrderBy = '[StatId]'
                    END
    
                    -- SQL Server 2005 Paging
                    DECLARE @SQL AS nvarchar(MAX)
                    SET @SQL = 'WITH PageIndex AS ('
                    SET @SQL = @SQL + ' SELECT'
                    IF @PageSize > 0
                    BEGIN
                        SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
                    END
                    SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
                    SET @SQL = @SQL + ', [StatId]'
                    SET @SQL = @SQL + ', [PatientCode]'
                    SET @SQL = @SQL + ', [TID]'
                    SET @SQL = @SQL + ', [FirstName]'
                    SET @SQL = @SQL + ', [LastName]'
                    SET @SQL = @SQL + ', [DOB]'
                    SET @SQL = @SQL + ', [Sex]'
                    SET @SQL = @SQL + ', [Nationality]'
                    SET @SQL = @SQL + ', [PatientStart]'
                    SET @SQL = @SQL + ', [VitalSign]'
                    SET @SQL = @SQL + ', [Lab]'
                    SET @SQL = @SQL + ', [Xray]'
                    SET @SQL = @SQL + ', [UltraSound]'
                    SET @SQL = @SQL + ', [Cardiology]'
                    SET @SQL = @SQL + ', [MedReport]'
                    SET @SQL = @SQL + ', [ChargedCodes]'
                    SET @SQL = @SQL + ', [IsCompleted]'
                    SET @SQL = @SQL + ', [CreateDate]'
                    SET @SQL = @SQL + ' FROM [dbo].[Vr_Doctorwip]'
                    IF LEN(@WhereClause) > 0
                    BEGIN
                        SET @SQL = @SQL + ' WHERE ' + @WhereClause
                    END
                    SET @SQL = @SQL + ' ) SELECT'
                    SET @SQL = @SQL + ' [StatId],'
                    SET @SQL = @SQL + ' [PatientCode],'
                    SET @SQL = @SQL + ' [TID],'
                    SET @SQL = @SQL + ' [FirstName],'
                    SET @SQL = @SQL + ' [LastName],'
                    SET @SQL = @SQL + ' [DOB],'
                    SET @SQL = @SQL + ' [Sex],'
                    SET @SQL = @SQL + ' [Nationality],'
                    SET @SQL = @SQL + ' [PatientStart],'
                    SET @SQL = @SQL + ' [VitalSign],'
                    SET @SQL = @SQL + ' [Lab],'
                    SET @SQL = @SQL + ' [Xray],'
                    SET @SQL = @SQL + ' [UltraSound],'
                    SET @SQL = @SQL + ' [Cardiology],'
                    SET @SQL = @SQL + ' [MedReport],'
                    SET @SQL = @SQL + ' [ChargedCodes],'
                    SET @SQL = @SQL + ' [IsCompleted],'
                    SET @SQL = @SQL + ' [CreateDate]'
                    SET @SQL = @SQL + ' FROM PageIndex'
                    SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
                    IF @PageSize > 0
                    BEGIN
                        SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
                    END
                    IF LEN(@OrderBy) > 0
                    BEGIN
                        SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
                    END
                    EXEC sp_executesql @SQL
    
                    -- get row count
                    SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
                    SET @SQL = @SQL + ' FROM [dbo].[Vr_Doctorwip]'
                    IF LEN(@WhereClause) > 0
                    BEGIN
                        SET @SQL = @SQL + ' WHERE ' + @WhereClause
                    END
                    EXEC sp_executesql @SQL
                    
                    END
                ]]></body>
            </procedure>
            
            
            <procedure owner="dbo" name="Vr_Doctorwip_Find_Dynamic"  skip="true">
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the Vr_Doctorwip table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters/>
                <body><![CDATA[
                    
                    BEGIN
                    
                    WITH PageIndex AS (
                        SELECT TOP {3} row_number() OVER (ORDER BY {1}) AS RowIndex
                        , [StatId]
                        , [PatientCode]
                        , [TID]
                        , [FirstName]
                        , [LastName]
                        , [DOB]
                        , [Sex]
                        , [Nationality]
                        , [PatientStart]
                        , [VitalSign]
                        , [Lab]
                        , [Xray]
                        , [UltraSound]
                        , [Cardiology]
                        , [MedReport]
                        , [ChargedCodes]
                        , [IsCompleted]
                        , [CreateDate]
                        FROM [dbo].[Vr_Doctorwip] {0}
                    )
                    SELECT
                        [StatId],
                        [PatientCode],
                        [TID],
                        [FirstName],
                        [LastName],
                        [DOB],
                        [Sex],
                        [Nationality],
                        [PatientStart],
                        [VitalSign],
                        [Lab],
                        [Xray],
                        [UltraSound],
                        [Cardiology],
                        [MedReport],
                        [ChargedCodes],
                        [IsCompleted],
                        [CreateDate]
                    FROM PageIndex
                    WHERE RowIndex > {2}
                    AND RowIndex <= {3}
                    ORDER BY {1};
                    
                    -- get total count
                    SELECT COUNT(*) AS TotalRowCount FROM [dbo].[Vr_Doctorwip] {0};
                    
                    END
                ]]></body>
            </procedure>
            
            <procedure owner="dbo" name="VR_ePresDetail_Get_List" >
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets all records from the VR_ePresDetail view
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters/>
                <body><![CDATA[
                    
                    SELECT
                        [PrescriptionDetailId],
                        [PrescriptionID],
                        [Sq],
                        [DrugId],
                        [DrugName],
                        [Unit],
                        [UnitVN],
                        [Remark],
                        [Dosage],
                        [Frequency],
                        [VN_meaning],
                        [Duration],
                        [TotalUnit],
                        [meaning],
                        [abbre]
                    FROM
                        [dbo].[VR_ePresDetail]
                        
                    SELECT @@ROWCOUNT			
                ]]></body>
            </procedure>
            
            <procedure owner="dbo" name="VR_ePresDetail_Get" >
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the VR_ePresDetail view passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters>
                    <parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
                    <parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>			
                    <parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
                    <parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
                </parameters>
                <body><![CDATA[
                    
                    BEGIN
    
                    DECLARE @PageLowerBound int
                    DECLARE @PageUpperBound int
                    
                    -- Set the page bounds
                    SET @PageLowerBound = @PageSize * @PageIndex
                    SET @PageUpperBound = @PageLowerBound + @PageSize
    
                    IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
                    BEGIN
                        -- default order by to first column
                        SET @OrderBy = '[PrescriptionDetailId]'
                    END
    
                    -- SQL Server 2005 Paging
                    DECLARE @SQL AS nvarchar(MAX)
                    SET @SQL = 'WITH PageIndex AS ('
                    SET @SQL = @SQL + ' SELECT'
                    IF @PageSize > 0
                    BEGIN
                        SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
                    END
                    SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
                    SET @SQL = @SQL + ', [PrescriptionDetailId]'
                    SET @SQL = @SQL + ', [PrescriptionID]'
                    SET @SQL = @SQL + ', [Sq]'
                    SET @SQL = @SQL + ', [DrugId]'
                    SET @SQL = @SQL + ', [DrugName]'
                    SET @SQL = @SQL + ', [Unit]'
                    SET @SQL = @SQL + ', [UnitVN]'
                    SET @SQL = @SQL + ', [Remark]'
                    SET @SQL = @SQL + ', [Dosage]'
                    SET @SQL = @SQL + ', [Frequency]'
                    SET @SQL = @SQL + ', [VN_meaning]'
                    SET @SQL = @SQL + ', [Duration]'
                    SET @SQL = @SQL + ', [TotalUnit]'
                    SET @SQL = @SQL + ', [meaning]'
                    SET @SQL = @SQL + ', [abbre]'
                    SET @SQL = @SQL + ' FROM [dbo].[VR_ePresDetail]'
                    IF LEN(@WhereClause) > 0
                    BEGIN
                        SET @SQL = @SQL + ' WHERE ' + @WhereClause
                    END
                    SET @SQL = @SQL + ' ) SELECT'
                    SET @SQL = @SQL + ' [PrescriptionDetailId],'
                    SET @SQL = @SQL + ' [PrescriptionID],'
                    SET @SQL = @SQL + ' [Sq],'
                    SET @SQL = @SQL + ' [DrugId],'
                    SET @SQL = @SQL + ' [DrugName],'
                    SET @SQL = @SQL + ' [Unit],'
                    SET @SQL = @SQL + ' [UnitVN],'
                    SET @SQL = @SQL + ' [Remark],'
                    SET @SQL = @SQL + ' [Dosage],'
                    SET @SQL = @SQL + ' [Frequency],'
                    SET @SQL = @SQL + ' [VN_meaning],'
                    SET @SQL = @SQL + ' [Duration],'
                    SET @SQL = @SQL + ' [TotalUnit],'
                    SET @SQL = @SQL + ' [meaning],'
                    SET @SQL = @SQL + ' [abbre]'
                    SET @SQL = @SQL + ' FROM PageIndex'
                    SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
                    IF @PageSize > 0
                    BEGIN
                        SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
                    END
                    IF LEN(@OrderBy) > 0
                    BEGIN
                        SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
                    END
                    EXEC sp_executesql @SQL
    
                    -- get row count
                    SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
                    SET @SQL = @SQL + ' FROM [dbo].[VR_ePresDetail]'
                    IF LEN(@WhereClause) > 0
                    BEGIN
                        SET @SQL = @SQL + ' WHERE ' + @WhereClause
                    END
                    EXEC sp_executesql @SQL
                    
                    END
                ]]></body>
            </procedure>
            
            
            <procedure owner="dbo" name="VR_ePresDetail_Find_Dynamic"  skip="true">
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the VR_ePresDetail table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters/>
                <body><![CDATA[
                    
                    BEGIN
                    
                    WITH PageIndex AS (
                        SELECT TOP {3} row_number() OVER (ORDER BY {1}) AS RowIndex
                        , [PrescriptionDetailId]
                        , [PrescriptionID]
                        , [Sq]
                        , [DrugId]
                        , [DrugName]
                        , [Unit]
                        , [UnitVN]
                        , [Remark]
                        , [Dosage]
                        , [Frequency]
                        , [VN_meaning]
                        , [Duration]
                        , [TotalUnit]
                        , [meaning]
                        , [abbre]
                        FROM [dbo].[VR_ePresDetail] {0}
                    )
                    SELECT
                        [PrescriptionDetailId],
                        [PrescriptionID],
                        [Sq],
                        [DrugId],
                        [DrugName],
                        [Unit],
                        [UnitVN],
                        [Remark],
                        [Dosage],
                        [Frequency],
                        [VN_meaning],
                        [Duration],
                        [TotalUnit],
                        [meaning],
                        [abbre]
                    FROM PageIndex
                    WHERE RowIndex > {2}
                    AND RowIndex <= {3}
                    ORDER BY {1};
                    
                    -- get total count
                    SELECT COUNT(*) AS TotalRowCount FROM [dbo].[VR_ePresDetail] {0};
                    
                    END
                ]]></body>
            </procedure>
            
            <procedure owner="dbo" name="VR_LabProcessing_Get_List" >
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets all records from the VR_LabProcessing view
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters/>
                <body><![CDATA[
                    
                    SELECT
                        [StatId],
                        [PatientCode],
                        [TID],
                        [FirstName],
                        [LastName],
                        [DOB],
                        [Sex],
                        [Nationality],
                        [PatientStart],
                        [Lab],
                        [ChargedCodes],
                        [CreateDate]
                    FROM
                        [dbo].[VR_LabProcessing]
                        
                    SELECT @@ROWCOUNT			
                ]]></body>
            </procedure>
            
            <procedure owner="dbo" name="VR_LabProcessing_Get" >
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the VR_LabProcessing view passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters>
                    <parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
                    <parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>			
                    <parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
                    <parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
                </parameters>
                <body><![CDATA[
                    
                    BEGIN
    
                    DECLARE @PageLowerBound int
                    DECLARE @PageUpperBound int
                    
                    -- Set the page bounds
                    SET @PageLowerBound = @PageSize * @PageIndex
                    SET @PageUpperBound = @PageLowerBound + @PageSize
    
                    IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
                    BEGIN
                        -- default order by to first column
                        SET @OrderBy = '[StatId]'
                    END
    
                    -- SQL Server 2005 Paging
                    DECLARE @SQL AS nvarchar(MAX)
                    SET @SQL = 'WITH PageIndex AS ('
                    SET @SQL = @SQL + ' SELECT'
                    IF @PageSize > 0
                    BEGIN
                        SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
                    END
                    SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
                    SET @SQL = @SQL + ', [StatId]'
                    SET @SQL = @SQL + ', [PatientCode]'
                    SET @SQL = @SQL + ', [TID]'
                    SET @SQL = @SQL + ', [FirstName]'
                    SET @SQL = @SQL + ', [LastName]'
                    SET @SQL = @SQL + ', [DOB]'
                    SET @SQL = @SQL + ', [Sex]'
                    SET @SQL = @SQL + ', [Nationality]'
                    SET @SQL = @SQL + ', [PatientStart]'
                    SET @SQL = @SQL + ', [Lab]'
                    SET @SQL = @SQL + ', [ChargedCodes]'
                    SET @SQL = @SQL + ', [CreateDate]'
                    SET @SQL = @SQL + ' FROM [dbo].[VR_LabProcessing]'
                    IF LEN(@WhereClause) > 0
                    BEGIN
                        SET @SQL = @SQL + ' WHERE ' + @WhereClause
                    END
                    SET @SQL = @SQL + ' ) SELECT'
                    SET @SQL = @SQL + ' [StatId],'
                    SET @SQL = @SQL + ' [PatientCode],'
                    SET @SQL = @SQL + ' [TID],'
                    SET @SQL = @SQL + ' [FirstName],'
                    SET @SQL = @SQL + ' [LastName],'
                    SET @SQL = @SQL + ' [DOB],'
                    SET @SQL = @SQL + ' [Sex],'
                    SET @SQL = @SQL + ' [Nationality],'
                    SET @SQL = @SQL + ' [PatientStart],'
                    SET @SQL = @SQL + ' [Lab],'
                    SET @SQL = @SQL + ' [ChargedCodes],'
                    SET @SQL = @SQL + ' [CreateDate]'
                    SET @SQL = @SQL + ' FROM PageIndex'
                    SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
                    IF @PageSize > 0
                    BEGIN
                        SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
                    END
                    IF LEN(@OrderBy) > 0
                    BEGIN
                        SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
                    END
                    EXEC sp_executesql @SQL
    
                    -- get row count
                    SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
                    SET @SQL = @SQL + ' FROM [dbo].[VR_LabProcessing]'
                    IF LEN(@WhereClause) > 0
                    BEGIN
                        SET @SQL = @SQL + ' WHERE ' + @WhereClause
                    END
                    EXEC sp_executesql @SQL
                    
                    END
                ]]></body>
            </procedure>
            
            
            <procedure owner="dbo" name="VR_LabProcessing_Find_Dynamic"  skip="true">
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the VR_LabProcessing table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters/>
                <body><![CDATA[
                    
                    BEGIN
                    
                    WITH PageIndex AS (
                        SELECT TOP {3} row_number() OVER (ORDER BY {1}) AS RowIndex
                        , [StatId]
                        , [PatientCode]
                        , [TID]
                        , [FirstName]
                        , [LastName]
                        , [DOB]
                        , [Sex]
                        , [Nationality]
                        , [PatientStart]
                        , [Lab]
                        , [ChargedCodes]
                        , [CreateDate]
                        FROM [dbo].[VR_LabProcessing] {0}
                    )
                    SELECT
                        [StatId],
                        [PatientCode],
                        [TID],
                        [FirstName],
                        [LastName],
                        [DOB],
                        [Sex],
                        [Nationality],
                        [PatientStart],
                        [Lab],
                        [ChargedCodes],
                        [CreateDate]
                    FROM PageIndex
                    WHERE RowIndex > {2}
                    AND RowIndex <= {3}
                    ORDER BY {1};
                    
                    -- get total count
                    SELECT COUNT(*) AS TotalRowCount FROM [dbo].[VR_LabProcessing] {0};
                    
                    END
                ]]></body>
            </procedure>
            
            <procedure owner="dbo" name="Vr_LabReceive_Get_List" >
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets all records from the Vr_LabReceive view
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters/>
                <body><![CDATA[
                    
                    SELECT
                        [Id],
                        [TID],
                        [ReqID],
                        [Code],
                        [Description],
                        [ReqDoctor],
                        [Billable],
                        [Sample],
                        [ColDate],
                        [ColTime],
                        [ReqDate],
                        [SampleType],
                        [ProviderType],
                        [StatId],
                        [PatientCode],
                        [FirstName],
                        [LastName],
                        [DOB],
                        [Sex],
                        [Nationality],
                        [ReqStatus]
                    FROM
                        [dbo].[Vr_LabReceive]
                        
                    SELECT @@ROWCOUNT			
                ]]></body>
            </procedure>
            
            <procedure owner="dbo" name="Vr_LabReceive_Get" >
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the Vr_LabReceive view passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters>
                    <parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
                    <parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>			
                    <parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
                    <parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
                </parameters>
                <body><![CDATA[
                    
                    BEGIN
    
                    DECLARE @PageLowerBound int
                    DECLARE @PageUpperBound int
                    
                    -- Set the page bounds
                    SET @PageLowerBound = @PageSize * @PageIndex
                    SET @PageUpperBound = @PageLowerBound + @PageSize
    
                    IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
                    BEGIN
                        -- default order by to first column
                        SET @OrderBy = '[Id]'
                    END
    
                    -- SQL Server 2005 Paging
                    DECLARE @SQL AS nvarchar(MAX)
                    SET @SQL = 'WITH PageIndex AS ('
                    SET @SQL = @SQL + ' SELECT'
                    IF @PageSize > 0
                    BEGIN
                        SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
                    END
                    SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
                    SET @SQL = @SQL + ', [Id]'
                    SET @SQL = @SQL + ', [TID]'
                    SET @SQL = @SQL + ', [ReqID]'
                    SET @SQL = @SQL + ', [Code]'
                    SET @SQL = @SQL + ', [Description]'
                    SET @SQL = @SQL + ', [ReqDoctor]'
                    SET @SQL = @SQL + ', [Billable]'
                    SET @SQL = @SQL + ', [Sample]'
                    SET @SQL = @SQL + ', [ColDate]'
                    SET @SQL = @SQL + ', [ColTime]'
                    SET @SQL = @SQL + ', [ReqDate]'
                    SET @SQL = @SQL + ', [SampleType]'
                    SET @SQL = @SQL + ', [ProviderType]'
                    SET @SQL = @SQL + ', [StatId]'
                    SET @SQL = @SQL + ', [PatientCode]'
                    SET @SQL = @SQL + ', [FirstName]'
                    SET @SQL = @SQL + ', [LastName]'
                    SET @SQL = @SQL + ', [DOB]'
                    SET @SQL = @SQL + ', [Sex]'
                    SET @SQL = @SQL + ', [Nationality]'
                    SET @SQL = @SQL + ', [ReqStatus]'
                    SET @SQL = @SQL + ' FROM [dbo].[Vr_LabReceive]'
                    IF LEN(@WhereClause) > 0
                    BEGIN
                        SET @SQL = @SQL + ' WHERE ' + @WhereClause
                    END
                    SET @SQL = @SQL + ' ) SELECT'
                    SET @SQL = @SQL + ' [Id],'
                    SET @SQL = @SQL + ' [TID],'
                    SET @SQL = @SQL + ' [ReqID],'
                    SET @SQL = @SQL + ' [Code],'
                    SET @SQL = @SQL + ' [Description],'
                    SET @SQL = @SQL + ' [ReqDoctor],'
                    SET @SQL = @SQL + ' [Billable],'
                    SET @SQL = @SQL + ' [Sample],'
                    SET @SQL = @SQL + ' [ColDate],'
                    SET @SQL = @SQL + ' [ColTime],'
                    SET @SQL = @SQL + ' [ReqDate],'
                    SET @SQL = @SQL + ' [SampleType],'
                    SET @SQL = @SQL + ' [ProviderType],'
                    SET @SQL = @SQL + ' [StatId],'
                    SET @SQL = @SQL + ' [PatientCode],'
                    SET @SQL = @SQL + ' [FirstName],'
                    SET @SQL = @SQL + ' [LastName],'
                    SET @SQL = @SQL + ' [DOB],'
                    SET @SQL = @SQL + ' [Sex],'
                    SET @SQL = @SQL + ' [Nationality],'
                    SET @SQL = @SQL + ' [ReqStatus]'
                    SET @SQL = @SQL + ' FROM PageIndex'
                    SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
                    IF @PageSize > 0
                    BEGIN
                        SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
                    END
                    IF LEN(@OrderBy) > 0
                    BEGIN
                        SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
                    END
                    EXEC sp_executesql @SQL
    
                    -- get row count
                    SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
                    SET @SQL = @SQL + ' FROM [dbo].[Vr_LabReceive]'
                    IF LEN(@WhereClause) > 0
                    BEGIN
                        SET @SQL = @SQL + ' WHERE ' + @WhereClause
                    END
                    EXEC sp_executesql @SQL
                    
                    END
                ]]></body>
            </procedure>
            
            
            <procedure owner="dbo" name="Vr_LabReceive_Find_Dynamic"  skip="true">
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the Vr_LabReceive table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters/>
                <body><![CDATA[
                    
                    BEGIN
                    
                    WITH PageIndex AS (
                        SELECT TOP {3} row_number() OVER (ORDER BY {1}) AS RowIndex
                        , [Id]
                        , [TID]
                        , [ReqID]
                        , [Code]
                        , [Description]
                        , [ReqDoctor]
                        , [Billable]
                        , [Sample]
                        , [ColDate]
                        , [ColTime]
                        , [ReqDate]
                        , [SampleType]
                        , [ProviderType]
                        , [StatId]
                        , [PatientCode]
                        , [FirstName]
                        , [LastName]
                        , [DOB]
                        , [Sex]
                        , [Nationality]
                        , [ReqStatus]
                        FROM [dbo].[Vr_LabReceive] {0}
                    )
                    SELECT
                        [Id],
                        [TID],
                        [ReqID],
                        [Code],
                        [Description],
                        [ReqDoctor],
                        [Billable],
                        [Sample],
                        [ColDate],
                        [ColTime],
                        [ReqDate],
                        [SampleType],
                        [ProviderType],
                        [StatId],
                        [PatientCode],
                        [FirstName],
                        [LastName],
                        [DOB],
                        [Sex],
                        [Nationality],
                        [ReqStatus]
                    FROM PageIndex
                    WHERE RowIndex > {2}
                    AND RowIndex <= {3}
                    ORDER BY {1};
                    
                    -- get total count
                    SELECT COUNT(*) AS TotalRowCount FROM [dbo].[Vr_LabReceive] {0};
                    
                    END
                ]]></body>
            </procedure>
            
            <procedure owner="dbo" name="Vr_LabReq_Get_List" >
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets all records from the Vr_LabReq view
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters/>
                <body><![CDATA[
                    
                    SELECT
                        [StatId],
                        [PatientCode],
                        [TID],
                        [FirstName],
                        [LastName],
                        [DOB],
                        [Sex],
                        [Nationality],
                        [PatientStart],
                        [Lab],
                        [ChargedCodes],
                        [CreateDate]
                    FROM
                        [dbo].[Vr_LabReq]
                        
                    SELECT @@ROWCOUNT			
                ]]></body>
            </procedure>
            
            <procedure owner="dbo" name="Vr_LabReq_Get" >
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the Vr_LabReq view passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters>
                    <parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
                    <parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>			
                    <parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
                    <parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
                </parameters>
                <body><![CDATA[
                    
                    BEGIN
    
                    DECLARE @PageLowerBound int
                    DECLARE @PageUpperBound int
                    
                    -- Set the page bounds
                    SET @PageLowerBound = @PageSize * @PageIndex
                    SET @PageUpperBound = @PageLowerBound + @PageSize
    
                    IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
                    BEGIN
                        -- default order by to first column
                        SET @OrderBy = '[StatId]'
                    END
    
                    -- SQL Server 2005 Paging
                    DECLARE @SQL AS nvarchar(MAX)
                    SET @SQL = 'WITH PageIndex AS ('
                    SET @SQL = @SQL + ' SELECT'
                    IF @PageSize > 0
                    BEGIN
                        SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
                    END
                    SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
                    SET @SQL = @SQL + ', [StatId]'
                    SET @SQL = @SQL + ', [PatientCode]'
                    SET @SQL = @SQL + ', [TID]'
                    SET @SQL = @SQL + ', [FirstName]'
                    SET @SQL = @SQL + ', [LastName]'
                    SET @SQL = @SQL + ', [DOB]'
                    SET @SQL = @SQL + ', [Sex]'
                    SET @SQL = @SQL + ', [Nationality]'
                    SET @SQL = @SQL + ', [PatientStart]'
                    SET @SQL = @SQL + ', [Lab]'
                    SET @SQL = @SQL + ', [ChargedCodes]'
                    SET @SQL = @SQL + ', [CreateDate]'
                    SET @SQL = @SQL + ' FROM [dbo].[Vr_LabReq]'
                    IF LEN(@WhereClause) > 0
                    BEGIN
                        SET @SQL = @SQL + ' WHERE ' + @WhereClause
                    END
                    SET @SQL = @SQL + ' ) SELECT'
                    SET @SQL = @SQL + ' [StatId],'
                    SET @SQL = @SQL + ' [PatientCode],'
                    SET @SQL = @SQL + ' [TID],'
                    SET @SQL = @SQL + ' [FirstName],'
                    SET @SQL = @SQL + ' [LastName],'
                    SET @SQL = @SQL + ' [DOB],'
                    SET @SQL = @SQL + ' [Sex],'
                    SET @SQL = @SQL + ' [Nationality],'
                    SET @SQL = @SQL + ' [PatientStart],'
                    SET @SQL = @SQL + ' [Lab],'
                    SET @SQL = @SQL + ' [ChargedCodes],'
                    SET @SQL = @SQL + ' [CreateDate]'
                    SET @SQL = @SQL + ' FROM PageIndex'
                    SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
                    IF @PageSize > 0
                    BEGIN
                        SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
                    END
                    IF LEN(@OrderBy) > 0
                    BEGIN
                        SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
                    END
                    EXEC sp_executesql @SQL
    
                    -- get row count
                    SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
                    SET @SQL = @SQL + ' FROM [dbo].[Vr_LabReq]'
                    IF LEN(@WhereClause) > 0
                    BEGIN
                        SET @SQL = @SQL + ' WHERE ' + @WhereClause
                    END
                    EXEC sp_executesql @SQL
                    
                    END
                ]]></body>
            </procedure>
            
            
            <procedure owner="dbo" name="Vr_LabReq_Find_Dynamic"  skip="true">
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the Vr_LabReq table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters/>
                <body><![CDATA[
                    
                    BEGIN
                    
                    WITH PageIndex AS (
                        SELECT TOP {3} row_number() OVER (ORDER BY {1}) AS RowIndex
                        , [StatId]
                        , [PatientCode]
                        , [TID]
                        , [FirstName]
                        , [LastName]
                        , [DOB]
                        , [Sex]
                        , [Nationality]
                        , [PatientStart]
                        , [Lab]
                        , [ChargedCodes]
                        , [CreateDate]
                        FROM [dbo].[Vr_LabReq] {0}
                    )
                    SELECT
                        [StatId],
                        [PatientCode],
                        [TID],
                        [FirstName],
                        [LastName],
                        [DOB],
                        [Sex],
                        [Nationality],
                        [PatientStart],
                        [Lab],
                        [ChargedCodes],
                        [CreateDate]
                    FROM PageIndex
                    WHERE RowIndex > {2}
                    AND RowIndex <= {3}
                    ORDER BY {1};
                    
                    -- get total count
                    SELECT COUNT(*) AS TotalRowCount FROM [dbo].[Vr_LabReq] {0};
                    
                    END
                ]]></body>
            </procedure>
            
            <procedure owner="dbo" name="VR_LabResult_Get_List" >
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets all records from the VR_LabResult view
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters/>
                <body><![CDATA[
                    
                    SELECT
                        [Id],
                        [TID],
                        [ReqID],
                        [Code],
                        [Description],
                        [ReqDoctor],
                        [Billable],
                        [Sample],
                        [ColDate],
                        [ColTime],
                        [ReqDate],
                        [SampleType],
                        [ProviderType],
                        [StatId],
                        [PatientCode],
                        [FirstName],
                        [LastName],
                        [DOB],
                        [Sex],
                        [Nationality],
                        [ReqStatus]
                    FROM
                        [dbo].[VR_LabResult]
                        
                    SELECT @@ROWCOUNT			
                ]]></body>
            </procedure>
            
            <procedure owner="dbo" name="VR_LabResult_Get" >
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the VR_LabResult view passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters>
                    <parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
                    <parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>			
                    <parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
                    <parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
                </parameters>
                <body><![CDATA[
                    
                    BEGIN
    
                    DECLARE @PageLowerBound int
                    DECLARE @PageUpperBound int
                    
                    -- Set the page bounds
                    SET @PageLowerBound = @PageSize * @PageIndex
                    SET @PageUpperBound = @PageLowerBound + @PageSize
    
                    IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
                    BEGIN
                        -- default order by to first column
                        SET @OrderBy = '[Id]'
                    END
    
                    -- SQL Server 2005 Paging
                    DECLARE @SQL AS nvarchar(MAX)
                    SET @SQL = 'WITH PageIndex AS ('
                    SET @SQL = @SQL + ' SELECT'
                    IF @PageSize > 0
                    BEGIN
                        SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
                    END
                    SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
                    SET @SQL = @SQL + ', [Id]'
                    SET @SQL = @SQL + ', [TID]'
                    SET @SQL = @SQL + ', [ReqID]'
                    SET @SQL = @SQL + ', [Code]'
                    SET @SQL = @SQL + ', [Description]'
                    SET @SQL = @SQL + ', [ReqDoctor]'
                    SET @SQL = @SQL + ', [Billable]'
                    SET @SQL = @SQL + ', [Sample]'
                    SET @SQL = @SQL + ', [ColDate]'
                    SET @SQL = @SQL + ', [ColTime]'
                    SET @SQL = @SQL + ', [ReqDate]'
                    SET @SQL = @SQL + ', [SampleType]'
                    SET @SQL = @SQL + ', [ProviderType]'
                    SET @SQL = @SQL + ', [StatId]'
                    SET @SQL = @SQL + ', [PatientCode]'
                    SET @SQL = @SQL + ', [FirstName]'
                    SET @SQL = @SQL + ', [LastName]'
                    SET @SQL = @SQL + ', [DOB]'
                    SET @SQL = @SQL + ', [Sex]'
                    SET @SQL = @SQL + ', [Nationality]'
                    SET @SQL = @SQL + ', [ReqStatus]'
                    SET @SQL = @SQL + ' FROM [dbo].[VR_LabResult]'
                    IF LEN(@WhereClause) > 0
                    BEGIN
                        SET @SQL = @SQL + ' WHERE ' + @WhereClause
                    END
                    SET @SQL = @SQL + ' ) SELECT'
                    SET @SQL = @SQL + ' [Id],'
                    SET @SQL = @SQL + ' [TID],'
                    SET @SQL = @SQL + ' [ReqID],'
                    SET @SQL = @SQL + ' [Code],'
                    SET @SQL = @SQL + ' [Description],'
                    SET @SQL = @SQL + ' [ReqDoctor],'
                    SET @SQL = @SQL + ' [Billable],'
                    SET @SQL = @SQL + ' [Sample],'
                    SET @SQL = @SQL + ' [ColDate],'
                    SET @SQL = @SQL + ' [ColTime],'
                    SET @SQL = @SQL + ' [ReqDate],'
                    SET @SQL = @SQL + ' [SampleType],'
                    SET @SQL = @SQL + ' [ProviderType],'
                    SET @SQL = @SQL + ' [StatId],'
                    SET @SQL = @SQL + ' [PatientCode],'
                    SET @SQL = @SQL + ' [FirstName],'
                    SET @SQL = @SQL + ' [LastName],'
                    SET @SQL = @SQL + ' [DOB],'
                    SET @SQL = @SQL + ' [Sex],'
                    SET @SQL = @SQL + ' [Nationality],'
                    SET @SQL = @SQL + ' [ReqStatus]'
                    SET @SQL = @SQL + ' FROM PageIndex'
                    SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
                    IF @PageSize > 0
                    BEGIN
                        SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
                    END
                    IF LEN(@OrderBy) > 0
                    BEGIN
                        SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
                    END
                    EXEC sp_executesql @SQL
    
                    -- get row count
                    SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
                    SET @SQL = @SQL + ' FROM [dbo].[VR_LabResult]'
                    IF LEN(@WhereClause) > 0
                    BEGIN
                        SET @SQL = @SQL + ' WHERE ' + @WhereClause
                    END
                    EXEC sp_executesql @SQL
                    
                    END
                ]]></body>
            </procedure>
            
            
            <procedure owner="dbo" name="VR_LabResult_Find_Dynamic"  skip="true">
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the VR_LabResult table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters/>
                <body><![CDATA[
                    
                    BEGIN
                    
                    WITH PageIndex AS (
                        SELECT TOP {3} row_number() OVER (ORDER BY {1}) AS RowIndex
                        , [Id]
                        , [TID]
                        , [ReqID]
                        , [Code]
                        , [Description]
                        , [ReqDoctor]
                        , [Billable]
                        , [Sample]
                        , [ColDate]
                        , [ColTime]
                        , [ReqDate]
                        , [SampleType]
                        , [ProviderType]
                        , [StatId]
                        , [PatientCode]
                        , [FirstName]
                        , [LastName]
                        , [DOB]
                        , [Sex]
                        , [Nationality]
                        , [ReqStatus]
                        FROM [dbo].[VR_LabResult] {0}
                    )
                    SELECT
                        [Id],
                        [TID],
                        [ReqID],
                        [Code],
                        [Description],
                        [ReqDoctor],
                        [Billable],
                        [Sample],
                        [ColDate],
                        [ColTime],
                        [ReqDate],
                        [SampleType],
                        [ProviderType],
                        [StatId],
                        [PatientCode],
                        [FirstName],
                        [LastName],
                        [DOB],
                        [Sex],
                        [Nationality],
                        [ReqStatus]
                    FROM PageIndex
                    WHERE RowIndex > {2}
                    AND RowIndex <= {3}
                    ORDER BY {1};
                    
                    -- get total count
                    SELECT COUNT(*) AS TotalRowCount FROM [dbo].[VR_LabResult] {0};
                    
                    END
                ]]></body>
            </procedure>
            
            <procedure owner="dbo" name="Vr_Labwip_Get_List" >
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets all records from the Vr_Labwip view
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters/>
                <body><![CDATA[
                    
                    SELECT
                        [Id],
                        [TID],
                        [ReqID],
                        [Code],
                        [Description],
                        [ReqDoctor],
                        [Billable],
                        [Sample],
                        [ColDate],
                        [ColTime],
                        [ReqDate],
                        [SampleType],
                        [ProviderType],
                        [StatId],
                        [PatientCode],
                        [FirstName],
                        [LastName],
                        [DOB],
                        [Sex],
                        [Nationality],
                        [ReqStatus]
                    FROM
                        [dbo].[Vr_Labwip]
                        
                    SELECT @@ROWCOUNT			
                ]]></body>
            </procedure>
            
            <procedure owner="dbo" name="Vr_Labwip_Get" >
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the Vr_Labwip view passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters>
                    <parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
                    <parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>			
                    <parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
                    <parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
                </parameters>
                <body><![CDATA[
                    
                    BEGIN
    
                    DECLARE @PageLowerBound int
                    DECLARE @PageUpperBound int
                    
                    -- Set the page bounds
                    SET @PageLowerBound = @PageSize * @PageIndex
                    SET @PageUpperBound = @PageLowerBound + @PageSize
    
                    IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
                    BEGIN
                        -- default order by to first column
                        SET @OrderBy = '[Id]'
                    END
    
                    -- SQL Server 2005 Paging
                    DECLARE @SQL AS nvarchar(MAX)
                    SET @SQL = 'WITH PageIndex AS ('
                    SET @SQL = @SQL + ' SELECT'
                    IF @PageSize > 0
                    BEGIN
                        SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
                    END
                    SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
                    SET @SQL = @SQL + ', [Id]'
                    SET @SQL = @SQL + ', [TID]'
                    SET @SQL = @SQL + ', [ReqID]'
                    SET @SQL = @SQL + ', [Code]'
                    SET @SQL = @SQL + ', [Description]'
                    SET @SQL = @SQL + ', [ReqDoctor]'
                    SET @SQL = @SQL + ', [Billable]'
                    SET @SQL = @SQL + ', [Sample]'
                    SET @SQL = @SQL + ', [ColDate]'
                    SET @SQL = @SQL + ', [ColTime]'
                    SET @SQL = @SQL + ', [ReqDate]'
                    SET @SQL = @SQL + ', [SampleType]'
                    SET @SQL = @SQL + ', [ProviderType]'
                    SET @SQL = @SQL + ', [StatId]'
                    SET @SQL = @SQL + ', [PatientCode]'
                    SET @SQL = @SQL + ', [FirstName]'
                    SET @SQL = @SQL + ', [LastName]'
                    SET @SQL = @SQL + ', [DOB]'
                    SET @SQL = @SQL + ', [Sex]'
                    SET @SQL = @SQL + ', [Nationality]'
                    SET @SQL = @SQL + ', [ReqStatus]'
                    SET @SQL = @SQL + ' FROM [dbo].[Vr_Labwip]'
                    IF LEN(@WhereClause) > 0
                    BEGIN
                        SET @SQL = @SQL + ' WHERE ' + @WhereClause
                    END
                    SET @SQL = @SQL + ' ) SELECT'
                    SET @SQL = @SQL + ' [Id],'
                    SET @SQL = @SQL + ' [TID],'
                    SET @SQL = @SQL + ' [ReqID],'
                    SET @SQL = @SQL + ' [Code],'
                    SET @SQL = @SQL + ' [Description],'
                    SET @SQL = @SQL + ' [ReqDoctor],'
                    SET @SQL = @SQL + ' [Billable],'
                    SET @SQL = @SQL + ' [Sample],'
                    SET @SQL = @SQL + ' [ColDate],'
                    SET @SQL = @SQL + ' [ColTime],'
                    SET @SQL = @SQL + ' [ReqDate],'
                    SET @SQL = @SQL + ' [SampleType],'
                    SET @SQL = @SQL + ' [ProviderType],'
                    SET @SQL = @SQL + ' [StatId],'
                    SET @SQL = @SQL + ' [PatientCode],'
                    SET @SQL = @SQL + ' [FirstName],'
                    SET @SQL = @SQL + ' [LastName],'
                    SET @SQL = @SQL + ' [DOB],'
                    SET @SQL = @SQL + ' [Sex],'
                    SET @SQL = @SQL + ' [Nationality],'
                    SET @SQL = @SQL + ' [ReqStatus]'
                    SET @SQL = @SQL + ' FROM PageIndex'
                    SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
                    IF @PageSize > 0
                    BEGIN
                        SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
                    END
                    IF LEN(@OrderBy) > 0
                    BEGIN
                        SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
                    END
                    EXEC sp_executesql @SQL
    
                    -- get row count
                    SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
                    SET @SQL = @SQL + ' FROM [dbo].[Vr_Labwip]'
                    IF LEN(@WhereClause) > 0
                    BEGIN
                        SET @SQL = @SQL + ' WHERE ' + @WhereClause
                    END
                    EXEC sp_executesql @SQL
                    
                    END
                ]]></body>
            </procedure>
            
            
            <procedure owner="dbo" name="Vr_Labwip_Find_Dynamic"  skip="true">
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the Vr_Labwip table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters/>
                <body><![CDATA[
                    
                    BEGIN
                    
                    WITH PageIndex AS (
                        SELECT TOP {3} row_number() OVER (ORDER BY {1}) AS RowIndex
                        , [Id]
                        , [TID]
                        , [ReqID]
                        , [Code]
                        , [Description]
                        , [ReqDoctor]
                        , [Billable]
                        , [Sample]
                        , [ColDate]
                        , [ColTime]
                        , [ReqDate]
                        , [SampleType]
                        , [ProviderType]
                        , [StatId]
                        , [PatientCode]
                        , [FirstName]
                        , [LastName]
                        , [DOB]
                        , [Sex]
                        , [Nationality]
                        , [ReqStatus]
                        FROM [dbo].[Vr_Labwip] {0}
                    )
                    SELECT
                        [Id],
                        [TID],
                        [ReqID],
                        [Code],
                        [Description],
                        [ReqDoctor],
                        [Billable],
                        [Sample],
                        [ColDate],
                        [ColTime],
                        [ReqDate],
                        [SampleType],
                        [ProviderType],
                        [StatId],
                        [PatientCode],
                        [FirstName],
                        [LastName],
                        [DOB],
                        [Sex],
                        [Nationality],
                        [ReqStatus]
                    FROM PageIndex
                    WHERE RowIndex > {2}
                    AND RowIndex <= {3}
                    ORDER BY {1};
                    
                    -- get total count
                    SELECT COUNT(*) AS TotalRowCount FROM [dbo].[Vr_Labwip] {0};
                    
                    END
                ]]></body>
            </procedure>
            
            <procedure owner="dbo" name="Vr_MedPro_Get_List" >
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets all records from the Vr_MedPro view
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters/>
                <body><![CDATA[
                    
                    SELECT
                        [PRO_CODE],
                        [Description],
                        [MAIN_AREA],
                        [PUB_PRICE],
                        [SampleType],
                        [ProviderType]
                    FROM
                        [dbo].[Vr_MedPro]
                        
                    SELECT @@ROWCOUNT			
                ]]></body>
            </procedure>
            
            <procedure owner="dbo" name="Vr_MedPro_Get" >
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the Vr_MedPro view passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters>
                    <parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
                    <parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>			
                    <parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
                    <parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
                </parameters>
                <body><![CDATA[
                    
                    BEGIN
    
                    DECLARE @PageLowerBound int
                    DECLARE @PageUpperBound int
                    
                    -- Set the page bounds
                    SET @PageLowerBound = @PageSize * @PageIndex
                    SET @PageUpperBound = @PageLowerBound + @PageSize
    
                    IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
                    BEGIN
                        -- default order by to first column
                        SET @OrderBy = '[PRO_CODE]'
                    END
    
                    -- SQL Server 2005 Paging
                    DECLARE @SQL AS nvarchar(MAX)
                    SET @SQL = 'WITH PageIndex AS ('
                    SET @SQL = @SQL + ' SELECT'
                    IF @PageSize > 0
                    BEGIN
                        SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
                    END
                    SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
                    SET @SQL = @SQL + ', [PRO_CODE]'
                    SET @SQL = @SQL + ', [Description]'
                    SET @SQL = @SQL + ', [MAIN_AREA]'
                    SET @SQL = @SQL + ', [PUB_PRICE]'
                    SET @SQL = @SQL + ', [SampleType]'
                    SET @SQL = @SQL + ', [ProviderType]'
                    SET @SQL = @SQL + ' FROM [dbo].[Vr_MedPro]'
                    IF LEN(@WhereClause) > 0
                    BEGIN
                        SET @SQL = @SQL + ' WHERE ' + @WhereClause
                    END
                    SET @SQL = @SQL + ' ) SELECT'
                    SET @SQL = @SQL + ' [PRO_CODE],'
                    SET @SQL = @SQL + ' [Description],'
                    SET @SQL = @SQL + ' [MAIN_AREA],'
                    SET @SQL = @SQL + ' [PUB_PRICE],'
                    SET @SQL = @SQL + ' [SampleType],'
                    SET @SQL = @SQL + ' [ProviderType]'
                    SET @SQL = @SQL + ' FROM PageIndex'
                    SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
                    IF @PageSize > 0
                    BEGIN
                        SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
                    END
                    IF LEN(@OrderBy) > 0
                    BEGIN
                        SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
                    END
                    EXEC sp_executesql @SQL
    
                    -- get row count
                    SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
                    SET @SQL = @SQL + ' FROM [dbo].[Vr_MedPro]'
                    IF LEN(@WhereClause) > 0
                    BEGIN
                        SET @SQL = @SQL + ' WHERE ' + @WhereClause
                    END
                    EXEC sp_executesql @SQL
                    
                    END
                ]]></body>
            </procedure>
            
            
            <procedure owner="dbo" name="Vr_MedPro_Find_Dynamic"  skip="true">
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the Vr_MedPro table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters/>
                <body><![CDATA[
                    
                    BEGIN
                    
                    WITH PageIndex AS (
                        SELECT TOP {3} row_number() OVER (ORDER BY {1}) AS RowIndex
                        , [PRO_CODE]
                        , [Description]
                        , [MAIN_AREA]
                        , [PUB_PRICE]
                        , [SampleType]
                        , [ProviderType]
                        FROM [dbo].[Vr_MedPro] {0}
                    )
                    SELECT
                        [PRO_CODE],
                        [Description],
                        [MAIN_AREA],
                        [PUB_PRICE],
                        [SampleType],
                        [ProviderType]
                    FROM PageIndex
                    WHERE RowIndex > {2}
                    AND RowIndex <= {3}
                    ORDER BY {1};
                    
                    -- get total count
                    SELECT COUNT(*) AS TotalRowCount FROM [dbo].[Vr_MedPro] {0};
                    
                    END
                ]]></body>
            </procedure>
            
            <procedure owner="dbo" name="Vr_NurseProcessedPatients_Get_List" >
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets all records from the Vr_NurseProcessedPatients view
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters/>
                <body><![CDATA[
                    
                    SELECT
                        [StatId],
                        [PatientCode],
                        [TID],
                        [FirstName],
                        [LastName],
                        [DOB],
                        [Sex],
                        [Nationality],
                        [PatientStart],
                        [Lab],
                        [ChargedCodes],
                        [CreateDate]
                    FROM
                        [dbo].[Vr_NurseProcessedPatients]
                        
                    SELECT @@ROWCOUNT			
                ]]></body>
            </procedure>
            
            <procedure owner="dbo" name="Vr_NurseProcessedPatients_Get" >
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the Vr_NurseProcessedPatients view passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters>
                    <parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
                    <parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>			
                    <parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
                    <parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
                </parameters>
                <body><![CDATA[
                    
                    BEGIN
    
                    DECLARE @PageLowerBound int
                    DECLARE @PageUpperBound int
                    
                    -- Set the page bounds
                    SET @PageLowerBound = @PageSize * @PageIndex
                    SET @PageUpperBound = @PageLowerBound + @PageSize
    
                    IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
                    BEGIN
                        -- default order by to first column
                        SET @OrderBy = '[StatId]'
                    END
    
                    -- SQL Server 2005 Paging
                    DECLARE @SQL AS nvarchar(MAX)
                    SET @SQL = 'WITH PageIndex AS ('
                    SET @SQL = @SQL + ' SELECT'
                    IF @PageSize > 0
                    BEGIN
                        SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
                    END
                    SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
                    SET @SQL = @SQL + ', [StatId]'
                    SET @SQL = @SQL + ', [PatientCode]'
                    SET @SQL = @SQL + ', [TID]'
                    SET @SQL = @SQL + ', [FirstName]'
                    SET @SQL = @SQL + ', [LastName]'
                    SET @SQL = @SQL + ', [DOB]'
                    SET @SQL = @SQL + ', [Sex]'
                    SET @SQL = @SQL + ', [Nationality]'
                    SET @SQL = @SQL + ', [PatientStart]'
                    SET @SQL = @SQL + ', [Lab]'
                    SET @SQL = @SQL + ', [ChargedCodes]'
                    SET @SQL = @SQL + ', [CreateDate]'
                    SET @SQL = @SQL + ' FROM [dbo].[Vr_NurseProcessedPatients]'
                    IF LEN(@WhereClause) > 0
                    BEGIN
                        SET @SQL = @SQL + ' WHERE ' + @WhereClause
                    END
                    SET @SQL = @SQL + ' ) SELECT'
                    SET @SQL = @SQL + ' [StatId],'
                    SET @SQL = @SQL + ' [PatientCode],'
                    SET @SQL = @SQL + ' [TID],'
                    SET @SQL = @SQL + ' [FirstName],'
                    SET @SQL = @SQL + ' [LastName],'
                    SET @SQL = @SQL + ' [DOB],'
                    SET @SQL = @SQL + ' [Sex],'
                    SET @SQL = @SQL + ' [Nationality],'
                    SET @SQL = @SQL + ' [PatientStart],'
                    SET @SQL = @SQL + ' [Lab],'
                    SET @SQL = @SQL + ' [ChargedCodes],'
                    SET @SQL = @SQL + ' [CreateDate]'
                    SET @SQL = @SQL + ' FROM PageIndex'
                    SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
                    IF @PageSize > 0
                    BEGIN
                        SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
                    END
                    IF LEN(@OrderBy) > 0
                    BEGIN
                        SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
                    END
                    EXEC sp_executesql @SQL
    
                    -- get row count
                    SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
                    SET @SQL = @SQL + ' FROM [dbo].[Vr_NurseProcessedPatients]'
                    IF LEN(@WhereClause) > 0
                    BEGIN
                        SET @SQL = @SQL + ' WHERE ' + @WhereClause
                    END
                    EXEC sp_executesql @SQL
                    
                    END
                ]]></body>
            </procedure>
            
            
            <procedure owner="dbo" name="Vr_NurseProcessedPatients_Find_Dynamic"  skip="true">
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the Vr_NurseProcessedPatients table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters/>
                <body><![CDATA[
                    
                    BEGIN
                    
                    WITH PageIndex AS (
                        SELECT TOP {3} row_number() OVER (ORDER BY {1}) AS RowIndex
                        , [StatId]
                        , [PatientCode]
                        , [TID]
                        , [FirstName]
                        , [LastName]
                        , [DOB]
                        , [Sex]
                        , [Nationality]
                        , [PatientStart]
                        , [Lab]
                        , [ChargedCodes]
                        , [CreateDate]
                        FROM [dbo].[Vr_NurseProcessedPatients] {0}
                    )
                    SELECT
                        [StatId],
                        [PatientCode],
                        [TID],
                        [FirstName],
                        [LastName],
                        [DOB],
                        [Sex],
                        [Nationality],
                        [PatientStart],
                        [Lab],
                        [ChargedCodes],
                        [CreateDate]
                    FROM PageIndex
                    WHERE RowIndex > {2}
                    AND RowIndex <= {3}
                    ORDER BY {1};
                    
                    -- get total count
                    SELECT COUNT(*) AS TotalRowCount FROM [dbo].[Vr_NurseProcessedPatients] {0};
                    
                    END
                ]]></body>
            </procedure>
            
            <procedure owner="dbo" name="VR_Reception_Get_List" >
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets all records from the VR_Reception view
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters/>
                <body><![CDATA[
                    
                    SELECT
                        [PatientCode],
                        [TransactionId],
                        [FirstName],
                        [LastName],
                        [DateOfBirth],
                        [Sex],
                        [PatientStart],
                        [Nationality]
                    FROM
                        [dbo].[VR_Reception]
                        
                    SELECT @@ROWCOUNT			
                ]]></body>
            </procedure>
            
            <procedure owner="dbo" name="VR_Reception_Get" >
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the VR_Reception view passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters>
                    <parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
                    <parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>			
                    <parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
                    <parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
                </parameters>
                <body><![CDATA[
                    
                    BEGIN
    
                    DECLARE @PageLowerBound int
                    DECLARE @PageUpperBound int
                    
                    -- Set the page bounds
                    SET @PageLowerBound = @PageSize * @PageIndex
                    SET @PageUpperBound = @PageLowerBound + @PageSize
    
                    IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
                    BEGIN
                        -- default order by to first column
                        SET @OrderBy = '[PatientCode]'
                    END
    
                    -- SQL Server 2005 Paging
                    DECLARE @SQL AS nvarchar(MAX)
                    SET @SQL = 'WITH PageIndex AS ('
                    SET @SQL = @SQL + ' SELECT'
                    IF @PageSize > 0
                    BEGIN
                        SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
                    END
                    SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
                    SET @SQL = @SQL + ', [PatientCode]'
                    SET @SQL = @SQL + ', [TransactionId]'
                    SET @SQL = @SQL + ', [FirstName]'
                    SET @SQL = @SQL + ', [LastName]'
                    SET @SQL = @SQL + ', [DateOfBirth]'
                    SET @SQL = @SQL + ', [Sex]'
                    SET @SQL = @SQL + ', [PatientStart]'
                    SET @SQL = @SQL + ', [Nationality]'
                    SET @SQL = @SQL + ' FROM [dbo].[VR_Reception]'
                    IF LEN(@WhereClause) > 0
                    BEGIN
                        SET @SQL = @SQL + ' WHERE ' + @WhereClause
                    END
                    SET @SQL = @SQL + ' ) SELECT'
                    SET @SQL = @SQL + ' [PatientCode],'
                    SET @SQL = @SQL + ' [TransactionId],'
                    SET @SQL = @SQL + ' [FirstName],'
                    SET @SQL = @SQL + ' [LastName],'
                    SET @SQL = @SQL + ' [DateOfBirth],'
                    SET @SQL = @SQL + ' [Sex],'
                    SET @SQL = @SQL + ' [PatientStart],'
                    SET @SQL = @SQL + ' [Nationality]'
                    SET @SQL = @SQL + ' FROM PageIndex'
                    SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
                    IF @PageSize > 0
                    BEGIN
                        SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
                    END
                    IF LEN(@OrderBy) > 0
                    BEGIN
                        SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
                    END
                    EXEC sp_executesql @SQL
    
                    -- get row count
                    SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
                    SET @SQL = @SQL + ' FROM [dbo].[VR_Reception]'
                    IF LEN(@WhereClause) > 0
                    BEGIN
                        SET @SQL = @SQL + ' WHERE ' + @WhereClause
                    END
                    EXEC sp_executesql @SQL
                    
                    END
                ]]></body>
            </procedure>
            
            
            <procedure owner="dbo" name="VR_Reception_Find_Dynamic"  skip="true">
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the VR_Reception table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters/>
                <body><![CDATA[
                    
                    BEGIN
                    
                    WITH PageIndex AS (
                        SELECT TOP {3} row_number() OVER (ORDER BY {1}) AS RowIndex
                        , [PatientCode]
                        , [TransactionId]
                        , [FirstName]
                        , [LastName]
                        , [DateOfBirth]
                        , [Sex]
                        , [PatientStart]
                        , [Nationality]
                        FROM [dbo].[VR_Reception] {0}
                    )
                    SELECT
                        [PatientCode],
                        [TransactionId],
                        [FirstName],
                        [LastName],
                        [DateOfBirth],
                        [Sex],
                        [PatientStart],
                        [Nationality]
                    FROM PageIndex
                    WHERE RowIndex > {2}
                    AND RowIndex <= {3}
                    ORDER BY {1};
                    
                    -- get total count
                    SELECT COUNT(*) AS TotalRowCount FROM [dbo].[VR_Reception] {0};
                    
                    END
                ]]></body>
            </procedure>
            
            <procedure owner="dbo" name="VR_ReceptionDone_Get_List" >
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets all records from the VR_ReceptionDone view
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters/>
                <body><![CDATA[
                    
                    SELECT
                        [StatId],
                        [PatientCode],
                        [TID],
                        [FirstName],
                        [LastName],
                        [DOB],
                        [Sex],
                        [Nationality],
                        [PatientStart],
                        [IsCompleted],
                        [ChargedCodes],
                        [CreateDate]
                    FROM
                        [dbo].[VR_ReceptionDone]
                        
                    SELECT @@ROWCOUNT			
                ]]></body>
            </procedure>
            
            <procedure owner="dbo" name="VR_ReceptionDone_Get" >
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the VR_ReceptionDone view passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters>
                    <parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
                    <parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>			
                    <parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
                    <parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
                </parameters>
                <body><![CDATA[
                    
                    BEGIN
    
                    DECLARE @PageLowerBound int
                    DECLARE @PageUpperBound int
                    
                    -- Set the page bounds
                    SET @PageLowerBound = @PageSize * @PageIndex
                    SET @PageUpperBound = @PageLowerBound + @PageSize
    
                    IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
                    BEGIN
                        -- default order by to first column
                        SET @OrderBy = '[StatId]'
                    END
    
                    -- SQL Server 2005 Paging
                    DECLARE @SQL AS nvarchar(MAX)
                    SET @SQL = 'WITH PageIndex AS ('
                    SET @SQL = @SQL + ' SELECT'
                    IF @PageSize > 0
                    BEGIN
                        SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
                    END
                    SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
                    SET @SQL = @SQL + ', [StatId]'
                    SET @SQL = @SQL + ', [PatientCode]'
                    SET @SQL = @SQL + ', [TID]'
                    SET @SQL = @SQL + ', [FirstName]'
                    SET @SQL = @SQL + ', [LastName]'
                    SET @SQL = @SQL + ', [DOB]'
                    SET @SQL = @SQL + ', [Sex]'
                    SET @SQL = @SQL + ', [Nationality]'
                    SET @SQL = @SQL + ', [PatientStart]'
                    SET @SQL = @SQL + ', [IsCompleted]'
                    SET @SQL = @SQL + ', [ChargedCodes]'
                    SET @SQL = @SQL + ', [CreateDate]'
                    SET @SQL = @SQL + ' FROM [dbo].[VR_ReceptionDone]'
                    IF LEN(@WhereClause) > 0
                    BEGIN
                        SET @SQL = @SQL + ' WHERE ' + @WhereClause
                    END
                    SET @SQL = @SQL + ' ) SELECT'
                    SET @SQL = @SQL + ' [StatId],'
                    SET @SQL = @SQL + ' [PatientCode],'
                    SET @SQL = @SQL + ' [TID],'
                    SET @SQL = @SQL + ' [FirstName],'
                    SET @SQL = @SQL + ' [LastName],'
                    SET @SQL = @SQL + ' [DOB],'
                    SET @SQL = @SQL + ' [Sex],'
                    SET @SQL = @SQL + ' [Nationality],'
                    SET @SQL = @SQL + ' [PatientStart],'
                    SET @SQL = @SQL + ' [IsCompleted],'
                    SET @SQL = @SQL + ' [ChargedCodes],'
                    SET @SQL = @SQL + ' [CreateDate]'
                    SET @SQL = @SQL + ' FROM PageIndex'
                    SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
                    IF @PageSize > 0
                    BEGIN
                        SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
                    END
                    IF LEN(@OrderBy) > 0
                    BEGIN
                        SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
                    END
                    EXEC sp_executesql @SQL
    
                    -- get row count
                    SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
                    SET @SQL = @SQL + ' FROM [dbo].[VR_ReceptionDone]'
                    IF LEN(@WhereClause) > 0
                    BEGIN
                        SET @SQL = @SQL + ' WHERE ' + @WhereClause
                    END
                    EXEC sp_executesql @SQL
                    
                    END
                ]]></body>
            </procedure>
            
            
            <procedure owner="dbo" name="VR_ReceptionDone_Find_Dynamic"  skip="true">
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the VR_ReceptionDone table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters/>
                <body><![CDATA[
                    
                    BEGIN
                    
                    WITH PageIndex AS (
                        SELECT TOP {3} row_number() OVER (ORDER BY {1}) AS RowIndex
                        , [StatId]
                        , [PatientCode]
                        , [TID]
                        , [FirstName]
                        , [LastName]
                        , [DOB]
                        , [Sex]
                        , [Nationality]
                        , [PatientStart]
                        , [IsCompleted]
                        , [ChargedCodes]
                        , [CreateDate]
                        FROM [dbo].[VR_ReceptionDone] {0}
                    )
                    SELECT
                        [StatId],
                        [PatientCode],
                        [TID],
                        [FirstName],
                        [LastName],
                        [DOB],
                        [Sex],
                        [Nationality],
                        [PatientStart],
                        [IsCompleted],
                        [ChargedCodes],
                        [CreateDate]
                    FROM PageIndex
                    WHERE RowIndex > {2}
                    AND RowIndex <= {3}
                    ORDER BY {1};
                    
                    -- get total count
                    SELECT COUNT(*) AS TotalRowCount FROM [dbo].[VR_ReceptionDone] {0};
                    
                    END
                ]]></body>
            </procedure>
            
            <procedure owner="dbo" name="VR_ReceptionStart_Get_List" >
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets all records from the VR_ReceptionStart view
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters/>
                <body><![CDATA[
                    
                    SELECT
                        [StatId],
                        [PatientCode],
                        [TID],
                        [FirstName],
                        [LastName],
                        [DOB],
                        [Sex],
                        [Nationality],
                        [PatientStart],
                        [IsCompleted],
                        [ChargedCodes],
                        [CreateDate]
                    FROM
                        [dbo].[VR_ReceptionStart]
                        
                    SELECT @@ROWCOUNT			
                ]]></body>
            </procedure>
            
            <procedure owner="dbo" name="VR_ReceptionStart_Get" >
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the VR_ReceptionStart view passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters>
                    <parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
                    <parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>			
                    <parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
                    <parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
                </parameters>
                <body><![CDATA[
                    
                    BEGIN
    
                    DECLARE @PageLowerBound int
                    DECLARE @PageUpperBound int
                    
                    -- Set the page bounds
                    SET @PageLowerBound = @PageSize * @PageIndex
                    SET @PageUpperBound = @PageLowerBound + @PageSize
    
                    IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
                    BEGIN
                        -- default order by to first column
                        SET @OrderBy = '[StatId]'
                    END
    
                    -- SQL Server 2005 Paging
                    DECLARE @SQL AS nvarchar(MAX)
                    SET @SQL = 'WITH PageIndex AS ('
                    SET @SQL = @SQL + ' SELECT'
                    IF @PageSize > 0
                    BEGIN
                        SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
                    END
                    SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
                    SET @SQL = @SQL + ', [StatId]'
                    SET @SQL = @SQL + ', [PatientCode]'
                    SET @SQL = @SQL + ', [TID]'
                    SET @SQL = @SQL + ', [FirstName]'
                    SET @SQL = @SQL + ', [LastName]'
                    SET @SQL = @SQL + ', [DOB]'
                    SET @SQL = @SQL + ', [Sex]'
                    SET @SQL = @SQL + ', [Nationality]'
                    SET @SQL = @SQL + ', [PatientStart]'
                    SET @SQL = @SQL + ', [IsCompleted]'
                    SET @SQL = @SQL + ', [ChargedCodes]'
                    SET @SQL = @SQL + ', [CreateDate]'
                    SET @SQL = @SQL + ' FROM [dbo].[VR_ReceptionStart]'
                    IF LEN(@WhereClause) > 0
                    BEGIN
                        SET @SQL = @SQL + ' WHERE ' + @WhereClause
                    END
                    SET @SQL = @SQL + ' ) SELECT'
                    SET @SQL = @SQL + ' [StatId],'
                    SET @SQL = @SQL + ' [PatientCode],'
                    SET @SQL = @SQL + ' [TID],'
                    SET @SQL = @SQL + ' [FirstName],'
                    SET @SQL = @SQL + ' [LastName],'
                    SET @SQL = @SQL + ' [DOB],'
                    SET @SQL = @SQL + ' [Sex],'
                    SET @SQL = @SQL + ' [Nationality],'
                    SET @SQL = @SQL + ' [PatientStart],'
                    SET @SQL = @SQL + ' [IsCompleted],'
                    SET @SQL = @SQL + ' [ChargedCodes],'
                    SET @SQL = @SQL + ' [CreateDate]'
                    SET @SQL = @SQL + ' FROM PageIndex'
                    SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
                    IF @PageSize > 0
                    BEGIN
                        SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
                    END
                    IF LEN(@OrderBy) > 0
                    BEGIN
                        SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
                    END
                    EXEC sp_executesql @SQL
    
                    -- get row count
                    SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
                    SET @SQL = @SQL + ' FROM [dbo].[VR_ReceptionStart]'
                    IF LEN(@WhereClause) > 0
                    BEGIN
                        SET @SQL = @SQL + ' WHERE ' + @WhereClause
                    END
                    EXEC sp_executesql @SQL
                    
                    END
                ]]></body>
            </procedure>
            
            
            <procedure owner="dbo" name="VR_ReceptionStart_Find_Dynamic"  skip="true">
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the VR_ReceptionStart table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters/>
                <body><![CDATA[
                    
                    BEGIN
                    
                    WITH PageIndex AS (
                        SELECT TOP {3} row_number() OVER (ORDER BY {1}) AS RowIndex
                        , [StatId]
                        , [PatientCode]
                        , [TID]
                        , [FirstName]
                        , [LastName]
                        , [DOB]
                        , [Sex]
                        , [Nationality]
                        , [PatientStart]
                        , [IsCompleted]
                        , [ChargedCodes]
                        , [CreateDate]
                        FROM [dbo].[VR_ReceptionStart] {0}
                    )
                    SELECT
                        [StatId],
                        [PatientCode],
                        [TID],
                        [FirstName],
                        [LastName],
                        [DOB],
                        [Sex],
                        [Nationality],
                        [PatientStart],
                        [IsCompleted],
                        [ChargedCodes],
                        [CreateDate]
                    FROM PageIndex
                    WHERE RowIndex > {2}
                    AND RowIndex <= {3}
                    ORDER BY {1};
                    
                    -- get total count
                    SELECT COUNT(*) AS TotalRowCount FROM [dbo].[VR_ReceptionStart] {0};
                    
                    END
                ]]></body>
            </procedure>
            
            <procedure owner="dbo" name="VR_TIDChargedCode_Get_List" >
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets all records from the VR_TIDChargedCode view
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters/>
                <body><![CDATA[
                    
                    SELECT
                        [TID],
                        [ProcedureCodes]
                    FROM
                        [dbo].[VR_TIDChargedCode]
                        
                    SELECT @@ROWCOUNT			
                ]]></body>
            </procedure>
            
            <procedure owner="dbo" name="VR_TIDChargedCode_Get" >
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the VR_TIDChargedCode view passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters>
                    <parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
                    <parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>			
                    <parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
                    <parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
                </parameters>
                <body><![CDATA[
                    
                    BEGIN
    
                    DECLARE @PageLowerBound int
                    DECLARE @PageUpperBound int
                    
                    -- Set the page bounds
                    SET @PageLowerBound = @PageSize * @PageIndex
                    SET @PageUpperBound = @PageLowerBound + @PageSize
    
                    IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
                    BEGIN
                        -- default order by to first column
                        SET @OrderBy = '[TID]'
                    END
    
                    -- SQL Server 2005 Paging
                    DECLARE @SQL AS nvarchar(MAX)
                    SET @SQL = 'WITH PageIndex AS ('
                    SET @SQL = @SQL + ' SELECT'
                    IF @PageSize > 0
                    BEGIN
                        SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
                    END
                    SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
                    SET @SQL = @SQL + ', [TID]'
                    SET @SQL = @SQL + ', [ProcedureCodes]'
                    SET @SQL = @SQL + ' FROM [dbo].[VR_TIDChargedCode]'
                    IF LEN(@WhereClause) > 0
                    BEGIN
                        SET @SQL = @SQL + ' WHERE ' + @WhereClause
                    END
                    SET @SQL = @SQL + ' ) SELECT'
                    SET @SQL = @SQL + ' [TID],'
                    SET @SQL = @SQL + ' [ProcedureCodes]'
                    SET @SQL = @SQL + ' FROM PageIndex'
                    SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
                    IF @PageSize > 0
                    BEGIN
                        SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
                    END
                    IF LEN(@OrderBy) > 0
                    BEGIN
                        SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
                    END
                    EXEC sp_executesql @SQL
    
                    -- get row count
                    SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
                    SET @SQL = @SQL + ' FROM [dbo].[VR_TIDChargedCode]'
                    IF LEN(@WhereClause) > 0
                    BEGIN
                        SET @SQL = @SQL + ' WHERE ' + @WhereClause
                    END
                    EXEC sp_executesql @SQL
                    
                    END
                ]]></body>
            </procedure>
            
            
            <procedure owner="dbo" name="VR_TIDChargedCode_Find_Dynamic"  skip="true">
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the VR_TIDChargedCode table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters/>
                <body><![CDATA[
                    
                    BEGIN
                    
                    WITH PageIndex AS (
                        SELECT TOP {3} row_number() OVER (ORDER BY {1}) AS RowIndex
                        , [TID]
                        , [ProcedureCodes]
                        FROM [dbo].[VR_TIDChargedCode] {0}
                    )
                    SELECT
                        [TID],
                        [ProcedureCodes]
                    FROM PageIndex
                    WHERE RowIndex > {2}
                    AND RowIndex <= {3}
                    ORDER BY {1};
                    
                    -- get total count
                    SELECT COUNT(*) AS TotalRowCount FROM [dbo].[VR_TIDChargedCode] {0};
                    
                    END
                ]]></body>
            </procedure>
            
            <procedure owner="dbo" name="VR_UnitTable_Get_List" >
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets all records from the VR_UnitTable view
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters/>
                <body><![CDATA[
                    
                    SELECT
                        [Unit],
                        [UnitVN],
                        [DosageUnit],
                        [DosageUnitVN]
                    FROM
                        [dbo].[VR_UnitTable]
                        
                    SELECT @@ROWCOUNT			
                ]]></body>
            </procedure>
            
            <procedure owner="dbo" name="VR_UnitTable_Get" >
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the VR_UnitTable view passing page index and page count parameters
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters>
                    <parameter name="@WhereClause" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)" />
                    <parameter name="@OrderBy" type="varchar" direction="Input" size="2000" precision="0" scale="0" param="(2000)"/>			
                    <parameter name="@PageIndex" type="int" direction="Input" size="0" precision="10" scale="0" />
                    <parameter name="@PageSize" type="int" direction="Input" size="0" precision="10" scale="0" /> 
                </parameters>
                <body><![CDATA[
                    
                    BEGIN
    
                    DECLARE @PageLowerBound int
                    DECLARE @PageUpperBound int
                    
                    -- Set the page bounds
                    SET @PageLowerBound = @PageSize * @PageIndex
                    SET @PageUpperBound = @PageLowerBound + @PageSize
    
                    IF (@OrderBy IS NULL OR LEN(@OrderBy) < 1)
                    BEGIN
                        -- default order by to first column
                        SET @OrderBy = '[Unit]'
                    END
    
                    -- SQL Server 2005 Paging
                    DECLARE @SQL AS nvarchar(MAX)
                    SET @SQL = 'WITH PageIndex AS ('
                    SET @SQL = @SQL + ' SELECT'
                    IF @PageSize > 0
                    BEGIN
                        SET @SQL = @SQL + ' TOP ' + CONVERT(nvarchar, @PageUpperBound)
                    END
                    SET @SQL = @SQL + ' ROW_NUMBER() OVER (ORDER BY ' + @OrderBy + ') as RowIndex'
                    SET @SQL = @SQL + ', [Unit]'
                    SET @SQL = @SQL + ', [UnitVN]'
                    SET @SQL = @SQL + ', [DosageUnit]'
                    SET @SQL = @SQL + ', [DosageUnitVN]'
                    SET @SQL = @SQL + ' FROM [dbo].[VR_UnitTable]'
                    IF LEN(@WhereClause) > 0
                    BEGIN
                        SET @SQL = @SQL + ' WHERE ' + @WhereClause
                    END
                    SET @SQL = @SQL + ' ) SELECT'
                    SET @SQL = @SQL + ' [Unit],'
                    SET @SQL = @SQL + ' [UnitVN],'
                    SET @SQL = @SQL + ' [DosageUnit],'
                    SET @SQL = @SQL + ' [DosageUnitVN]'
                    SET @SQL = @SQL + ' FROM PageIndex'
                    SET @SQL = @SQL + ' WHERE RowIndex > ' + CONVERT(nvarchar, @PageLowerBound)
                    IF @PageSize > 0
                    BEGIN
                        SET @SQL = @SQL + ' AND RowIndex <= ' + CONVERT(nvarchar, @PageUpperBound)
                    END
                    IF LEN(@OrderBy) > 0
                    BEGIN
                        SET @SQL = @SQL + ' ORDER BY ' + @OrderBy
                    END
                    EXEC sp_executesql @SQL
    
                    -- get row count
                    SET @SQL = 'SELECT COUNT(*) AS TotalRowCount'
                    SET @SQL = @SQL + ' FROM [dbo].[VR_UnitTable]'
                    IF LEN(@WhereClause) > 0
                    BEGIN
                        SET @SQL = @SQL + ' WHERE ' + @WhereClause
                    END
                    EXEC sp_executesql @SQL
                    
                    END
                ]]></body>
            </procedure>
            
            
            <procedure owner="dbo" name="VR_UnitTable_Find_Dynamic"  skip="true">
                <comment><![CDATA[/*
----------------------------------------------------------------------------------------------------

-- Created By: RafflesMedical ()
-- Purpose: Gets records from the VR_UnitTable table using a dynamically generated query.
----------------------------------------------------------------------------------------------------
*/
]]></comment>
                <parameters/>
                <body><![CDATA[
                    
                    BEGIN
                    
                    WITH PageIndex AS (
                        SELECT TOP {3} row_number() OVER (ORDER BY {1}) AS RowIndex
                        , [Unit]
                        , [UnitVN]
                        , [DosageUnit]
                        , [DosageUnitVN]
                        FROM [dbo].[VR_UnitTable] {0}
                    )
                    SELECT
                        [Unit],
                        [UnitVN],
                        [DosageUnit],
                        [DosageUnitVN]
                    FROM PageIndex
                    WHERE RowIndex > {2}
                    AND RowIndex <= {3}
                    ORDER BY {1};
                    
                    -- get total count
                    SELECT COUNT(*) AS TotalRowCount FROM [dbo].[VR_UnitTable] {0};
                    
                    END
                ]]></body>
            </procedure>
            
</procedures>
</root>
